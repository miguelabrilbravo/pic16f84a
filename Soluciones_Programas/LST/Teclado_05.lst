MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;************************************* Teclado_05.asm ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Primero aparece un mensaje de presentación en movimiento. Luego en la primera línea aparece
                      00010 ; un mensaje estático y lo que se va escribiendo por el teclado aparece en la segunda fila.
                      00011 ;
                      00012 ; ZONA DE DATOS **********************************************************************
                      00013 
2007   3FF1           00014         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00015         LIST       P=16F84A
                      00016         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00017 
                      00018         CBLOCK  0x0C
                      00019         ENDC
                      00020 
                      00021 ; ZONA DE CÓDIGOS ********************************************************************
                      00022 
0000                  00023         ORG     0
0000   2805           00024         goto    Inicio
0004                  00025         ORG     4
0004   2811           00026         goto    ServicioInterrupcion
0005                  00027 Inicio
0005   20B0           00028         call    LCD_Inicializa
0006   3017           00029         movlw   MensajePresentacion     ; Visualiza mensaje en movimiento.
0007   2142           00030         call    LCD_MensajeMovimiento
0008   20EF           00031         call    LCD_Borra               ; Borra la pantalla y se sitúa en la 1ª línea.
0009   3063           00032         movlw   MensajePulsa            ; Visualiza el mensaje fijo de la primera línea.
000A   2134           00033         call    LCD_Mensaje
000B   20E3           00034         call    LCD_Linea2              ; Pasa a la segunda línea.
000C   2088           00035         call    Teclado_Inicializa              ; Configura líneas del teclado.
000D   3088           00036         movlw   b'10001000'             ; Habilita la interrupción RBI y la general.
000E   008B           00037         movwf   INTCON
000F                  00038 Principal
000F   0063           00039         sleep
0010   280F           00040         goto    Principal
                      00041 
                      00042 ; Subrutina "ServicioInterrupcion" ------------------------------------------------------
                      00043 ;
0011                  00044 ServicioInterrupcion
0011   2071           00045         call    Teclado_LeeHex          ; Obtiene el valor hexadecimal de la tecla pulsada.
0012   2129           00046         call    LCD_Nibble              ; Visualiza el valor en pantalla.
0013   208D           00047         call    Teclado_EsperaDejePulsar
0014   100B           00048         bcf     INTCON,RBIF
0015   0009           00049         retfie
                      00050 
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00051 ; "Mensajes" ----------------------------------------------------------------------------
                      00052 
0016                  00053 Mensajes
0016   0782           00054         addwf   PCL,F
0017                  00055 MensajePresentacion
0017   3420 3420 3420 00056         DT "              "
       3420 3420 3420 
       3420 3420 3420 
       3420 3420 3420 
       3420 3420 
0025   3445 3473 3474 00057         DT "Estudia \"Desarrollo de Productos Electronicos\" "
       3475 3464 3469 
       3461 3420 3422 
       3444 3465 3473 
       3461 3472 3472 
       346F 346C 346C 
       346F 3420 3464 
       3465 3420 3450 
       3472 346F 3464 
       3475 3463 3474 
       346F 3473 3420 
       3445 346C 3465 
       3463 3474 3472 
       346F 346E 3469 
       3463 346F 3473 
       3422 3420 
0054   3420 3420 3420 00058         DT "              ", 0x00
       3420 3420 3420 
       3420 3420 3420 
       3420 3420 3420 
       3420 3420 3400 
0063                  00059 MensajePulsa
0063   344C 3455 3443 00060         DT "LUCAS, pulsa:", 0x00
       3441 3453 342C 
       3420 3470 3475 
       346C 3473 3461 
       343A 3400 
                      00061 
                      00062         INCLUDE  <TECLADO.INC>
                      00001 ;**************************** Librería "TECLADO.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para la gestión de un teclado organizado en una matriz de 4 x 4 y 
                      00010 ; conectado al Puerto B según la disposición siguiente:
                      00011 ;
                      00012 ;                RB4 RB5 RB6 RB7
                      00013 ;                  ^    ^    ^    ^
                      00014 ;               |----|----|----|----|
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00015 ;       RB0 --> |  0 |  1 |  2 |  3 |
                      00016 ;               |----|----|----|----|
                      00017 ;       RB1 --> |  4 |  5 |  6 |  7 |
                      00018 ;               |----|----|----|----|
                      00019 ;       RB2 --> |  8 |  9 | 10| 11|
                      00020 ;               |----|----|----|----|
                      00021 ;       RB3 --> | 12| 13| 14| 15|
                      00022 ;               |----|----|----|----|
                      00023 ;
                      00024 ; Los números que se han dibujado dentro de cada cuadrado es el número de orden de las teclas
                      00025 ; que no tiene por qué coincidir con lo serigrafiado sobre ellas. El paso del número de orden
                      00026 ; de la tecla al valor que hay serigrafiado sobre la misma, se hace con una tabla de conversión.
                      00027 ;
                      00028 ; ZONA DE DATOS **********************************************************************
                      00029 ;
                      00030         CBLOCK
  0000000C            00031         Tecl_TeclaOrden                 ; Orden de la tecla a chequear.
                      00032         ENDC
                      00033 
  0000000F            00034 Tecl_UltimaTecla        EQU     d'15'           ; Valor de orden de la última tecla utilizada.
                      00035 
                      00036 ; Subrutina "Teclado_LeeHex" ************************************************************
                      00037 ;
                      00038 ; Cada tecla tiene asignado un número de orden que es contabilizado en la variable
                      00039 ; Tecl_TeclaOrden. Para convertir a su valor según el tipo de teclado en concreto, se
                      00040 ; utiliza una tabla de conversión. 
                      00041 ; A continuación, se expone la relación entre el número de orden de la tecla y los
                      00042 ; valores correspondientes para el teclado hexadecimal más utilizado.
                      00043 ;
                      00044 ;           ORDEN DE TECLA:             TECLADO HEX. UTILIZADO:
                      00045 ;                0   1   2   3                  1  2  3  F
                      00046 ;                4   5   6   7                  4  5  6  E
                      00047 ;                8   9  10  11                  7  8  9  D
                      00048 ;               12  13  14  15                  A  0  B  C
                      00049 ;
                      00050 ; Así, en este ejemplo, la tecla "7" ocupa el orden 8, la tecla "F" ocupa el orden 3 y la
                      00051 ; tecla "9" el orden 10.
                      00052 
                      00053 ; Si cambia el teclado, también hay cambiar de tabla de conversión.
                      00054 ;
                      00055 ; Entrada:      En (W) el orden de la tecla pulsada.
                      00056 ; Salida:       En (W) el valor hexadecimal para este teclado concreto.
                      00057 ;
0071                  00058 Teclado_LeeHex
0071   2095           00059         call    Teclado_LeeOrdenTecla   ; Lee el Orden de la tecla pulsada
0072   1C03           00060         btfss   STATUS,C                ; ¿Pulsa alguna tecla?, ¿C=1?
0073   2876           00061         goto    Tecl_FinLeeHex          ; No, por tanto sale.
0074   2077           00062         call    Tecl_ConvierteOrdenEnHex        ; Lo convierte en su valor real mediante tabla.
0075   1403           00063         bsf     STATUS,C                ; Vuelve a posicionar el Carry, porque la
0076                  00064 Tecl_FinLeeHex                          ; instrucción "addwf PCL,F" lo pone a 0.
0076   0008           00065         return
                      00066 ;
0077                  00067 Tecl_ConvierteOrdenEnHex                        ; Según el teclado utilizado resulta:
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0077   0782           00068         addwf   PCL,F
0078   3401 3402 3403 00069         DT      1h,2h,3h,0Fh            ; Primera fila del teclado.
       340F 
007C   3404 3405 3406 00070         DT      4h,5h,6h,0Eh            ; Segunda fila del teclado
       340E 
0080   3407 3408 3409 00071         DT      7h,8h,9h,0Dh            ; Tercera fila del teclado.
       340D 
0084   340A 3400 340B 00072         DT      0Ah,0h,0Bh,0Ch          ; Cuarta fila del teclado.
       340C 
0088                  00073 Teclado_FinTablaHex
                      00074 ;
                      00075 ; Esta tabla se sitúa al principio de la librería con el propósito que no supere la
                      00076 ; posición 0FFh de memoria ROM de programa. De todas formas, en caso que así fuera 
                      00077 ; visualizaría el siguiente mensaje de error en el proceso de ensamblado:
                      00078 ;
                      00079         IF (Teclado_FinTablaHex > 0xFF)
                      00080                 ERROR   "Atención: La tabla ha superado el tamaño de la página de los"
                      00081                 MESSG   "primeros 256 bytes de memoria ROM. NO funcionará correctamente."
                      00082         ENDIF
                      00083         
                      00084 ; Subrutina "Teclado_Inicializa" --------------------------------------------------------
                      00085 ;
                      00086 ; Esta subrutina configura las líneas del Puerto B según la conexión del teclado realizada
                      00087 ; y comprueba que no hay pulsada tecla alguna al principio.
                      00088 
0088                  00089 Teclado_Inicializa
0088   1683           00090         bsf     STATUS,RP0              ; Configura las líneas del puerto:
0089   30F0           00091         movlw   b'11110000'             ; <RB7:RB4> entradas, <RB3:RB0> salidas
008A   0086           00092         movwf   PORTB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
008B   1381           00093         bcf     OPTION_REG,NOT_RBPU     ; Habilita resistencia de Pull-Up del Puerto B.
008C   1283           00094         bcf     STATUS,RP0              ; Acceso al banco 0.
                      00095 ;       call    Teclado_EsperaDejePulsar
                      00096 ;       return
                      00097 ;
                      00098 ; Subrutina "Teclado_EsperaDejePulsar" --------------------------------------------------
                      00099 ;
                      00100 ;Permanece en esta subrutina mientras siga pulsada la tecla.
                      00101 ;
  000000F0            00102 Teclado_Comprobacion    EQU     b'11110000'
                      00103 
008D                  00104 Teclado_EsperaDejePulsar:
008D   30F0           00105         movlw   Teclado_Comprobacion    ; Pone a cero las cuatro líneas de salida del 
008E   0086           00106         movwf   PORTB                   ; Puerto B.
008F                  00107 Teclado_SigueEsperando
008F   2179           00108         call    Retardo_20ms            ; Espera a que se estabilicen los niveles de tensión.
0090   0806           00109         movf    PORTB,W         ; Lee el Puerto B.
0091   3CF0           00110         sublw   Teclado_Comprobacion    ; Si es lo mismo que escribió es que ya no pulsa 
0092   1D03           00111         btfss   STATUS,Z                ; tecla alguna.
0093   288F           00112         goto    Teclado_SigueEsperando
0094   0008           00113         return
                      00114 ;
                      00115 ; Subrutina "Teclado_LeeOrdenTecla" -----------------------------------------------------
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00116 ;
                      00117 ; Lee el teclado, obteniendo el orden de la tecla pulsada. 
                      00118 ;
                      00119 ; Salida:       En (W) el número de orden de la tecla pulsada. Además Carry se pone a "1" si
                      00120 ;               se pulsa una tecla ó a "0" si no se pulsa tecla alguna.
                      00121 ;
0095                  00122 Teclado_LeeOrdenTecla:
0095   018C           00123         clrf    Tecl_TeclaOrden         ; Todavía no ha empezado a chequear el teclado.
0096   30FE           00124         movlw   b'11111110'             ; Va a chequear primera fila.
0097                  00125 Tecl_ChequeaFila                                ; (Ver esquema de conexión).
0097   0086           00126         movwf   PORTB                   ; Activa la fila correspondiente.
0098                  00127 Tecl_Columna1
0098   1E06           00128         btfss   PORTB,4                 ; Chequea 1ª columna buscando un cero. 
0099   28AD           00129         goto    Tecl_GuardaValor                ; Sí, es cero y por tanto guarda su valor y sale.
009A   0A8C           00130         incf    Tecl_TeclaOrden,F               ; Va a chequear la siguiente tecla.
009B                  00131 Tecl_Columna2                           ; Repite proceso para las siguientes 
009B   1E86           00132         btfss   PORTB,5                 ; columnas.
009C   28AD           00133         goto    Tecl_GuardaValor
009D   0A8C           00134         incf    Tecl_TeclaOrden,F
009E                  00135 Tecl_Columna3           
009E   1F06           00136         btfss   PORTB,6
009F   28AD           00137         goto    Tecl_GuardaValor
00A0   0A8C           00138         incf    Tecl_TeclaOrden,F
00A1                  00139 Tecl_Columna4           
00A1   1F86           00140         btfss   PORTB,7
00A2   28AD           00141         goto    Tecl_GuardaValor
00A3   0A8C           00142         incf    Tecl_TeclaOrden,F
                      00143 ;
                      00144 ; Comprueba si ha chequeado la última tecla, en cuyo caso sale. Para ello testea si
                      00145 ; el contenido del registro Tecl_TeclaOrden es igual al número de teclas del teclado.
                      00146 ;
00A4                  00147 Tecl_TerminaColumnas
00A4   300F           00148         movlw   Tecl_UltimaTecla
00A5   020C           00149         subwf   Tecl_TeclaOrden,W               ; (W) = (Tecl_TeclaOrden)-Tecl_UltimaTecla.
00A6   1803           00150         btfsc   STATUS,C                ; ¿C=0?, ¿(W) negativo?, ¿(Tecl_TeclaOrden)<15?.
00A7   28AB           00151         goto    Tecl_NoPulsada          ; No, se ha llegado al final del chequeo.
00A8   1403           00152         bsf     STATUS,C                ; Sí. Va a chequear la siguiente fila.
00A9   0D06           00153         rlf     PORTB,W         ; Apunta a la siguiente fila.
00AA   2897           00154         goto    Tecl_ChequeaFila        
00AB                  00155 Tecl_NoPulsada
00AB   1003           00156         bcf     STATUS,C                ; Posiciona C=0, indicando que no ha pulsado
00AC   28AF           00157         goto    Tecl_FinTecladoLee      ; tecla alguna y sale.
00AD                  00158 Tecl_GuardaValor
00AD   080C           00159         movf    Tecl_TeclaOrden,W               ; El orden de la tecla pulsada en (W) y sale.
00AE   1403           00160         bsf     STATUS,C                ; Como hay tecla tecla pulsada, pone C=1. 
00AF                  00161 Tecl_FinTecladoLee
00AF   0008           00162         return
                      00163         
                      00164 ;       ===================================================================
                      00165 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00166 ;         E. Palacios, F. Remiro y L. López.
                      00167 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00168 ;       ===================================================================
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00063         INCLUDE  <LCD_4BIT.INC>
                      00001 ;**************************** Librería "LCD_4BIT.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00010 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00011 ;
                      00012 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00013 ; conexiones son:
                      00014 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00015 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00016 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00017 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00018 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00019 ;
                      00020 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00021 ;
                      00022 ; ZONA DE DATOS *********************************************************************
                      00023 
                      00024         CBLOCK
  0000000D            00025         LCD_Dato
  0000000E            00026         LCD_GuardaDato
  0000000F            00027         LCD_GuardaTRISB
  00000010            00028         LCD_Auxiliar1
  00000011            00029         LCD_Auxiliar2
                      00030         ENDC
                      00031 
  00000010            00032 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00033 
                      00034 #DEFINE  LCD_PinRS      PORTA,0
                      00035 #DEFINE  LCD_PinRW      PORTA,1
                      00036 #DEFINE  LCD_PinEnable  PORTA,2
                      00037 #DEFINE  LCD_BusDatos   PORTB
                      00038 
                      00039 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00040 ;
                      00041 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00042 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00043 ; configuración inicial hay que hacerla como sigue:
                      00044 ;
00B0                  00045 LCD_Inicializa
00B0   1683           00046         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
00B1   1005           00047         bcf     LCD_PinRS               ; R/W y E.
00B2   1105           00048         bcf     LCD_PinEnable
00B3   1085           00049         bcf     LCD_PinRW
00B4   1283           00050         bcf     STATUS,RP0
00B5   1085           00051         bcf     LCD_PinRW               ; En caso de que esté conectado, le indica
                      00052                                         ; que se va a escribir en el LCD.
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B6   1105           00053         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD, poniendo E=0.
00B7   1005           00054         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
00B8   2179           00055         call    Retardo_20ms
00B9   3030           00056         movlw   b'00110000'     
00BA   20C8           00057         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
00BB   217D           00058         call    Retardo_5ms     
00BC   3030           00059         movlw   b'00110000'     
00BD   20C8           00060         call    LCD_EscribeLCD
00BE   2166           00061         call    Retardo_200micros
00BF   3030           00062         movlw   b'00110000'     
00C0   20C8           00063         call    LCD_EscribeLCD
00C1   3020           00064         movlw   b'00100000'             ; Interface de 4 bits.
00C2   20C8           00065         call    LCD_EscribeLCD
                      00066 
                      00067 ; Ahora configura el resto de los parámetros: 
                      00068 
00C3   20F1           00069         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
00C4   20EF           00070         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
00C5   20ED           00071         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
00C6   20DF           00072         call    LCD_CursorIncr          ; Cursor en modo incrementar.
00C7   0008           00073         return
                      00074 
                      00075 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00076 ;
                      00077 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el
                      00078 ; pin "Enable" del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B
                      00079 ; que no son utilizadas para el LCD (pines RB3.. RB0), primero se lee estas líneas y después
                      00080 ; se vuelve a enviar este dato sin cambiarlo.
                      00081 
00C8                  00082 LCD_EscribeLCD
00C8   39F0           00083         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
00C9   008D           00084         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
00CA   0806           00085         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
00CB   390F           00086         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
00CC   048D           00087         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00088                                         ; y en la parte baja lo que había antes.
00CD   1683           00089         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00CE   0806           00090         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
00CF   008F           00091         movwf   LCD_GuardaTRISB
00D0   300F           00092         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
00D1   0586           00093         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
00D2   1283           00094         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00095 ;
00D3   080D           00096         movf    LCD_Dato,W              ; Recupera el dato a enviar.
00D4   0086           00097         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
00D5   1505           00098         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD, mediante un pequeño
00D6   1105           00099         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
00D7   1C05           00100         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
00D8   217F           00101         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
00D9   216B           00102         call    Retardo_50micros
00DA   1683           00103         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
00DB   080F           00104         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DC   0086           00105         movwf   PORTB                   ; Realmente es TRISB.
00DD   1283           00106         bcf     STATUS,RP0              ; Acceso al Banco 0.
00DE   0008           00107         return
                      00108 
                      00109 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00110 ;
                      00111 ;Los comandos que pueden ser ejecutados son:
                      00112 ;
00DF                  00113 LCD_CursorIncr                          ; Cursor en modo incrementar.
00DF   3006           00114         movlw   b'00000110'
00E0   28F2           00115         goto    LCD_EnviaComando
00E1                  00116 LCD_Linea1                              ; Cursor al principio de la Línea 1.
00E1   3080           00117         movlw   b'10000000'             ; Dirección 00h de la DDRAM
00E2   28F2           00118         goto    LCD_EnviaComando
00E3                  00119 LCD_Linea2                              ; Cursor al principio de la Línea 2.
00E3   30C0           00120         movlw   b'11000000'             ; Dirección 40h de la DDRAM
00E4   28F2           00121         goto    LCD_EnviaComando
00E5                  00122 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
00E5   3880           00123         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
00E6   28F2           00124         goto    LCD_EnviaComando        ; registro W.
00E7                  00125 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
00E7   38C0           00126         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
00E8   28F2           00127         goto    LCD_EnviaComando        ; registro W.
00E9                  00128 LCD_OFF                         ; Pantalla apagada.
00E9   3008           00129         movlw   b'00001000'
00EA   28F2           00130         goto    LCD_EnviaComando
00EB                  00131 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
00EB   300E           00132         movlw   b'00001110'
00EC   28F2           00133         goto    LCD_EnviaComando
00ED                  00134 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
00ED   300C           00135         movlw   b'00001100'
00EE   28F2           00136         goto    LCD_EnviaComando
00EF                  00137 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
00EF   3001           00138         movlw   b'00000001'             ; cursor a principio de la línea 1.
00F0   28F2           00139         goto    LCD_EnviaComando
00F1                  00140 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
00F1   3028           00141         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00142 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00143 
                      00144 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00145 ;
                      00146 ; "LCD_EnviaComando": Escribe un comando en el registro del módulo LCD. La palabra de
                      00147 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00148 ; "LCD_Caracter": Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00149 ; a través del registro W. Trabaja en Modo Dato.
                      00150 ;
00F2                  00151 LCD_EnviaComando
00F2   1005           00152         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
00F3   28F6           00153         goto    LCD_Envia
00F4                  00154 LCD_Caracter
00F4   1405           00155         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
00F5   20FB           00156         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
00F6                  00157 LCD_Envia
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F6   008E           00158         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
00F7   20C8           00159         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
00F8   0E0E           00160         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00161                                         ; nibble bajo del dato a enviar a parte alta del byte.
00F9   20C8           00162         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
00FA   0008           00163         return  
                      00164 
                      00165 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00166 ;
                      00167 ; A partir del carácter ASCII número 127, los códigos de los caracteres definidos en la
                      00168 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00169 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00170 ;
                      00171 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00172 ; que puedan ser visualizado en el módulo LM016L.
                      00173 ; 
                      00174 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00175 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00176 
00FB                  00177 LCD_CodigoCGROM
00FB   008D           00178         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
00FC                  00179 LCD_EnheMinuscula                       ; un carácter especial.
00FC   3CF1           00180         sublw   'ñ'                     ; ¿Es la "ñ"?
00FD   1D03           00181         btfss   STATUS,Z
00FE   2902           00182         goto    LCD_EnheMayuscula       ; No es "ñ".
00FF   30EE           00183         movlw   b'11101110'             ; Código CGROM de la "ñ".
0100   008D           00184         movwf   LCD_Dato
0101   290F           00185         goto    LCD_FinCGROM
0102                  00186 LCD_EnheMayuscula
0102   080D           00187         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0103   3CD1           00188         sublw   'Ñ'                     ; ¿Es la "Ñ"?
0104   1D03           00189         btfss   STATUS,Z
0105   2909           00190         goto    LCD_Grado               ; No es "Ñ".
0106   30EE           00191         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
0107   008D           00192         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
0108   290F           00193         goto    LCD_FinCGROM    
0109                  00194 LCD_Grado
0109   080D           00195         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
010A   3CBA           00196         sublw   'º'                     ; ¿Es el símbolo "º"?
010B   1D03           00197         btfss   STATUS,Z
010C   290F           00198         goto    LCD_FinCGROM            ; No es "º".
010D   30DF           00199         movlw   b'11011111'             ; Código CGROM del símbolo "º".
010E   008D           00200         movwf   LCD_Dato
010F                  00201 LCD_FinCGROM
010F   080D           00202         movf    LCD_Dato,W              ; En (W) el código buscado.
0110   0008           00203         return
                      00204 
                      00205 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00206 ;
                      00207 ; Visualiza espacios en blanco.
                      00208 
0111                  00209 LCD_LineaEnBlanco
0111   3010           00210         movlw   LCD_CaracteresPorLinea
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0112   2918           00211         goto    LCD_EnviaBlancos
0113                  00212 LCD_UnEspacioBlanco
0113   3001           00213         movlw   .1
0114   2918           00214         goto    LCD_EnviaBlancos
0115                  00215 LCD_DosEspaciosBlancos
0115   3002           00216         movlw   .2
0116   2918           00217         goto    LCD_EnviaBlancos
0117                  00218 LCD_TresEspaciosBlancos
0117   3003           00219         movlw   .3
0118                  00220 LCD_EnviaBlancos
0118   0090           00221         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
0119                  00222 LCD_EnviaOtroBlanco     
0119   3020           00223         movlw   ' '                     ; Esto es un espacio en blanco.
011A   20F4           00224         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
011B   0B90           00225         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
011C   2919           00226         goto    LCD_EnviaOtroBlanco
011D   0008           00227         return
                      00228 
                      00229 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00230 ;
                      00231 ; Subrutina "LCD_ByteCompleto": Visualiza el byte que almacena el registro W en el
                      00232 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00233 ;
                      00234 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero, 
                      00235 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00236 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00237 ;
                      00238 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00239 ;
011E                  00240 LCD_Byte
011E   0091           00241         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
011F   39F0           00242         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
0120   1D03           00243         btfss   STATUS,Z                ; Si es cero lo apaga.
0121   2926           00244         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
0122   3020           00245         movlw   ' '                     ; Visualiza un espacio en blanco.
0123   20F4           00246         call    LCD_Caracter
0124   2928           00247         goto    LCD_VisualizaBajo
                      00248 
0125                  00249 LCD_ByteCompleto
0125   0091           00250         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0126                  00251 LCD_VisualizaAlto
0126   0E11           00252         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
0127   2129           00253         call    LCD_Nibble              ; Lo visualiza.
0128                  00254 LCD_VisualizaBajo
0128   0811           00255         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00256 ;       call    LCD_Nibble              ; Lo visualiza.
                      00257 ;       return
                      00258 
                      00259 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00260 ;
                      00261 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00262 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00263 ; - Si (W)=b'01010110', se visualizará "6". 
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00264 ; - Si (W)=b'10101110', se visualizará "E". 
                      00265 ;
0129                  00266 LCD_Nibble
0129   390F           00267         andlw   b'00001111'             ; Se queda con la parte baja.
012A   0090           00268         movwf   LCD_Auxiliar1           ; Lo guarda.
012B   3C09           00269         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
012C   1C03           00270         btfss   STATUS,C        
012D   2931           00271         goto    LCD_EnviaByteLetra
012E   0810           00272         movf    LCD_Auxiliar1,W
012F   3E30           00273         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
0130   2933           00274         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
0131                  00275 LCD_EnviaByteLetra
0131   0810           00276         movf    LCD_Auxiliar1,W
0132   3E37           00277         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
0133                  00278 LCD_FinVisualizaDigito
0133   28F4           00279         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00280                                         ; para no sobrecargar la pila.
                      00064         INCLUDE  <LCD_MENS.INC>
                      00001 ;**************************** Librería "LCD_MENS.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00010 
                      00011         CBLOCK
  00000012            00012         LCD_ApuntaCaracter              ; Indica la posición del carácter a visualizar
                      00013                                         ; respecto del comienzo de todos los mensajes,
                      00014                                         ; (posición de la etiqueta "Mensajes").
  00000013            00015         LCD_ValorCaracter                       ; Código ASCII del carácter a 
                      00016         ENDC                            ; visualizar.
                      00017 
                      00018 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00019 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00020 
                      00021 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00022 ;
                      00023 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00024 ;
                      00025 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
                      00026 ; tenga la siguiente estructura:
                      00027 ;
                      00028 ; Mensajes                              ; ¡Etiqueta obligatoria!
                      00029 ;       addwf   PCL,F
                      00030 ; Mensaje0                              ; Posición inicial del mensaje.
                      00031 ;       DT ".. ..", 0x00                        ; Mensaje terminado en 0x00.
                      00032 ; Mensaje1
                      00033 ;       ...     
                      00034 ;       ...
                      00035 ; FinMensajes
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00036 ;
                      00037 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00038 ;
                      00039 ;       movlw   Mensaje0                        ; Carga la posición del mensaje.
                      00040 ;       call    LCD_Mensaje             ; Visualiza el mensaje.
                      00041 ;
0134                  00042 LCD_Mensaje
0134   0092           00043         movwf   LCD_ApuntaCaracter      ; Posición de primer carácter del mensaje.
0135   3016           00044         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0136   0292           00045         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
0137   0392           00046         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0138                  00047 LCD_VisualizaOtroCaracter
0138   0812           00048         movf    LCD_ApuntaCaracter,W
0139   2016           00049         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
013A   0093           00050         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
013B   0893           00051         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
013C   1903           00052         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
013D   2941           00053         goto    LCD_FinMensaje          ; de mensaje, sale fuera.
013E                  00054 LCD_NoUltimoCaracter
013E   20F4           00055         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
013F   0A92           00056         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
0140   2938           00057         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
0141                  00058 LCD_FinMensaje
0141   0008           00059         return                          ; Vuelve al programa principal.
                      00060 
                      00061 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00062 ;
                      00063 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00064 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00065 ;
                      00066 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00067 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00068 ;
                      00069         CBLOCK  
  00000014            00070         LCD_CursorPosicion              ; Contabiliza la posición del cursor dentro de la
                      00071         ENDC                            ; pantalla LCD
                      00072 
0142                  00073 LCD_MensajeMovimiento
0142   0092           00074         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
0143   3016           00075         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0144   0292           00076         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
0145   0392           00077         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0146                  00078 LCD_PrimeraPosicion
0146   0194           00079         clrf    LCD_CursorPosicion      ; El cursor en la posición 0 de la línea.
0147   20EF           00080         call    LCD_Borra               ; Se sitúa en la primera posición de la línea 1 y
0148                  00081 LCD_VisualizaCaracter                   ; borra la pantalla.
0148   3010           00082         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
0149   0214           00083         subwf   LCD_CursorPosicion,W
014A   1D03           00084         btfss   STATUS,Z
014B   2951           00085         goto    LCD_NoEsFinalLinea
014C                  00086 LCD_EsFinalLinea
014C   2173           00087         call    Retardo_200ms           ; Lo mantiene visualizado durante este tiempo.
014D   2173           00088         call    Retardo_200ms
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014E   300F           00089         movlw   LCD_CaracteresPorLinea-1        ; Apunta a la posición del segundo carácter visualizado
014F   0292           00090         subwf   LCD_ApuntaCaracter,F    ; en pantalla y que será el primero en la siguiente
0150   2946           00091         goto    LCD_PrimeraPosicion      ; visualización de línea, para producir el efecto
0151                  00092 LCD_NoEsFinalLinea                      ; de desplazamiento hacia la izquierda.
0151   0812           00093         movf    LCD_ApuntaCaracter,W
0152   2016           00094         call    Mensajes                        ; Obtiene el ASCII del carácter apuntado.
0153   0093           00095         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
0154   0893           00096         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
0155   1903           00097         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
0156   295B           00098         goto    LCD_FinMovimiento       ; de mensaje, sale fuera.
0157                  00099 LCD_NoUltimoCaracter2
0157   20F4           00100         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
0158   0A94           00101         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00102                                         ; cursor en la pantalla.
0159   0A92           00103         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
015A   2948           00104         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
015B                  00105 LCD_FinMovimiento                       ; de la línea.
015B   0008           00106         return                          ; Vuelve al programa principal.
                      00065         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000015            00021         R_ContA                         ; Contadores para los retardos.
  00000016            00022         R_ContB
  00000017            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
015C                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
015C   0000           00033         nop                             ; Aporta 1 ciclo máquina.
015D   0000           00034         nop                             ; Aporta 1 ciclo máquina.
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015E   0000           00035         nop                             ; Aporta 1 ciclo máquina.
015F   0000           00036         nop                             ; Aporta 1 ciclo máquina.
0160   0000           00037         nop                             ; Aporta 1 ciclo máquina.
0161                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
0161   0000           00039         nop                             ; Aporta 1 ciclo máquina.
0162                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
0162   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
0163                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0163   0000           00046         nop                             ; Aporta 1 ciclo máquina.
0164   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
0165   296F           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0166                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
0166   0000           00050         nop                             ; Aporta 1 ciclo máquina.
0167   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0168   296F           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0169                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
0169   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
016A   296F           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
016B                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
016B   0000           00057         nop                             ; Aporta 1 ciclo máquina.
016C   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
016D   296F           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
016E                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
016E   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
016F                  00066 RetardoMicros
016F   0095           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
0170                  00068 Rmicros_Bucle
0170   0B95           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0171   2970           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
0172   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
0173                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
0173   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0174   2982           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0175                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
0175   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0176   2982           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0177                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
0177   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
0178   2982           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0179                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
0179   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
017A   2982           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
017B                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
017B   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
017C   2982           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
017D                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
017D   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
017E   2982           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
017F                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
017F   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0180   2982           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0181                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
0181   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
0182                  00111 Retardos_ms
0182   0096           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
0183                  00113 R1ms_BucleExterno
0183   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
0184   0095           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
0185                  00116 R1ms_BucleInterno
0185   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
0186   0B95           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
0187   2985           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
0188   0B96           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0189   2983           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
018A   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
018B                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
018B   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
018C   2996           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
018D                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
018D   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018E   2996           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
018F                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
018F   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0190   2996           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0191                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
0191   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0192   2996           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0193                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
0193   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0194   2996           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0195                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
0195   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
0196                  00160 Retardo_1Decima
0196   0097           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
0197                  00162 R1Decima_BucleExterno2
0197   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
0198   0096           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
0199                  00165 R1Decima_BucleExterno
0199   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
019A   0095           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
019B                  00168 R1Decima_BucleInterno          
019B   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
019C   0B95           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
019D   299B           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
019E   0B96           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
019F   2999           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
01A0   0B97           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01A1   2997           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
01A2   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00066         END
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
DC                                00000001
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
F                                 00000001
FSR                               00000004
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000005
LCD_2Lineas4Bits5x7               000000F1
LCD_ApuntaCaracter                00000012
LCD_Auxiliar1                     00000010
LCD_Auxiliar2                     00000011
LCD_Borra                         000000EF
LCD_BusDatos                      PORTB
LCD_Byte                          0000011E
LCD_ByteCompleto                  00000125
LCD_Caracter                      000000F4
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   000000FB
LCD_CursorIncr                    000000DF
LCD_CursorOFF                     000000ED
LCD_CursorON                      000000EB
LCD_CursorPosicion                00000014
LCD_Dato                          0000000D
LCD_DosEspaciosBlancos            00000115
LCD_EnheMayuscula                 00000102
LCD_EnheMinuscula                 000000FC
LCD_Envia                         000000F6
LCD_EnviaBlancos                  00000118
LCD_EnviaByteLetra                00000131
LCD_EnviaComando                  000000F2
LCD_EnviaOtroBlanco               00000119
LCD_EsFinalLinea                  0000014C
LCD_EscribeLCD                    000000C8
LCD_FinCGROM                      0000010F
LCD_FinMensaje                    00000141
LCD_FinMovimiento                 0000015B
LCD_FinVisualizaDigito            00000133
LCD_Grado                         00000109
LCD_GuardaDato                    0000000E
LCD_GuardaTRISB                   0000000F
LCD_Inicializa                    000000B0
LCD_Linea1                        000000E1
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

LCD_Linea2                        000000E3
LCD_LineaEnBlanco                 00000111
LCD_Mensaje                       00000134
LCD_MensajeMovimiento             00000142
LCD_Nibble                        00000129
LCD_NoEsFinalLinea                00000151
LCD_NoUltimoCaracter              0000013E
LCD_NoUltimoCaracter2             00000157
LCD_OFF                           000000E9
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                000000E5
LCD_PosicionLinea2                000000E7
LCD_PrimeraPosicion               00000146
LCD_TresEspaciosBlancos           00000117
LCD_UnEspacioBlanco               00000113
LCD_ValorCaracter                 00000013
LCD_VisualizaAlto                 00000126
LCD_VisualizaBajo                 00000128
LCD_VisualizaCaracter             00000148
LCD_VisualizaOtroCaracter         00000138
MensajePresentacion               00000017
MensajePulsa                      00000063
Mensajes                          00000016
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Principal                         0000000F
R1Decima_BucleExterno             00000199
R1Decima_BucleExterno2            00000197
R1Decima_BucleInterno             0000019B
R1ms_BucleExterno                 00000183
R1ms_BucleInterno                 00000185
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           00000015
R_ContB                           00000016
R_ContC                           00000017
RetardoMicros                     0000016F
Retardo_100micros                 00000169
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

Retardo_100ms                     00000175
Retardo_10micros                  0000015C
Retardo_10ms                      0000017B
Retardo_10s                       0000018D
Retardo_1Decima                   00000196
Retardo_1ms                       00000181
Retardo_1s                        00000193
Retardo_200micros                 00000166
Retardo_200ms                     00000173
Retardo_20micros                  0000016E
Retardo_20ms                      00000179
Retardo_20s                       0000018B
Retardo_2ms                       0000017F
Retardo_2s                        00000191
Retardo_4micros                   00000162
Retardo_500micros                 00000163
Retardo_500ms                     00000195
Retardo_50micros                  0000016B
Retardo_50ms                      00000177
Retardo_5micros                   00000161
Retardo_5ms                       0000017D
Retardo_5s                        0000018F
Retardos_ms                       00000182
Rmicros_Bucle                     00000170
STATUS                            00000003
ServicioInterrupcion              00000011
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
Tecl_ChequeaFila                  00000097
Tecl_Columna1                     00000098
Tecl_Columna2                     0000009B
Tecl_Columna3                     0000009E
Tecl_Columna4                     000000A1
Tecl_ConvierteOrdenEnHex          00000077
Tecl_FinLeeHex                    00000076
Tecl_FinTecladoLee                000000AF
Tecl_GuardaValor                  000000AD
Tecl_NoPulsada                    000000AB
Tecl_TeclaOrden                   0000000C
Tecl_TerminaColumnas              000000A4
Tecl_UltimaTecla                  0000000F
Teclado_Comprobacion              000000F0
Teclado_EsperaDejePulsar          0000008D
Teclado_FinTablaHex               00000088
Teclado_Inicializa                00000088
Teclado_LeeHex                    00000071
Teclado_LeeOrdenTecla             00000095
Teclado_SigueEsperando            0000008F
MPASM 03.50 Released                           TECLADO_05.ASM   10-11-2003  17:53:02         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXX------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   416
Program Memory Words Free:   608


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     2 reported,     0 suppressed

