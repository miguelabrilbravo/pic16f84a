MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;********************************** Sensor_ Ultrasonido_01.asm **************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Programa para un medidor de distancias hasta un objeto utilizando sensor por ultrasonido SRF04.
                      00010 ;
                      00011 ; Para el control del sensor en primer lugar se genera un  pulso de 10 µs a nivel alto por la
                      00012 ; línea RA3 que se conecta a la entrada de disparo del sensor. Seguidamente se espera a que en el
                      00013 ; sensor se ponga un nivel alto en la salida ECO que se conecta a la línea RA4 y se utilizan las
                      00014 ; interrupciones por desbordamiento del Timer 0 para medir el tiempo que está en alto el pulso.
                      00015 ; Seguidamente se visualiza en el módulo LCD el valor de la distancia hasta el objeto expresada en
                      00016 ; centímetros.
                      00017 ;
                      00018 ; Por cada centímetro de distancia al objeto el SRF04 aumenta 60 µs la anchura del pulso.
                      00019 ; En este programa la distancia mínima es 3 cm y la máxima 250 cm.
                      00020 ;
                      00021 ; ZONA DE DATOS **********************************************************************
                      00022 
2007   3FF1           00023         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00024         LIST       P=16F84A
                      00025         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00026 
                      00027         CBLOCK  0x0C
  0000000C            00028         Distancia                               ; Se expresará en centímetros.
                      00029         ENDC
                      00030 
                      00031 #DEFINE  Disparo        PORTA,3                 ; Disparo para iniciar la medida.
                      00032 #DEFINE  Eco            PORTA,4         ; Pulso cuya anchura hay que medir.
                      00033 
  00000003            00034 MinimaDistancia EQU     .3
  000000FA            00035 MaximaDistancia EQU     .250
  FFFFFFE5            00036 TMR0_Carga60micros      EQU     -d'27'  ; Valor obtenido experimentalmente con la
                      00037                                         ; ventana Stopwatch para una interrupción del
                      00038 ; Timer 0 cada 60 µs.  Si no mide correctamente por las tolerancias de los componentes habrá
                      00039 ; que hacer un ajuste fino de este valor, comprobándolo sobre las condiciones reales.
                      00040 ;
                      00041 ; ZONA DE CÓDIGOS ********************************************************************
                      00042 
0000                  00043         ORG     0
0000   2839           00044         goto    Inicio
0004                  00045         ORG     4
0004   2851           00046         goto    ServicioInterrupcion
                      00047 
0005                  00048 Mensajes
0005   0782           00049         addwf   PCL,F
0006                  00050 MensajeDistancia
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006   3420 3420 3420 00051         DT "   Distancia: ", 0x00
       3444 3469 3473 
       3474 3461 346E 
       3463 3469 3461 
       343A 3420 3400 
0015                  00052 MensajeCentimetro
0015   3420 3463 346D 00053         DT " cm", 0x00
       3400 
0019                  00054 MensajeDistanciaMenor
0019   3444 3469 3473 00055         DT "Dist. MENOR de:", 0x00
       3474 342E 3420 
       344D 3445 344E 
       344F 3452 3420 
       3464 3465 343A 
       3400 
0029                  00056 MensajeDistanciaMayor
0029   3444 3469 3473 00057         DT "Dist. MAYOR de:", 0x00
       3474 342E 3420 
       344D 3441 3459 
       344F 3452 3420 
       3464 3465 343A 
       3400 
0039                  00058 Inicio
0039   20C6           00059         call    LCD_Inicializa
003A   1683           00060         bsf     STATUS,RP0
003B   1185           00061         bcf     Disparo
003C   1605           00062         bsf     Eco
003D   3000           00063         movlw   b'00000000'             ; Prescaler de 2 para el TMR0.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003E   0081           00064         movwf   OPTION_REG
003F   1283           00065         bcf     STATUS,RP0
0040   1185           00066         bcf     Disparo                 ; Inicializa línea de disparo en bajo.
0041                  00067 Principal
0041   018C           00068         clrf    Distancia                       ; Inicializa el registro.
0042   1585           00069         bsf     Disparo                 ; Comienza el pulso de disparo.
0043   2091           00070         call    Retardo_20micros                ; Duración del pulso.
0044   1185           00071         bcf     Disparo                 ; Final del pulso de disparo.
0045                  00072 Espera_Eco_1
0045   1E05           00073         btfss   Eco                     ; Si ECO=0, espera el flanco de subida de la señal
0046   2845           00074         goto    Espera_Eco_1            ; de salida del sensor.
0047   30E5           00075         movlw   TMR0_Carga60micros      ; Ya se ha producido el flanco de subida.
0048   0081           00076         movwf   TMR0                    ; Carga el Timer 0.
0049   30A0           00077         movlw   b'10100000'             ; Autoriza interrupción del TMR0 (T0IE)
004A   008B           00078         movwf   INTCON
004B                  00079 Espera_Eco_0
004B   1A05           00080         btfsc   Eco                     ; Espera flanco de bajada de la señal de la salida
004C   284B           00081         goto    Espera_Eco_0            ; del SRF04.
004D   018B           00082         clrf    INTCON                  ; Se ha producido el flanco de bajada. Prohíbe interrup.
004E   205A           00083         call    Visualiza                       ; Visualiza la distancia.
004F   20B4           00084         call    Retardo_2s              ; Espera un tiempo hasta la próxima medida.
0050   2841           00085 Fin     goto    Principal
                      00086         
                      00087 ; Subrutina "ServicioInterrupcion" ------------------------------------------------------
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00088 ;
                      00089 ; Se ejecuta debido a la petición de interrupción del Timer 0 cada 60 µs que es el incremento
                      00090 ; de la anchura de pulso por centímetro de distancia medido. La variable "Distancia" contiene el
                      00091 ; valor de la distancia expresada en centímetros.
                      00092 ;
0051                  00093 ServicioInterrupcion
0051   30E5           00094         movlw   TMR0_Carga60micros      ; Carga el Timer 0.
0052   0081           00095         movwf   TMR0
0053   3001           00096         movlw   .1                      ; Se utiliza instrucción "addwf", en lugar de "incf"
0054   078C           00097         addwf   Distancia,F             ; para posicionar flag de Carry.
0055   30FA           00098         movlw   MaximaDistancia         ; En caso de desbordamiento carga su máximo valor.
0056   1803           00099         btfsc   STATUS,C
0057   008C           00100         movwf   Distancia
0058   110B           00101         bcf     INTCON,T0IF
0059   0009           00102         retfie
                      00103 
                      00104 ; Subrutina "Visualiza" -----------------------------------------------------------------
                      00105 ;
                      00106 ; Visualiza la distancia expresada en centímetros. Se hace de manera que cuando haya que
                      00107 ; visualizar un número mayor de 99 las decenas siempre se visualicen aunque sean cero.
                      00108 ; Y cuando sea menor de 99 las decenas no se visualicen si es cero.
                      00109 ;
                      00110 ; Si la distancia es menor de 3 cm o mayor de 250 cm aparece un mensaje de error.
                      00111 ;
005A                  00112 Visualiza
005A   2102           00113         call    LCD_Borra               ; Borra la pantalla anterior.
005B   3003           00114         movlw   MinimaDistancia         ; Va a comprobar si es menor del mínimo admisible.
005C   020C           00115         subwf   Distancia,W             ; (W)=(Distancia)-MinimaDistancia
005D   1C03           00116         btfss   STATUS,C                ; ¿C=1?, ¿(W) positivo?, ¿(Distancia)>=MinimaDistancia?
005E   2867           00117         goto    DistanciaMenor          ; No ha resultado menor, y salta al mensaje de error.
005F   080C           00118         movf    Distancia,W             ; Va a comprobar si es mayor del máximo admisible.
0060   3CFA           00119         sublw   MaximaDistancia         ; (W)=MaximaDistancia-(Distancia)
0061   1803           00120         btfsc   STATUS,C                ; ¿C=0?, ¿(W) negativo?, ¿MaximaDistancia<(Distancia)?
0062   286B           00121         goto    DistanciaFiable         ; No, la medida de la distancia entra dentro del rango.
                      00122 ;
0063                  00123 DistanciaMayor
0063   30FA           00124         movlw   MaximaDistancia         ; La distancia es mayor que el máximo.
0064   008C           00125         movwf   Distancia
0065   3029           00126         movlw   MensajeDistanciaMayor
0066   286C           00127         goto    VisualizaDistancia
                      00128 ;
0067                  00129 DistanciaMenor
0067   3003           00130         movlw   MinimaDistancia         ; La distancia es menor del mínimo fiable.
0068   008C           00131         movwf   Distancia
0069   3019           00132         movlw   MensajeDistanciaMenor
006A   286C           00133         goto    VisualizaDistancia
006B                  00134 DistanciaFiable
006B   3006           00135         movlw   MensajeDistancia
006C                  00136 VisualizaDistancia
006C   214A           00137         call    LCD_Mensaje
006D   3005           00138         movlw   .5                      ; Centra la medida de la distancia en la segunda línea 
006E   20FA           00139         call    LCD_PosicionLinea2      ; de la pantalla.
006F   080C           00140         movf    Distancia,W
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0070   2172           00141         call    BIN_a_BCD               ; Lo pasa a BCD.
0071   0818           00142         movf    BCD_Centenas,W          ; Primero las centenas.
0072   1D03           00143         btfss   STATUS,Z                ; Si son cero no visualiza las centenas.
0073   2878           00144         goto    VisualizaCentenas
0074   080C           00145         movf    Distancia,W             ; Vuelve a recuperar este valor.
0075   2172           00146         call    BIN_a_BCD               ; Lo pasa a BCD.
0076   2134           00147         call    LCD_Byte                ; Visualiza las decenas y unidades.
0077   287C           00148         goto    Visualiza_cm
0078                  00149 VisualizaCentenas
0078   213F           00150         call    LCD_Nibble              ; Visualiza las centenas.
0079   080C           00151         movf    Distancia,W             ; Vuelve a recuperar este valor.
007A   2172           00152         call    BIN_a_BCD               ; Lo pasa a BCD.
007B   213B           00153         call    LCD_ByteCompleto        ; Visualiza las decenas (aunque sea cero) y
007C                  00154 Visualiza_cm                            ; unidades.
007C   3015           00155         movlw   MensajeCentimetro
007D   214A           00156         call    LCD_Mensaje
007E   0008           00157         return
                      00158 
                      00159         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  0000000D            00021         R_ContA                         ; Contadores para los retardos.
  0000000E            00022         R_ContB
  0000000F            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
007F                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
007F   0000           00033         nop                             ; Aporta 1 ciclo máquina.
0080   0000           00034         nop                             ; Aporta 1 ciclo máquina.
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0081   0000           00035         nop                             ; Aporta 1 ciclo máquina.
0082   0000           00036         nop                             ; Aporta 1 ciclo máquina.
0083   0000           00037         nop                             ; Aporta 1 ciclo máquina.
0084                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
0084   0000           00039         nop                             ; Aporta 1 ciclo máquina.
0085                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
0085   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
0086                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0086   0000           00046         nop                             ; Aporta 1 ciclo máquina.
0087   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
0088   2892           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0089                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
0089   0000           00050         nop                             ; Aporta 1 ciclo máquina.
008A   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
008B   2892           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
008C                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
008C   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
008D   2892           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
008E                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
008E   0000           00057         nop                             ; Aporta 1 ciclo máquina.
008F   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0090   2892           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0091                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
0091   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
0092                  00066 RetardoMicros
0092   008D           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
0093                  00068 Rmicros_Bucle
0093   0B8D           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0094   2893           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
0095   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
0096                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
0096   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0097   28A5           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0098                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
0098   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0099   28A5           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009A                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
009A   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
009B   28A5           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
009C                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
009C   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
009D   28A5           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
009E                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
009E   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
009F   28A5           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00A0                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
00A0   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
00A1   28A5           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00A2                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
00A2   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
00A3   28A5           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00A4                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
00A4   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
00A5                  00111 Retardos_ms
00A5   008E           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
00A6                  00113 R1ms_BucleExterno
00A6   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
00A7   008D           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
00A8                  00116 R1ms_BucleInterno
00A8   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
00A9   0B8D           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
00AA   28A8           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
00AB   0B8E           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
00AC   28A6           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
00AD   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
00AE                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
00AE   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
00AF   28B9           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00B0                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
00B0   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B1   28B9           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00B2                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
00B2   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00B3   28B9           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00B4                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
00B4   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00B5   28B9           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00B6                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
00B6   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00B7   28B9           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00B8                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
00B8   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
00B9                  00160 Retardo_1Decima
00B9   008F           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
00BA                  00162 R1Decima_BucleExterno2
00BA   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
00BB   008E           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
00BC                  00165 R1Decima_BucleExterno
00BC   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
00BD   008D           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
00BE                  00168 R1Decima_BucleInterno          
00BE   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
00BF   0B8D           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
00C0   28BE           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
00C1   0B8E           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
00C2   28BC           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
00C3   0B8F           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
00C4   28BA           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
00C5   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00191 
                      00192 ;       ===================================================================
                      00193 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00194 ;         E. Palacios, F. Remiro y L. López.
                      00195 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00196 ;       ===================================================================
                      00197 
                      00198 
                      00199 
                      00200 
                      00160         INCLUDE  <LCD_4BIT.INC>
                      00001 ;**************************** Librería "LCD_4BIT.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00010 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00011 ;
                      00012 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00013 ; conexiones son:
                      00014 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00015 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00016 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00017 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00018 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00019 ;
                      00020 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00021 ;
                      00022 ; ZONA DE DATOS *********************************************************************
                      00023 
                      00024         CBLOCK
  00000010            00025         LCD_Dato
  00000011            00026         LCD_GuardaDato
  00000012            00027         LCD_GuardaTRISB
  00000013            00028         LCD_Auxiliar1
  00000014            00029         LCD_Auxiliar2
                      00030         ENDC
                      00031 
  00000010            00032 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00033 
                      00034 #DEFINE  LCD_PinRS      PORTA,0
                      00035 #DEFINE  LCD_PinRW      PORTA,1
                      00036 #DEFINE  LCD_PinEnable  PORTA,2
                      00037 #DEFINE  LCD_BusDatos   PORTB
                      00038 
                      00039 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00040 ;
                      00041 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00042 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00043 ; configuración inicial hay que hacerla como sigue:
                      00044 ;
00C6                  00045 LCD_Inicializa
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C6   1683           00046         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
00C7   1005           00047         bcf     LCD_PinRS               ; R/W y E.
00C8   1105           00048         bcf     LCD_PinEnable
00C9   1085           00049         bcf     LCD_PinRW
00CA   1283           00050         bcf     STATUS,RP0
00CB   1085           00051         bcf     LCD_PinRW               ; En caso de que esté conectado le indica
                      00052                                         ; que se va a escribir en el LCD.
00CC   1105           00053         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD poniendo E=0.
00CD   1005           00054         bcf     LCD_PinRS               ; Activa el Modo Comando poniendo RS=0.
00CE   209C           00055         call    Retardo_20ms
00CF   3030           00056         movlw   b'00110000'     
00D0   20DE           00057         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
00D1   20A0           00058         call    Retardo_5ms     
00D2   3030           00059         movlw   b'00110000'     
00D3   20DE           00060         call    LCD_EscribeLCD
00D4   2089           00061         call    Retardo_200micros
00D5   3030           00062         movlw   b'00110000'     
00D6   20DE           00063         call    LCD_EscribeLCD
00D7   3020           00064         movlw   b'00100000'             ; Interface de 4 bits.
00D8   20DE           00065         call    LCD_EscribeLCD
                      00066 
                      00067 ; Ahora configura el resto de los parámetros: 
                      00068 
00D9   2104           00069         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
00DA   2102           00070         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
00DB   2100           00071         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
00DC   20F2           00072         call    LCD_CursorIncr          ; Cursor en modo incrementar.
00DD   0008           00073         return
                      00074 
                      00075 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00076 ;
                      00077 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el pin
                      00078 ; Enable del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B que
                      00079 ; no son utilizadas para el LCD (pines RB3:RB0), primero se lee estas líneas y después se
                      00080 ; vuelve a enviar este dato sin cambiarlo.
                      00081 
00DE                  00082 LCD_EscribeLCD
00DE   39F0           00083         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
00DF   0090           00084         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
00E0   0806           00085         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
00E1   390F           00086         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
00E2   0490           00087         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00088                                         ; y en la parte baja lo que había antes.
00E3   1683           00089         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E4   0806           00090         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
00E5   0092           00091         movwf   LCD_GuardaTRISB
00E6   300F           00092         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
00E7   0586           00093         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
00E8   1283           00094         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00095 ;
00E9   0810           00096         movf    LCD_Dato,W              ; Recupera el dato a enviar.
00EA   0086           00097         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EB   1505           00098         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD mediante un pequeño
00EC   1105           00099         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
00ED   1683           00100         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
00EE   0812           00101         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
00EF   0086           00102         movwf   PORTB                   ; Realmente es TRISB.
00F0   1283           00103         bcf     STATUS,RP0              ; Acceso al Banco 0.
00F1   0008           00104         return
                      00105 
                      00106 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00107 ;
                      00108 ;Los comandos que pueden ser ejecutados son:
                      00109 ;
00F2                  00110 LCD_CursorIncr                          ; Cursor en modo incrementar.
00F2   3006           00111         movlw   b'00000110'
00F3   2905           00112         goto    LCD_EnviaComando
00F4                  00113 LCD_Linea1                              ; Cursor al principio de la Línea 1.
00F4   3080           00114         movlw   b'10000000'             ; Dirección 00h de la DDRAM
00F5   2905           00115         goto    LCD_EnviaComando
00F6                  00116 LCD_Linea2                              ; Cursor al principio de la Línea 2.
00F6   30C0           00117         movlw   b'11000000'             ; Dirección 40h de la DDRAM
00F7   2905           00118         goto    LCD_EnviaComando
00F8                  00119 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
00F8   3880           00120         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
00F9   2905           00121         goto    LCD_EnviaComando        ; registro W.
00FA                  00122 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
00FA   38C0           00123         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
00FB   2905           00124         goto    LCD_EnviaComando        ; registro W.
00FC                  00125 LCD_OFF                         ; Pantalla apagada.
00FC   3008           00126         movlw   b'00001000'
00FD   2905           00127         goto    LCD_EnviaComando
00FE                  00128 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
00FE   300E           00129         movlw   b'00001110'
00FF   2905           00130         goto    LCD_EnviaComando
0100                  00131 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
0100   300C           00132         movlw   b'00001100'
0101   2905           00133         goto    LCD_EnviaComando
0102                  00134 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
0102   3001           00135         movlw   b'00000001'             ; cursor a principio de la línea 1.
0103   2905           00136         goto    LCD_EnviaComando
0104                  00137 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
0104   3028           00138         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00139 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00140 
                      00141 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00142 ;
                      00143 ; "LCD_EnviaComando". Escribe un comando en el registro del módulo LCD. La palabra de
                      00144 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00145 ; "LCD_Caracter". Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00146 ; a través del registro W. Trabaja en Modo Dato.
                      00147 ;
0105                  00148 LCD_EnviaComando
0105   1005           00149         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
0106   2909           00150         goto    LCD_Envia
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0107                  00151 LCD_Caracter
0107   1405           00152         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
0108   2111           00153         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
0109                  00154 LCD_Envia
0109   0091           00155         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
010A   20DE           00156         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
010B   0E11           00157         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00158                                         ; nibble bajo del dato a enviar a parte alta del byte.
010C   20DE           00159         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
010D   1C05           00160         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
010E   20A2           00161         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
010F   208E           00162         call    Retardo_50micros
0110   0008           00163         return  
                      00164 
                      00165 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00166 ;
                      00167 ; A partir del carácter ASCII número 127 los códigos de los caracteres definidos en la
                      00168 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00169 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00170 ;
                      00171 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00172 ; que puedan ser visualizado en el módulo LM016L.
                      00173 ; 
                      00174 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00175 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00176 
0111                  00177 LCD_CodigoCGROM
0111   0090           00178         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
0112                  00179 LCD_EnheMinuscula                       ; un carácter especial.
0112   3CF1           00180         sublw   'ñ'                     ; ¿Es la "ñ"?
0113   1D03           00181         btfss   STATUS,Z
0114   2918           00182         goto    LCD_EnheMayuscula       ; No es "ñ".
0115   30EE           00183         movlw   b'11101110'             ; Código CGROM de la "ñ".
0116   0090           00184         movwf   LCD_Dato
0117   2925           00185         goto    LCD_FinCGROM
0118                  00186 LCD_EnheMayuscula
0118   0810           00187         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0119   3CD1           00188         sublw   'Ñ'                     ; ¿Es la "Ñ"?
011A   1D03           00189         btfss   STATUS,Z
011B   291F           00190         goto    LCD_Grado               ; No es "Ñ".
011C   30EE           00191         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
011D   0090           00192         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
011E   2925           00193         goto    LCD_FinCGROM    
011F                  00194 LCD_Grado
011F   0810           00195         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0120   3CBA           00196         sublw   'º'                     ; ¿Es el símbolo "º"?
0121   1D03           00197         btfss   STATUS,Z
0122   2925           00198         goto    LCD_FinCGROM            ; No es "º".
0123   30DF           00199         movlw   b'11011111'             ; Código CGROM del símbolo "º".
0124   0090           00200         movwf   LCD_Dato
0125                  00201 LCD_FinCGROM
0125   0810           00202         movf    LCD_Dato,W              ; En (W) el código buscado.
0126   0008           00203         return
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00204 
                      00205 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00206 ;
                      00207 ; Visualiza espacios en blanco.
                      00208 
0127                  00209 LCD_LineaEnBlanco
0127   3010           00210         movlw   LCD_CaracteresPorLinea
0128   292E           00211         goto    LCD_EnviaBlancos
0129                  00212 LCD_UnEspacioBlanco
0129   3001           00213         movlw   .1
012A   292E           00214         goto    LCD_EnviaBlancos
012B                  00215 LCD_DosEspaciosBlancos
012B   3002           00216         movlw   .2
012C   292E           00217         goto    LCD_EnviaBlancos
012D                  00218 LCD_TresEspaciosBlancos
012D   3003           00219         movlw   .3
012E                  00220 LCD_EnviaBlancos
012E   0093           00221         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
012F                  00222 LCD_EnviaOtroBlanco     
012F   3020           00223         movlw   ' '                     ; Esto es un espacio en blanco.
0130   2107           00224         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
0131   0B93           00225         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
0132   292F           00226         goto    LCD_EnviaOtroBlanco
0133   0008           00227         return
                      00228 
                      00229 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00230 ;
                      00231 ; Subrutina "LCD_ByteCompleto", visualiza el byte que almacena el registro W en el
                      00232 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00233 ;
                      00234 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero 
                      00235 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00236 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00237 ;
                      00238 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00239 ;
0134                  00240 LCD_Byte
0134   0094           00241         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0135   39F0           00242         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
0136   1D03           00243         btfss   STATUS,Z                ; Si es cero lo apaga.
0137   293C           00244         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
0138   3020           00245         movlw   ' '                     ; Visualiza un espacio en blanco.
0139   2107           00246         call    LCD_Caracter
013A   293E           00247         goto    LCD_VisualizaBajo
                      00248 
013B                  00249 LCD_ByteCompleto
013B   0094           00250         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
013C                  00251 LCD_VisualizaAlto
013C   0E14           00252         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
013D   213F           00253         call    LCD_Nibble              ; Lo visualiza.
013E                  00254 LCD_VisualizaBajo
013E   0814           00255         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00256 ;       call    LCD_Nibble              ; Lo visualiza.
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00257 ;       return
                      00258 
                      00259 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00260 ;
                      00261 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00262 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00263 ; - Si (W)=b'01010110', se visualizará "6". 
                      00264 ; - Si (W)=b'10101110', se visualizará "E". 
                      00265 ;
013F                  00266 LCD_Nibble
013F   390F           00267         andlw   b'00001111'             ; Se queda con la parte baja.
0140   0093           00268         movwf   LCD_Auxiliar1           ; Lo guarda.
0141   3C09           00269         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
0142   1C03           00270         btfss   STATUS,C        
0143   2947           00271         goto    LCD_EnviaByteLetra
0144   0813           00272         movf    LCD_Auxiliar1,W
0145   3E30           00273         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
0146   2949           00274         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
0147                  00275 LCD_EnviaByteLetra
0147   0813           00276         movf    LCD_Auxiliar1,W
0148   3E37           00277         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
0149                  00278 LCD_FinVisualizaDigito
0149   2907           00279         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00280                                         ; para no sobrecargar la pila.
                      00281                                         
                      00282 ;       ===================================================================
                      00283 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00284 ;         E. Palacios, F. Remiro y L. López.
                      00285 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00286 ;       ===================================================================
                      00161         INCLUDE  <LCD_MENS.INC>
                      00001 ;**************************** Librería "LCD_MENS.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00010 
                      00011         CBLOCK
  00000015            00012         LCD_ApuntaCaracter              ; Indica la posición del carácter a visualizar
                      00013                                         ; respecto del comienzo de todos los mensajes,
                      00014                                         ; (posición de la etiqueta "Mensajes").
  00000016            00015         LCD_ValorCaracter                       ; Código ASCII del carácter a 
                      00016         ENDC                            ; visualizar.
                      00017 
                      00018 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00019 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00020 
                      00021 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00022 ;
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00023 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00024 ;
                      00025 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
                      00026 ; tenga la siguiente estructura:
                      00027 ;
                      00028 ; Mensajes                              ; ¡Etiqueta obligatoria!
                      00029 ;       addwf   PCL,F
                      00030 ; Mensaje0                              ; Posición inicial del mensaje.
                      00031 ;       DT ".. ..", 0x00                        ; Mensaje terminado en 0x00.
                      00032 ; Mensaje1
                      00033 ;       ...     
                      00034 ;       ...
                      00035 ; FinMensajes
                      00036 ;
                      00037 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00038 ;
                      00039 ;       movlw   Mensaje0                        ; Carga la posición del mensaje.
                      00040 ;       call    LCD_Mensaje             ; Visualiza el mensaje.
                      00041 ;
014A                  00042 LCD_Mensaje
014A   0095           00043         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
014B   3005           00044         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
014C   0295           00045         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
014D   0395           00046         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
014E                  00047 LCD_VisualizaOtroCaracter
014E   0815           00048         movf    LCD_ApuntaCaracter,W
014F   2005           00049         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
0150   0096           00050         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
0151   0896           00051         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
0152   1903           00052         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
0153   2957           00053         goto    LCD_FinMensaje          ; de mensaje, sale fuera.
0154                  00054 LCD_NoUltimoCaracter
0154   2107           00055         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
0155   0A95           00056         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
0156   294E           00057         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
0157                  00058 LCD_FinMensaje
0157   0008           00059         return                          ; Vuelve al programa principal.
                      00060 
                      00061 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00062 ;
                      00063 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00064 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00065 ;
                      00066 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00067 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00068 ;
                      00069         CBLOCK  
  00000017            00070         LCD_CursorPosicion              ; Contabiliza la posición del cursor dentro de la
                      00071         ENDC                            ; pantalla LCD
                      00072 
0158                  00073 LCD_MensajeMovimiento
0158   0095           00074         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
0159   3005           00075         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015A   0295           00076         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
015B   0395           00077         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
015C                  00078 LCD_PrimeraPosicion
015C   0197           00079         clrf    LCD_CursorPosicion      ; El cursor en la posición 0 de la línea.
015D   2102           00080         call    LCD_Borra               ; Se sitúa en la primera posición de la línea 1 y
015E                  00081 LCD_VisualizaCaracter                   ; borra la pantalla.
015E   3010           00082         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
015F   0217           00083         subwf   LCD_CursorPosicion,W
0160   1D03           00084         btfss   STATUS,Z
0161   2967           00085         goto    LCD_NoEsFinalLinea
0162                  00086 LCD_EsFinalLinea
0162   2096           00087         call    Retardo_200ms           ; Lo mantiene visualizado durante este tiempo.
0163   2096           00088         call    Retardo_200ms
0164   300F           00089         movlw   LCD_CaracteresPorLinea-1; Apunta a la posición del segundo carácter visualizado
0165   0295           00090         subwf   LCD_ApuntaCaracter,F    ; en pantalla, que será el primero en la siguiente
0166   295C           00091         goto    LCD_PrimeraPosicion      ; visualización de línea, para producir el efecto
0167                  00092 LCD_NoEsFinalLinea                      ; de desplazamiento hacia la izquierda.
0167   0815           00093         movf    LCD_ApuntaCaracter,W
0168   2005           00094         call    Mensajes                        ; Obtiene el ASCII del carácter apuntado.
0169   0096           00095         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
016A   0896           00096         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
016B   1903           00097         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
016C   2971           00098         goto    LCD_FinMovimiento       ; de mensaje, sale fuera.
016D                  00099 LCD_NoUltimoCaracter2
016D   2107           00100         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
016E   0A97           00101         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00102                                         ; cursor en la pantalla.
016F   0A95           00103         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
0170   295E           00104         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
0171                  00105 LCD_FinMovimiento                       ; de la línea.
0171   0008           00106         return                          ; Vuelve al programa principal.
                      00107         
                      00108 ;       ===================================================================
                      00109 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00110 ;         E. Palacios, F. Remiro y L. López.
                      00111 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00112 ;       ===================================================================     
                      00113         
                      00162         INCLUDE  <BIN_BCD.INC>
                      00001 ;******************************** Librería "BIN_BCD.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Un número binario natural de 8 bits es convertido a BCD. El resultado se guarda en tres
                      00010 ; posiciones de memorias llamadas: BCD_Centenas, BCD_Decenas y BCD_Unidades.
                      00011 ;
                      00012 ; El procedimiento utilizado es mediante restas de 10, tal como se explicó en el capítulo 9.
                      00013 ;
                      00014 ; Entrada:      En el registro W el número binario natural a convertir.
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00015 ; Salidas:      En (BCD_Centenas), (BCD_Decenas) y (BCD_Unidades).
                      00016 ;               En el registro W también las decenas (nibble alto) y unidades (nibble bajo).
                      00017 
                      00018 ; Subrutina "BIN_a_BCD" -----------------------------------------------------------------
                      00019 
                      00020         CBLOCK                          ; En las subrutinas no se debe fijar la dirección
  00000018            00021         BCD_Centenas                    ; de la RAM de usuario. Se toma a continuación de
  00000019            00022         BCD_Decenas                     ; la última asignada.
  0000001A            00023         BCD_Unidades    
                      00024         ENDC
                      00025 ;
0172                  00026 BIN_a_BCD
0172   0198           00027         clrf    BCD_Centenas            ; Carga los registros con el resultado inicial.
0173   0199           00028         clrf    BCD_Decenas             ; En principio las centenas y decenas a cero.
0174   009A           00029         movwf   BCD_Unidades            ; Se carga el número binario a convertir.
0175                  00030 BCD_Resta10
0175   300A           00031         movlw   .10                     ; A las unidades se les va restando 10 en cada
0176   021A           00032         subwf   BCD_Unidades,W          ; pasada. (W)=(BCD_Unidades) -10.
0177   1C03           00033         btfss   STATUS,C                ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Unidades)>=10?
0178   2982           00034         goto    BIN_BCD_Fin             ; No, es menor de 10. Se acabó.
0179                  00035 BCD_IncrementaDecenas
0179   009A           00036         movwf   BCD_Unidades            ; Recupera lo que queda por restar.
017A   0A99           00037         incf    BCD_Decenas,F           ; Incrementa las decenas y comprueba si ha llegado
017B   300A           00038         movlw   .10                     ; a 10. Lo hace mediante una resta.
017C   0219           00039         subwf   BCD_Decenas,W           ; (W)=(BCD_Decenas)-10).
017D   1C03           00040         btfss   STATUS,C                ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Decenas)>=10?
017E   2975           00041         goto    BCD_Resta10             ; No. Vuelve a dar otra pasada, restándole 10 a
017F                  00042 BCD_IncrementaCentenas                  ; las unidades.
017F   0199           00043         clrf    BCD_Decenas             ; Pone a cero las decenas 
0180   0A98           00044         incf    BCD_Centenas,F          ; e incrementa las centenas.
0181   2975           00045         goto    BCD_Resta10             ; Otra pasada: Resta 10 al número a convertir.
0182                  00046 BIN_BCD_Fin
0182   0E19           00047         swapf   BCD_Decenas,W           ; En el nibble alto de (W) también las decenas.
0183   071A           00048         addwf   BCD_Unidades,W          ; En el nibble bajo de (W) las unidades.
0184   0008           00049         return                          ; Vuelve al programa principal.
                      00050         
                      00051 ; La directiva "END" se debe poner en el programa principal no aquí.
                      00052 
                      00053 ;       ===================================================================
                      00054 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00055 ;         E. Palacios, F. Remiro y L. López.
                      00056 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00057 ;       ===================================================================
                      00163         END
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

BCD_Centenas                      00000018
BCD_Decenas                       00000019
BCD_IncrementaCentenas            0000017F
BCD_IncrementaDecenas             00000179
BCD_Resta10                       00000175
BCD_Unidades                      0000001A
BIN_BCD_Fin                       00000182
BIN_a_BCD                         00000172
C                                 00000000
DC                                00000001
Disparo                           PORTA,3
Distancia                         0000000C
DistanciaFiable                   0000006B
DistanciaMayor                    00000063
DistanciaMenor                    00000067
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
Eco                               PORTA,4
Espera_Eco_0                      0000004B
Espera_Eco_1                      00000045
F                                 00000001
FSR                               00000004
Fin                               00000050
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000039
LCD_2Lineas4Bits5x7               00000104
LCD_ApuntaCaracter                00000015
LCD_Auxiliar1                     00000013
LCD_Auxiliar2                     00000014
LCD_Borra                         00000102
LCD_BusDatos                      PORTB
LCD_Byte                          00000134
LCD_ByteCompleto                  0000013B
LCD_Caracter                      00000107
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   00000111
LCD_CursorIncr                    000000F2
LCD_CursorOFF                     00000100
LCD_CursorON                      000000FE
LCD_CursorPosicion                00000017
LCD_Dato                          00000010
LCD_DosEspaciosBlancos            0000012B
LCD_EnheMayuscula                 00000118
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

LCD_EnheMinuscula                 00000112
LCD_Envia                         00000109
LCD_EnviaBlancos                  0000012E
LCD_EnviaByteLetra                00000147
LCD_EnviaComando                  00000105
LCD_EnviaOtroBlanco               0000012F
LCD_EsFinalLinea                  00000162
LCD_EscribeLCD                    000000DE
LCD_FinCGROM                      00000125
LCD_FinMensaje                    00000157
LCD_FinMovimiento                 00000171
LCD_FinVisualizaDigito            00000149
LCD_Grado                         0000011F
LCD_GuardaDato                    00000011
LCD_GuardaTRISB                   00000012
LCD_Inicializa                    000000C6
LCD_Linea1                        000000F4
LCD_Linea2                        000000F6
LCD_LineaEnBlanco                 00000127
LCD_Mensaje                       0000014A
LCD_MensajeMovimiento             00000158
LCD_Nibble                        0000013F
LCD_NoEsFinalLinea                00000167
LCD_NoUltimoCaracter              00000154
LCD_NoUltimoCaracter2             0000016D
LCD_OFF                           000000FC
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                000000F8
LCD_PosicionLinea2                000000FA
LCD_PrimeraPosicion               0000015C
LCD_TresEspaciosBlancos           0000012D
LCD_UnEspacioBlanco               00000129
LCD_ValorCaracter                 00000016
LCD_VisualizaAlto                 0000013C
LCD_VisualizaBajo                 0000013E
LCD_VisualizaCaracter             0000015E
LCD_VisualizaOtroCaracter         0000014E
MaximaDistancia                   000000FA
MensajeCentimetro                 00000015
MensajeDistancia                  00000006
MensajeDistanciaMayor             00000029
MensajeDistanciaMenor             00000019
Mensajes                          00000005
MinimaDistancia                   00000003
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Principal                         00000041
R1Decima_BucleExterno             000000BC
R1Decima_BucleExterno2            000000BA
R1Decima_BucleInterno             000000BE
R1ms_BucleExterno                 000000A6
R1ms_BucleInterno                 000000A8
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           0000000D
R_ContB                           0000000E
R_ContC                           0000000F
RetardoMicros                     00000092
Retardo_100micros                 0000008C
Retardo_100ms                     00000098
Retardo_10micros                  0000007F
Retardo_10ms                      0000009E
Retardo_10s                       000000B0
Retardo_1Decima                   000000B9
Retardo_1ms                       000000A4
Retardo_1s                        000000B6
Retardo_200micros                 00000089
Retardo_200ms                     00000096
Retardo_20micros                  00000091
Retardo_20ms                      0000009C
Retardo_20s                       000000AE
Retardo_2ms                       000000A2
Retardo_2s                        000000B4
Retardo_4micros                   00000085
Retardo_500micros                 00000086
Retardo_500ms                     000000B8
Retardo_50micros                  0000008E
Retardo_50ms                      0000009A
Retardo_5micros                   00000084
Retardo_5ms                       000000A0
Retardo_5s                        000000B2
Retardos_ms                       000000A5
Rmicros_Bucle                     00000093
STATUS                            00000003
ServicioInterrupcion              00000051
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TMR0_Carga60micros                FFFFFFE5
MPASM 03.50 Released                SENSOR_ULTRASONIDO_01.ASM   10-31-2003  18:15:16         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

TRISA                             00000085
TRISB                             00000086
Visualiza                         0000005A
VisualizaCentenas                 00000078
VisualizaDistancia                0000006C
Visualiza_cm                      0000007C
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXX----------- ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   386
Program Memory Words Free:   638


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     2 reported,     0 suppressed

