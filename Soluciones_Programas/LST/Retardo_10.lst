MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;************************************ Retardo_10.asm **********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; El el display debe visualizarse un mensaje grabado en la memoria ROM mediante la
                      00010 ; directiva DT. En lugar de medir la longitud del mensaje como en programas anteriores,
                      00011 ; detectará el fin de mensaje mediante el código "0x00" grabado al final.
                      00012 
                      00013 ; ZONA DE DATOS **********************************************************************
                      00014 
2007   3FF1           00015         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00016         LIST       P=16F84A
                      00017         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00018 
                      00019         CBLOCK  0x0C
  0000000C            00020         MensajePosicion
  0000000D            00021         ValorCaracter
                      00022         ENDC
                      00023 
                      00024 ; ZONA DE CÓDIGOS ******************************************************************
                      00025 
0000                  00026         ORG     0
0000                  00027 Inicio
0000   1683           00028         bsf     STATUS,RP0
0001   0186           00029         clrf    PORTB
0002   1283           00030         bcf     STATUS,RP0
0003                  00031 Principal
0003   018C           00032         clrf    MensajePosicion         ; Apunta a la primera posición del mensaje.
0004                  00033 VisualizaOtroCaracter
0004   080C           00034         movf    MensajePosicion,W       ; Aquí posición a leer del mensaje.
0005   2010           00035         call    Mensajes                ; Visualiza el carácter correspondiente.
0006   008D           00036         movwf   ValorCaracter           ; Guarda el valor de carácter.
0007   088D           00037         movf    ValorCaracter,F         ; Lo único que hace es posicionar flag Z. En caso
0008   1903           00038         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
0009   280F           00039         goto    Fin                     ; de mensaje, comienza de nuevo.
000A                  00040 NoUltimoCaracter
000A   202C           00041         call    ASCII_a_7Segmentos      ; Lo pasa a 7 Segmentos.
000B   0086           00042         movwf   PORTB                   ; El resultado se visualiza por la salida.
000C   20AA           00043         call    Retardo_500ms           ; Durante el tiempo estimado.
000D   0A8C           00044         incf    MensajePosicion,F       ; Apunta a la siguiente posición por visualizar.
000E   2804           00045         goto    VisualizaOtroCaracter   ; Vuelve a visualizar la siguiente posición.
000F   2803           00046 Fin     goto    Principal
                      00047 ;
                      00048 ; Subrutina "Mensajes" ------------------------------------------------------------------
                      00049 ;
0010                  00050 Mensajes
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010   0782           00051         addwf   PCL,F
0011   3420 3445 3453 00052         DT " ESTUDIA ELECTRONICA.   ",0x00      ; Observa que ha señalado el final del mensaje
       3454 3455 3444 
       3449 3441 3420 
       3445 344C 3445 
       3443 3454 3452 
       344F 344E 3449 
       3443 3441 342E 
       3420 3420 3420 
       3400 
                      00053                                         ; con el código "0x00".
                      00054         INCLUDE  <DISPLAY_7S.INC>
                      00001 ;**************************** Librería "DISPLAY_7S.INC **********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Subrutinas para convertir un código ASCII en su valor equivalente en 7 segmentos y así
                      00010 ; poder activar displays.
                      00011 ;
                      00012 ; Si el código ASCII es menor que el signo más '+' o mayor  que la letra zeta 'Z' obtiene
                      00013 ; el código erróneo b'10000000' para encender sólo el punto decimal del display.
                      00014 ;
                      00015 ; Si se trata de un número hay que ejecutar la subrutina "Numero_a_7Segmentos" que convierte
                      00016 ; un numero (de 0 a 9) en su equivalente en código de 7 segmentos.
                      00017 ;
                      00018 ; Entrada: En registro W, el dato en código ASCII a convertir.
                      00019 ; Salida : En registro W, el código 7 segmentos.
                      00020 
                      00021         CBLOCK
  0000000E            00022         Display7s_Dato                  ; Aquí se reservará el valor del dato de entrada.
                      00023         ENDC
                      00024         
002A                  00025 Numero_a_7Segmentos
002A   390F           00026         andlw   b'00001111'             ; Se queda con el nibble bajo.
002B   3E30           00027         addlw   '0'                     ; Se pasa a ASCII sumándole el valor ASCII
                      00028                                         ; del "0" y ejecuta "ASCII_7_Segmentos".
002C                  00029 ASCII_a_7Segmentos
002C   008E           00030         movwf   Display7s_Dato          ; Guarda el valor del carácter.
002D   3C20           00031         sublw   ' '                     ; Comprueba si es " " (espacio).
002E   1903           00032         btfsc   STATUS,Z                ; ¿Es distinta de " " (espacio)?, ¿Z=0?.
002F   3400           00033         retlw   00h                     ; Es " ". Devuelve el código 7-Segmentos del " ".
0030   080E           00034         movf    Display7s_Dato,W                ; Recupera el valor del dato de entrada.
0031   3CD1           00035         sublw   'Ñ'                     ; Comprueba si es "Ñ".
0032   1903           00036         btfsc   STATUS,Z                ; ¿Es distinta de "Ñ"?, ¿Z=0?.
0033   3455           00037         retlw   55h                     ; Es "Ñ". Devuelve el código 7-Segmentos de "Ñ".
0034   080E           00038         movf    Display7s_Dato,W                ; Recupera el valor del dato de entrada.
0035   3CBA           00039         sublw   'º'                     ; Comprueba si es "º".
0036   1903           00040         btfsc   STATUS,Z                ; ¿Es distinta de "º"?, ¿Z=0?.
0037   3463           00041         retlw   63h                     ; Es "º". Devuelve el código 7-Segmentos de "º".
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00042 ;
0038   080E           00043         movf    Display7s_Dato,W                ; Comprueba si el código ASCII es mayor que la "Z".
0039   3C5A           00044         sublw   'Z'                     ; (W)='Z'-(Display7s_Dato)
003A   1C03           00045         btfss   STATUS,C                ; ¿C=1?, ¿(W) positivo?, ¿'Z'>=(Display7s_Dato)?.
003B   3480           00046         retlw   b'10000000'             ; Si el código ASCII es mayor que 'Z' es un error.
003C   302B           00047         movlw   '+'                     ; Averigua en qué orden está el carácter leído
003D   020E           00048         subwf   Display7s_Dato,W                ; dentro de la tabla de conversión, respecto del
003E   1C03           00049         btfss   STATUS,C                ; primero que es '+'.
003F   3480           00050         retlw   b'10000000'             ; Si el código ASCII es menor que '+' es un error.
                      00051 ;
0040   0782           00052         addwf   PCL,F                   ; Obtiene el código 7 segmentos.
0041                  00053 InicioTablaASCII
0041   3446 3404 3440 00054         DT      46h, 04h, 40h, 80h, 00h, 3Fh, 06h, 5Bh, 4Fh, 66h, 6Dh   ; Signos y
       3480 3400 343F 
       3406 345B 344F 
       3466 346D 
004C   347D 3407 347F 00055         DT      7Dh, 07h, 7Fh, 67h, 41h, 88h, 00h, 48h, 00h, 00h, 00h   ; números.
       3467 3441 3488 
       3400 3448 3400 
       3400 3400 
0057   3477 347C 3439 00056         DT      77h, 7Ch, 39h, 5Eh, 79h, 71h, 6Fh, 76h, 19h, 1Eh, 7Ah, 38h, 37h ; Letras.
       345E 3479 3471 
       346F 3476 3419 
       341E 347A 3438 
       3437 
0064   3454 343F 3473 00057         DT      54h, 3Fh, 73h, 67h, 50h, 6Dh, 78h, 1Ch, 3Eh, 1Dh, 70h, 6Eh, 49h
       3467 3450 346D 
       3478 341C 343E 
       341D 3470 346E 
       3449 
0071                  00058 FinTablaASCII
                      00059 ;
                      00060 ; Esta es la tabla para la visualización en display de siete segmentos (Ver figura 11-3).
                      00061 
                      00062         IF (FinTablaASCII > 0xFF)
                      00063                 ERROR   "¡CUIDADO!: La tabla ha superado el tamaño de la página de los"
                      00064                 MESSG   "primeros 256 bytes de memoria ROM. NO funcionará correctamente."
                      00065         ENDIF
                      00066 
                      00067 ;       ===================================================================
                      00068 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00069 ;         E. Palacios, F. Remiro y L. López.
                      00070 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00071 ;       ===================================================================
                      00055         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  0000000F            00021         R_ContA                         ; Contadores para los retardos.
  00000010            00022         R_ContB
  00000011            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
0071                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
0071   0000           00033         nop                             ; Aporta 1 ciclo máquina.
0072   0000           00034         nop                             ; Aporta 1 ciclo máquina.
0073   0000           00035         nop                             ; Aporta 1 ciclo máquina.
0074   0000           00036         nop                             ; Aporta 1 ciclo máquina.
0075   0000           00037         nop                             ; Aporta 1 ciclo máquina.
0076                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
0076   0000           00039         nop                             ; Aporta 1 ciclo máquina.
0077                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
0077   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
0078                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0078   0000           00046         nop                             ; Aporta 1 ciclo máquina.
0079   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
007A   2884           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
007B                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
007B   0000           00050         nop                             ; Aporta 1 ciclo máquina.
007C   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
007D   2884           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
007E                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
007E   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
007F   2884           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0080                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
0080   0000           00057         nop                             ; Aporta 1 ciclo máquina.
0081   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0082   2884           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0083                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
0083   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
0084                  00066 RetardoMicros
0084   008F           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
0085                  00068 Rmicros_Bucle
0085   0B8F           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0086   2885           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
0087   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
0088                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
0088   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0089   2897           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
008A                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
008A   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
008B   2897           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
008C                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
008C   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
008D   2897           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
008E                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
008E   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
008F   2897           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0090                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
0090   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
0091   2897           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0092                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
0092   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0093   2897           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0094                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
0094   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0095   2897           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0096                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
0096   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
0097                  00111 Retardos_ms
0097   0090           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
0098                  00113 R1ms_BucleExterno
0098   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0099   008F           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
009A                  00116 R1ms_BucleInterno
009A   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
009B   0B8F           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
009C   289A           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
009D   0B90           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
009E   2898           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
009F   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
00A0                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
00A0   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
00A1   28AB           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00A2                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
00A2   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
00A3   28AB           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00A4                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
00A4   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00A5   28AB           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00A6                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
00A6   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00A7   28AB           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00A8                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
00A8   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00A9   28AB           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00AA                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
00AA   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
00AB                  00160 Retardo_1Decima
00AB   0091           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
00AC                  00162 R1Decima_BucleExterno2
00AC   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
00AD   0090           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
00AE                  00165 R1Decima_BucleExterno
00AE   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
00AF   008F           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B0                  00168 R1Decima_BucleInterno          
00B0   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
00B1   0B8F           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
00B2   28B0           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
00B3   0B90           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
00B4   28AE           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
00B5   0B91           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
00B6   28AC           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
00B7   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00056         END
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

ASCII_a_7Segmentos                0000002C
C                                 00000000
DC                                00000001
Display7s_Dato                    0000000E
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
F                                 00000001
FSR                               00000004
Fin                               0000000F
FinTablaASCII                     00000071
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000000
InicioTablaASCII                  00000041
MensajePosicion                   0000000C
Mensajes                          00000010
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
NoUltimoCaracter                  0000000A
Numero_a_7Segmentos               0000002A
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Principal                         00000003
R1Decima_BucleExterno             000000AE
R1Decima_BucleExterno2            000000AC
R1Decima_BucleInterno             000000B0
R1ms_BucleExterno                 00000098
R1ms_BucleInterno                 0000009A
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           0000000F
R_ContB                           00000010
R_ContC                           00000011
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

RetardoMicros                     00000084
Retardo_100micros                 0000007E
Retardo_100ms                     0000008A
Retardo_10micros                  00000071
Retardo_10ms                      00000090
Retardo_10s                       000000A2
Retardo_1Decima                   000000AB
Retardo_1ms                       00000096
Retardo_1s                        000000A8
Retardo_200micros                 0000007B
Retardo_200ms                     00000088
Retardo_20micros                  00000083
Retardo_20ms                      0000008E
Retardo_20s                       000000A0
Retardo_2ms                       00000094
Retardo_2s                        000000A6
Retardo_4micros                   00000077
Retardo_500micros                 00000078
Retardo_500ms                     000000AA
Retardo_50micros                  00000080
Retardo_50ms                      0000008C
Retardo_5micros                   00000076
Retardo_5ms                       00000092
Retardo_5s                        000000A4
Retardos_ms                       00000097
Rmicros_Bucle                     00000085
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
ValorCaracter                     0000000D
VisualizaOtroCaracter             00000004
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001
MPASM 03.50 Released                           RETARDO_10.ASM   10-15-1982  13:03:55         PAGE 10


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXX--------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   184
Program Memory Words Free:   840


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

