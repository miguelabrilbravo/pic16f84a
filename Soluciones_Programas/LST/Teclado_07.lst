MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;************************************** Teclado_07.asm **********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Los valores decimales que va escribiendo por el teclado aparece en pantalla. Si pulsa cualquier
                      00010 ; otra tecla que no sea un número decimal, lo interpreta como tecla de borrado de pantalla.
                      00011 ;
                      00012 ; ZONA DE DATOS **********************************************************************
                      00013 
2007   3FF1           00014         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00015         LIST       P=16F84A
                      00016         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00017 
                      00018         CBLOCK  0x0C
                      00019         ENDC
                      00020 
                      00021 ; ZONA DE CÓDIGOS ********************************************************************
                      00022 
0000                  00023         ORG     0
0000   2805           00024         goto    Inicio
0004                  00025         ORG     4
0004   280B           00026         goto    ServicioInterrupcion
0005                  00027 Inicio
0005   2056           00028         call    LCD_Inicializa
0006   202E           00029         call    Teclado_Inicializa      ; Configura líneas del teclado.
0007   3088           00030         movlw   b'10001000'             ; Habilita la interrupción RBI y la general.
0008   008B           00031         movwf   INTCON
0009                  00032 Principal
0009   0063           00033         sleep
000A   2809           00034         goto    Principal
                      00035 
                      00036 ; Subrutina "ServicioInterrupcion" ------------------------------------------------------
                      00037 ;
                      00038         CBLOCK
  0000000C            00039         GuardaValor
                      00040         ENDC
                      00041 
000B                  00042 ServicioInterrupcion
000B   2017           00043         call    Teclado_LeeHex          ; Obtiene el valor hexadecimal de la tecla pulsada.
000C   008C           00044         movwf   GuardaValor             ; Guarda el valor leído.
000D   3C09           00045         sublw   0x09                    ; Comprueba si es mayor de 9.
000E   1C03           00046         btfss   STATUS,C
000F   2813           00047         goto    BorraPantalla           ; Si no es carácter numérico, salta a borrar.
0010   080C           00048         movf    GuardaValor,W           ; Recupera el valor leído y lo
0011   20CF           00049         call    LCD_Nibble              ; visualiza en la pantalla.
0012   2814           00050         goto    EsperaDejePulsar
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013                  00051 BorraPantalla
0013   2095           00052         call    LCD_Borra               ; Borra la pantalla.
0014                  00053 EsperaDejePulsar
0014   2033           00054         call    Teclado_EsperaDejePulsar; Para que no se repita el mismo carácter.
0015   100B           00055         bcf     INTCON,RBIF
0016   0009           00056         retfie
                      00057 
                      00058         INCLUDE  <TECLADO.INC>
                      00001 ;**************************** Librería "TECLADO.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para la gestión de un teclado organizado en una matriz de 4 x 4 y 
                      00010 ; conectado al Puerto B según la disposición siguiente:
                      00011 ;
                      00012 ;                RB4 RB5 RB6 RB7
                      00013 ;                  ^    ^    ^    ^
                      00014 ;               |----|----|----|----|
                      00015 ;       RB0 --> |  0 |  1 |  2 |  3 |
                      00016 ;               |----|----|----|----|
                      00017 ;       RB1 --> |  4 |  5 |  6 |  7 |
                      00018 ;               |----|----|----|----|
                      00019 ;       RB2 --> |  8 |  9 | 10| 11|
                      00020 ;               |----|----|----|----|
                      00021 ;       RB3 --> | 12| 13| 14| 15|
                      00022 ;               |----|----|----|----|
                      00023 ;
                      00024 ; Los números que se han dibujado dentro de cada cuadrado es el número de orden de las teclas
                      00025 ; que no tiene por qué coincidir con lo serigrafiado sobre ellas. El paso del número de orden
                      00026 ; de la tecla al valor que hay serigrafiado sobre la misma, se hace con una tabla de conversión.
                      00027 ;
                      00028 ; ZONA DE DATOS **********************************************************************
                      00029 ;
                      00030         CBLOCK
  0000000D            00031         Tecl_TeclaOrden                 ; Orden de la tecla a chequear.
                      00032         ENDC
                      00033 
  0000000F            00034 Tecl_UltimaTecla        EQU     d'15'           ; Valor de orden de la última tecla utilizada.
                      00035 
                      00036 ; Subrutina "Teclado_LeeHex" ************************************************************
                      00037 ;
                      00038 ; Cada tecla tiene asignado un número de orden que es contabilizado en la variable
                      00039 ; Tecl_TeclaOrden. Para convertir a su valor según el tipo de teclado en concreto, se
                      00040 ; utiliza una tabla de conversión. 
                      00041 ; A continuación, se expone la relación entre el número de orden de la tecla y los
                      00042 ; valores correspondientes para el teclado hexadecimal más utilizado.
                      00043 ;
                      00044 ;           ORDEN DE TECLA:             TECLADO HEX. UTILIZADO:
                      00045 ;                0   1   2   3                  1  2  3  F
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00046 ;                4   5   6   7                  4  5  6  E
                      00047 ;                8   9  10  11                  7  8  9  D
                      00048 ;               12  13  14  15                  A  0  B  C
                      00049 ;
                      00050 ; Así, en este ejemplo, la tecla "7" ocupa el orden 8, la tecla "F" ocupa el orden 3 y la
                      00051 ; tecla "9" el orden 10.
                      00052 
                      00053 ; Si cambia el teclado, también hay cambiar de tabla de conversión.
                      00054 ;
                      00055 ; Entrada:      En (W) el orden de la tecla pulsada.
                      00056 ; Salida:       En (W) el valor hexadecimal para este teclado concreto.
                      00057 ;
0017                  00058 Teclado_LeeHex
0017   203B           00059         call    Teclado_LeeOrdenTecla   ; Lee el Orden de la tecla pulsada
0018   1C03           00060         btfss   STATUS,C                ; ¿Pulsa alguna tecla?, ¿C=1?
0019   281C           00061         goto    Tecl_FinLeeHex          ; No, por tanto sale.
001A   201D           00062         call    Tecl_ConvierteOrdenEnHex        ; Lo convierte en su valor real mediante tabla.
001B   1403           00063         bsf     STATUS,C                ; Vuelve a posicionar el Carry, porque la
001C                  00064 Tecl_FinLeeHex                          ; instrucción "addwf PCL,F" lo pone a 0.
001C   0008           00065         return
                      00066 ;
001D                  00067 Tecl_ConvierteOrdenEnHex                        ; Según el teclado utilizado resulta:
001D   0782           00068         addwf   PCL,F
001E   3401 3402 3403 00069         DT      1h,2h,3h,0Fh            ; Primera fila del teclado.
       340F 
0022   3404 3405 3406 00070         DT      4h,5h,6h,0Eh            ; Segunda fila del teclado
       340E 
0026   3407 3408 3409 00071         DT      7h,8h,9h,0Dh            ; Tercera fila del teclado.
       340D 
002A   340A 3400 340B 00072         DT      0Ah,0h,0Bh,0Ch          ; Cuarta fila del teclado.
       340C 
002E                  00073 Teclado_FinTablaHex
                      00074 ;
                      00075 ; Esta tabla se sitúa al principio de la librería con el propósito que no supere la
                      00076 ; posición 0FFh de memoria ROM de programa. De todas formas, en caso que así fuera 
                      00077 ; visualizaría el siguiente mensaje de error en el proceso de ensamblado:
                      00078 ;
                      00079         IF (Teclado_FinTablaHex > 0xFF)
                      00080                 ERROR   "Atención: La tabla ha superado el tamaño de la página de los"
                      00081                 MESSG   "primeros 256 bytes de memoria ROM. NO funcionará correctamente."
                      00082         ENDIF
                      00083         
                      00084 ; Subrutina "Teclado_Inicializa" --------------------------------------------------------
                      00085 ;
                      00086 ; Esta subrutina configura las líneas del Puerto B según la conexión del teclado realizada
                      00087 ; y comprueba que no hay pulsada tecla alguna al principio.
                      00088 
002E                  00089 Teclado_Inicializa
002E   1683           00090         bsf     STATUS,RP0              ; Configura las líneas del puerto:
002F   30F0           00091         movlw   b'11110000'             ; <RB7:RB4> entradas, <RB3:RB0> salidas
0030   0086           00092         movwf   PORTB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0031   1381           00093         bcf     OPTION_REG,NOT_RBPU     ; Habilita resistencia de Pull-Up del Puerto B.
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0032   1283           00094         bcf     STATUS,RP0              ; Acceso al banco 0.
                      00095 ;       call    Teclado_EsperaDejePulsar
                      00096 ;       return
                      00097 ;
                      00098 ; Subrutina "Teclado_EsperaDejePulsar" --------------------------------------------------
                      00099 ;
                      00100 ;Permanece en esta subrutina mientras siga pulsada la tecla.
                      00101 ;
  000000F0            00102 Teclado_Comprobacion    EQU     b'11110000'
                      00103 
0033                  00104 Teclado_EsperaDejePulsar:
0033   30F0           00105         movlw   Teclado_Comprobacion    ; Pone a cero las cuatro líneas de salida del 
0034   0086           00106         movwf   PORTB                   ; Puerto B.
0035                  00107 Teclado_SigueEsperando
0035   20F7           00108         call    Retardo_20ms            ; Espera a que se estabilicen los niveles de tensión.
0036   0806           00109         movf    PORTB,W         ; Lee el Puerto B.
0037   3CF0           00110         sublw   Teclado_Comprobacion    ; Si es lo mismo que escribió es que ya no pulsa 
0038   1D03           00111         btfss   STATUS,Z                ; tecla alguna.
0039   2835           00112         goto    Teclado_SigueEsperando
003A   0008           00113         return
                      00114 ;
                      00115 ; Subrutina "Teclado_LeeOrdenTecla" -----------------------------------------------------
                      00116 ;
                      00117 ; Lee el teclado, obteniendo el orden de la tecla pulsada. 
                      00118 ;
                      00119 ; Salida:       En (W) el número de orden de la tecla pulsada. Además Carry se pone a "1" si
                      00120 ;               se pulsa una tecla ó a "0" si no se pulsa tecla alguna.
                      00121 ;
003B                  00122 Teclado_LeeOrdenTecla:
003B   018D           00123         clrf    Tecl_TeclaOrden         ; Todavía no ha empezado a chequear el teclado.
003C   30FE           00124         movlw   b'11111110'             ; Va a chequear primera fila.
003D                  00125 Tecl_ChequeaFila                                ; (Ver esquema de conexión).
003D   0086           00126         movwf   PORTB                   ; Activa la fila correspondiente.
003E                  00127 Tecl_Columna1
003E   1E06           00128         btfss   PORTB,4                 ; Chequea 1ª columna buscando un cero. 
003F   2853           00129         goto    Tecl_GuardaValor                ; Sí, es cero y por tanto guarda su valor y sale.
0040   0A8D           00130         incf    Tecl_TeclaOrden,F               ; Va a chequear la siguiente tecla.
0041                  00131 Tecl_Columna2                           ; Repite proceso para las siguientes 
0041   1E86           00132         btfss   PORTB,5                 ; columnas.
0042   2853           00133         goto    Tecl_GuardaValor
0043   0A8D           00134         incf    Tecl_TeclaOrden,F
0044                  00135 Tecl_Columna3           
0044   1F06           00136         btfss   PORTB,6
0045   2853           00137         goto    Tecl_GuardaValor
0046   0A8D           00138         incf    Tecl_TeclaOrden,F
0047                  00139 Tecl_Columna4           
0047   1F86           00140         btfss   PORTB,7
0048   2853           00141         goto    Tecl_GuardaValor
0049   0A8D           00142         incf    Tecl_TeclaOrden,F
                      00143 ;
                      00144 ; Comprueba si ha chequeado la última tecla, en cuyo caso sale. Para ello testea si
                      00145 ; el contenido del registro Tecl_TeclaOrden es igual al número de teclas del teclado.
                      00146 ;
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004A                  00147 Tecl_TerminaColumnas
004A   300F           00148         movlw   Tecl_UltimaTecla
004B   020D           00149         subwf   Tecl_TeclaOrden,W               ; (W) = (Tecl_TeclaOrden)-Tecl_UltimaTecla.
004C   1803           00150         btfsc   STATUS,C                ; ¿C=0?, ¿(W) negativo?, ¿(Tecl_TeclaOrden)<15?.
004D   2851           00151         goto    Tecl_NoPulsada          ; No, se ha llegado al final del chequeo.
004E   1403           00152         bsf     STATUS,C                ; Sí. Va a chequear la siguiente fila.
004F   0D06           00153         rlf     PORTB,W         ; Apunta a la siguiente fila.
0050   283D           00154         goto    Tecl_ChequeaFila        
0051                  00155 Tecl_NoPulsada
0051   1003           00156         bcf     STATUS,C                ; Posiciona C=0, indicando que no ha pulsado
0052   2855           00157         goto    Tecl_FinTecladoLee      ; tecla alguna y sale.
0053                  00158 Tecl_GuardaValor
0053   080D           00159         movf    Tecl_TeclaOrden,W               ; El orden de la tecla pulsada en (W) y sale.
0054   1403           00160         bsf     STATUS,C                ; Como hay tecla tecla pulsada, pone C=1. 
0055                  00161 Tecl_FinTecladoLee
0055   0008           00162         return
                      00163         
                      00164 ;       ===================================================================
                      00165 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00166 ;         E. Palacios, F. Remiro y L. López.
                      00167 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00168 ;       ===================================================================
                      00059         INCLUDE  <LCD_4BIT.INC>
                      00001 ;**************************** Librería "LCD_4BIT.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00010 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00011 ;
                      00012 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00013 ; conexiones son:
                      00014 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00015 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00016 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00017 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00018 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00019 ;
                      00020 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00021 ;
                      00022 ; ZONA DE DATOS *********************************************************************
                      00023 
                      00024         CBLOCK
  0000000E            00025         LCD_Dato
  0000000F            00026         LCD_GuardaDato
  00000010            00027         LCD_GuardaTRISB
  00000011            00028         LCD_Auxiliar1
  00000012            00029         LCD_Auxiliar2
                      00030         ENDC
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00031 
  00000010            00032 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00033 
                      00034 #DEFINE  LCD_PinRS      PORTA,0
                      00035 #DEFINE  LCD_PinRW      PORTA,1
                      00036 #DEFINE  LCD_PinEnable  PORTA,2
                      00037 #DEFINE  LCD_BusDatos   PORTB
                      00038 
                      00039 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00040 ;
                      00041 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00042 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00043 ; configuración inicial hay que hacerla como sigue:
                      00044 ;
0056                  00045 LCD_Inicializa
0056   1683           00046         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
0057   1005           00047         bcf     LCD_PinRS               ; R/W y E.
0058   1105           00048         bcf     LCD_PinEnable
0059   1085           00049         bcf     LCD_PinRW
005A   1283           00050         bcf     STATUS,RP0
005B   1085           00051         bcf     LCD_PinRW               ; En caso de que esté conectado, le indica
                      00052                                         ; que se va a escribir en el LCD.
005C   1105           00053         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD, poniendo E=0.
005D   1005           00054         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
005E   20F7           00055         call    Retardo_20ms
005F   3030           00056         movlw   b'00110000'     
0060   206E           00057         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
0061   20FB           00058         call    Retardo_5ms     
0062   3030           00059         movlw   b'00110000'     
0063   206E           00060         call    LCD_EscribeLCD
0064   20E4           00061         call    Retardo_200micros
0065   3030           00062         movlw   b'00110000'     
0066   206E           00063         call    LCD_EscribeLCD
0067   3020           00064         movlw   b'00100000'             ; Interface de 4 bits.
0068   206E           00065         call    LCD_EscribeLCD
                      00066 
                      00067 ; Ahora configura el resto de los parámetros: 
                      00068 
0069   2097           00069         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
006A   2095           00070         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
006B   2093           00071         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
006C   2085           00072         call    LCD_CursorIncr          ; Cursor en modo incrementar.
006D   0008           00073         return
                      00074 
                      00075 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00076 ;
                      00077 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el
                      00078 ; pin "Enable" del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B
                      00079 ; que no son utilizadas para el LCD (pines RB3.. RB0), primero se lee estas líneas y después
                      00080 ; se vuelve a enviar este dato sin cambiarlo.
                      00081 
006E                  00082 LCD_EscribeLCD
006E   39F0           00083         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006F   008E           00084         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
0070   0806           00085         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
0071   390F           00086         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
0072   048E           00087         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00088                                         ; y en la parte baja lo que había antes.
0073   1683           00089         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0074   0806           00090         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
0075   0090           00091         movwf   LCD_GuardaTRISB
0076   300F           00092         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
0077   0586           00093         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
0078   1283           00094         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00095 ;
0079   080E           00096         movf    LCD_Dato,W              ; Recupera el dato a enviar.
007A   0086           00097         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
007B   1505           00098         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD, mediante un pequeño
007C   1105           00099         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
007D   1C05           00100         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
007E   20FD           00101         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
007F   20E9           00102         call    Retardo_50micros
0080   1683           00103         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
0081   0810           00104         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
0082   0086           00105         movwf   PORTB                   ; Realmente es TRISB.
0083   1283           00106         bcf     STATUS,RP0              ; Acceso al Banco 0.
0084   0008           00107         return
                      00108 
                      00109 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00110 ;
                      00111 ;Los comandos que pueden ser ejecutados son:
                      00112 ;
0085                  00113 LCD_CursorIncr                          ; Cursor en modo incrementar.
0085   3006           00114         movlw   b'00000110'
0086   2898           00115         goto    LCD_EnviaComando
0087                  00116 LCD_Linea1                              ; Cursor al principio de la Línea 1.
0087   3080           00117         movlw   b'10000000'             ; Dirección 00h de la DDRAM
0088   2898           00118         goto    LCD_EnviaComando
0089                  00119 LCD_Linea2                              ; Cursor al principio de la Línea 2.
0089   30C0           00120         movlw   b'11000000'             ; Dirección 40h de la DDRAM
008A   2898           00121         goto    LCD_EnviaComando
008B                  00122 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
008B   3880           00123         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
008C   2898           00124         goto    LCD_EnviaComando        ; registro W.
008D                  00125 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
008D   38C0           00126         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
008E   2898           00127         goto    LCD_EnviaComando        ; registro W.
008F                  00128 LCD_OFF                         ; Pantalla apagada.
008F   3008           00129         movlw   b'00001000'
0090   2898           00130         goto    LCD_EnviaComando
0091                  00131 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
0091   300E           00132         movlw   b'00001110'
0092   2898           00133         goto    LCD_EnviaComando
0093                  00134 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
0093   300C           00135         movlw   b'00001100'
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0094   2898           00136         goto    LCD_EnviaComando
0095                  00137 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
0095   3001           00138         movlw   b'00000001'             ; cursor a principio de la línea 1.
0096   2898           00139         goto    LCD_EnviaComando
0097                  00140 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
0097   3028           00141         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00142 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00143 
                      00144 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00145 ;
                      00146 ; "LCD_EnviaComando": Escribe un comando en el registro del módulo LCD. La palabra de
                      00147 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00148 ; "LCD_Caracter": Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00149 ; a través del registro W. Trabaja en Modo Dato.
                      00150 ;
0098                  00151 LCD_EnviaComando
0098   1005           00152         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
0099   289C           00153         goto    LCD_Envia
009A                  00154 LCD_Caracter
009A   1405           00155         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
009B   20A1           00156         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
009C                  00157 LCD_Envia
009C   008F           00158         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
009D   206E           00159         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
009E   0E0F           00160         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00161                                         ; nibble bajo del dato a enviar a parte alta del byte.
009F   206E           00162         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
00A0   0008           00163         return  
                      00164 
                      00165 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00166 ;
                      00167 ; A partir del carácter ASCII número 127, los códigos de los caracteres definidos en la
                      00168 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00169 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00170 ;
                      00171 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00172 ; que puedan ser visualizado en el módulo LM016L.
                      00173 ; 
                      00174 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00175 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00176 
00A1                  00177 LCD_CodigoCGROM
00A1   008E           00178         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
00A2                  00179 LCD_EnheMinuscula                       ; un carácter especial.
00A2   3CF1           00180         sublw   'ñ'                     ; ¿Es la "ñ"?
00A3   1D03           00181         btfss   STATUS,Z
00A4   28A8           00182         goto    LCD_EnheMayuscula       ; No es "ñ".
00A5   30EE           00183         movlw   b'11101110'             ; Código CGROM de la "ñ".
00A6   008E           00184         movwf   LCD_Dato
00A7   28B5           00185         goto    LCD_FinCGROM
00A8                  00186 LCD_EnheMayuscula
00A8   080E           00187         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
00A9   3CD1           00188         sublw   'Ñ'                     ; ¿Es la "Ñ"?
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AA   1D03           00189         btfss   STATUS,Z
00AB   28AF           00190         goto    LCD_Grado               ; No es "Ñ".
00AC   30EE           00191         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
00AD   008E           00192         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
00AE   28B5           00193         goto    LCD_FinCGROM    
00AF                  00194 LCD_Grado
00AF   080E           00195         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
00B0   3CBA           00196         sublw   'º'                     ; ¿Es el símbolo "º"?
00B1   1D03           00197         btfss   STATUS,Z
00B2   28B5           00198         goto    LCD_FinCGROM            ; No es "º".
00B3   30DF           00199         movlw   b'11011111'             ; Código CGROM del símbolo "º".
00B4   008E           00200         movwf   LCD_Dato
00B5                  00201 LCD_FinCGROM
00B5   080E           00202         movf    LCD_Dato,W              ; En (W) el código buscado.
00B6   0008           00203         return
                      00204 
                      00205 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00206 ;
                      00207 ; Visualiza espacios en blanco.
                      00208 
00B7                  00209 LCD_LineaEnBlanco
00B7   3010           00210         movlw   LCD_CaracteresPorLinea
00B8   28BE           00211         goto    LCD_EnviaBlancos
00B9                  00212 LCD_UnEspacioBlanco
00B9   3001           00213         movlw   .1
00BA   28BE           00214         goto    LCD_EnviaBlancos
00BB                  00215 LCD_DosEspaciosBlancos
00BB   3002           00216         movlw   .2
00BC   28BE           00217         goto    LCD_EnviaBlancos
00BD                  00218 LCD_TresEspaciosBlancos
00BD   3003           00219         movlw   .3
00BE                  00220 LCD_EnviaBlancos
00BE   0091           00221         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
00BF                  00222 LCD_EnviaOtroBlanco     
00BF   3020           00223         movlw   ' '                     ; Esto es un espacio en blanco.
00C0   209A           00224         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
00C1   0B91           00225         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
00C2   28BF           00226         goto    LCD_EnviaOtroBlanco
00C3   0008           00227         return
                      00228 
                      00229 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00230 ;
                      00231 ; Subrutina "LCD_ByteCompleto": Visualiza el byte que almacena el registro W en el
                      00232 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00233 ;
                      00234 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero, 
                      00235 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00236 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00237 ;
                      00238 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00239 ;
00C4                  00240 LCD_Byte
00C4   0092           00241         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C5   39F0           00242         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
00C6   1D03           00243         btfss   STATUS,Z                ; Si es cero lo apaga.
00C7   28CC           00244         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
00C8   3020           00245         movlw   ' '                     ; Visualiza un espacio en blanco.
00C9   209A           00246         call    LCD_Caracter
00CA   28CE           00247         goto    LCD_VisualizaBajo
                      00248 
00CB                  00249 LCD_ByteCompleto
00CB   0092           00250         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
00CC                  00251 LCD_VisualizaAlto
00CC   0E12           00252         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
00CD   20CF           00253         call    LCD_Nibble              ; Lo visualiza.
00CE                  00254 LCD_VisualizaBajo
00CE   0812           00255         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00256 ;       call    LCD_Nibble              ; Lo visualiza.
                      00257 ;       return
                      00258 
                      00259 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00260 ;
                      00261 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00262 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00263 ; - Si (W)=b'01010110', se visualizará "6". 
                      00264 ; - Si (W)=b'10101110', se visualizará "E". 
                      00265 ;
00CF                  00266 LCD_Nibble
00CF   390F           00267         andlw   b'00001111'             ; Se queda con la parte baja.
00D0   0091           00268         movwf   LCD_Auxiliar1           ; Lo guarda.
00D1   3C09           00269         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
00D2   1C03           00270         btfss   STATUS,C        
00D3   28D7           00271         goto    LCD_EnviaByteLetra
00D4   0811           00272         movf    LCD_Auxiliar1,W
00D5   3E30           00273         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
00D6   28D9           00274         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
00D7                  00275 LCD_EnviaByteLetra
00D7   0811           00276         movf    LCD_Auxiliar1,W
00D8   3E37           00277         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
00D9                  00278 LCD_FinVisualizaDigito
00D9   289A           00279         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00280                                         ; para no sobrecargar la pila.
                      00060         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000013            00021         R_ContA                         ; Contadores para los retardos.
  00000014            00022         R_ContB
  00000015            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
00DA                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
00DA   0000           00033         nop                             ; Aporta 1 ciclo máquina.
00DB   0000           00034         nop                             ; Aporta 1 ciclo máquina.
00DC   0000           00035         nop                             ; Aporta 1 ciclo máquina.
00DD   0000           00036         nop                             ; Aporta 1 ciclo máquina.
00DE   0000           00037         nop                             ; Aporta 1 ciclo máquina.
00DF                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
00DF   0000           00039         nop                             ; Aporta 1 ciclo máquina.
00E0                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
00E0   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
00E1                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
00E1   0000           00046         nop                             ; Aporta 1 ciclo máquina.
00E2   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
00E3   28ED           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00E4                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
00E4   0000           00050         nop                             ; Aporta 1 ciclo máquina.
00E5   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
00E6   28ED           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00E7                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
00E7   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
00E8   28ED           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00E9                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
00E9   0000           00057         nop                             ; Aporta 1 ciclo máquina.
00EA   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
00EB   28ED           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00EC                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
00EC   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
00ED                  00066 RetardoMicros
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00ED   0093           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
00EE                  00068 Rmicros_Bucle
00EE   0B93           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
00EF   28EE           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
00F0   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
00F1                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
00F1   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
00F2   2900           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00F3                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
00F3   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
00F4   2900           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00F5                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
00F5   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
00F6   2900           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00F7                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
00F7   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
00F8   2900           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00F9                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
00F9   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
00FA   2900           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00FB                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
00FB   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
00FC   2900           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00FD                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
00FD   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
00FE   2900           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00FF                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
00FF   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
0100                  00111 Retardos_ms
0100   0094           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
0101                  00113 R1ms_BucleExterno
0101   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
0102   0093           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
0103                  00116 R1ms_BucleInterno
0103   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
0104   0B93           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
0105   2903           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0106   0B94           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0107   2901           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
0108   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
0109                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
0109   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
010A   2914           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
010B                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
010B   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
010C   2914           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
010D                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
010D   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
010E   2914           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
010F                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
010F   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0110   2914           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0111                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
0111   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0112   2914           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0113                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
0113   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
0114                  00160 Retardo_1Decima
0114   0095           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
0115                  00162 R1Decima_BucleExterno2
0115   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
0116   0094           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
0117                  00165 R1Decima_BucleExterno
0117   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
0118   0093           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
0119                  00168 R1Decima_BucleInterno          
0119   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
011A   0B93           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
011B   2919           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
011C   0B94           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011D   2917           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
011E   0B95           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
011F   2915           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
0120   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00061         END
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

BorraPantalla                     00000013
C                                 00000000
DC                                00000001
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
EsperaDejePulsar                  00000014
F                                 00000001
FSR                               00000004
GIE                               00000007
GuardaValor                       0000000C
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000005
LCD_2Lineas4Bits5x7               00000097
LCD_Auxiliar1                     00000011
LCD_Auxiliar2                     00000012
LCD_Borra                         00000095
LCD_BusDatos                      PORTB
LCD_Byte                          000000C4
LCD_ByteCompleto                  000000CB
LCD_Caracter                      0000009A
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   000000A1
LCD_CursorIncr                    00000085
LCD_CursorOFF                     00000093
LCD_CursorON                      00000091
LCD_Dato                          0000000E
LCD_DosEspaciosBlancos            000000BB
LCD_EnheMayuscula                 000000A8
LCD_EnheMinuscula                 000000A2
LCD_Envia                         0000009C
LCD_EnviaBlancos                  000000BE
LCD_EnviaByteLetra                000000D7
LCD_EnviaComando                  00000098
LCD_EnviaOtroBlanco               000000BF
LCD_EscribeLCD                    0000006E
LCD_FinCGROM                      000000B5
LCD_FinVisualizaDigito            000000D9
LCD_Grado                         000000AF
LCD_GuardaDato                    0000000F
LCD_GuardaTRISB                   00000010
LCD_Inicializa                    00000056
LCD_Linea1                        00000087
LCD_Linea2                        00000089
LCD_LineaEnBlanco                 000000B7
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

LCD_Nibble                        000000CF
LCD_OFF                           0000008F
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                0000008B
LCD_PosicionLinea2                0000008D
LCD_TresEspaciosBlancos           000000BD
LCD_UnEspacioBlanco               000000B9
LCD_VisualizaAlto                 000000CC
LCD_VisualizaBajo                 000000CE
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Principal                         00000009
R1Decima_BucleExterno             00000117
R1Decima_BucleExterno2            00000115
R1Decima_BucleInterno             00000119
R1ms_BucleExterno                 00000101
R1ms_BucleInterno                 00000103
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           00000013
R_ContB                           00000014
R_ContC                           00000015
RetardoMicros                     000000ED
Retardo_100micros                 000000E7
Retardo_100ms                     000000F3
Retardo_10micros                  000000DA
Retardo_10ms                      000000F9
Retardo_10s                       0000010B
Retardo_1Decima                   00000114
Retardo_1ms                       000000FF
Retardo_1s                        00000111
Retardo_200micros                 000000E4
Retardo_200ms                     000000F1
Retardo_20micros                  000000EC
Retardo_20ms                      000000F7
Retardo_20s                       00000109
Retardo_2ms                       000000FD
Retardo_2s                        0000010F
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

Retardo_4micros                   000000E0
Retardo_500micros                 000000E1
Retardo_500ms                     00000113
Retardo_50micros                  000000E9
Retardo_50ms                      000000F5
Retardo_5micros                   000000DF
Retardo_5ms                       000000FB
Retardo_5s                        0000010D
Retardos_ms                       00000100
Rmicros_Bucle                     000000EE
STATUS                            00000003
ServicioInterrupcion              0000000B
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
Tecl_ChequeaFila                  0000003D
Tecl_Columna1                     0000003E
Tecl_Columna2                     00000041
Tecl_Columna3                     00000044
Tecl_Columna4                     00000047
Tecl_ConvierteOrdenEnHex          0000001D
Tecl_FinLeeHex                    0000001C
Tecl_FinTecladoLee                00000055
Tecl_GuardaValor                  00000053
Tecl_NoPulsada                    00000051
Tecl_TeclaOrden                   0000000D
Tecl_TerminaColumnas              0000004A
Tecl_UltimaTecla                  0000000F
Teclado_Comprobacion              000000F0
Teclado_EsperaDejePulsar          00000033
Teclado_FinTablaHex               0000002E
Teclado_Inicializa                0000002E
Teclado_LeeHex                    00000017
Teclado_LeeOrdenTecla             0000003B
Teclado_SigueEsperando            00000035
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
MPASM 03.50 Released                           TECLADO_07.ASM   10-11-2003  17:55:25         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX X--------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   286
Program Memory Words Free:   738


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     2 reported,     0 suppressed

