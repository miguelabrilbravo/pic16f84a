MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;********************************* DS1820_Termostato.asm ******************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Programa de control para un termómetro y termostato digital. Utiliza el sensor de temperatura
                      00010 ; DS1820 que transmite la información vía serie a través de un bus de una sola línea según un
                      00011 ; protocolo del fabricante de semiconductores Dallas Semiconductors.
                      00012 ;
                      00013 ; El ajuste de la temperatura a la que conmuta el termostato se logra mediante dos pulsadores:
                      00014 ; "MODO" e "INCREMENTAR", que se conectan a pines del Puerto B y su funcionamiento se basa en
                      00015 ; interrupción por cambio en la línea del Puerto B.
                      00016 ;
                      00017 ; Se maneja de la siguiente forma:
                      00018 ;     - En estado de reposo funciona solo como termómetro. Aparece la temperatura en pantalla
                      00019 ;       del módulo LCD. La salida del termostato está apagada.
                      00020 ;     - Pulsa "MODO" y se ajusta la temperatura deseada mediante el pulsador "INCREMENTAR".
                      00021 ;     - Vuelve a pulsar "MODO", se activa el termostato. Si la temperatura medida es menor que
                      00022 ;       la deseada enciende la carga que puede ser un calefactor. Si la temperatura medida es
                      00023 ;       mayor que la deseada, apaga la carga.
                      00024 ;     - Si se vuelve a pulsar "MODO", apaga la carga y pasa a funcionar solo como termómetro.
                      00025 ;
                      00026 ; Así pues, en el circuito se distinguen tres modos de funcionamiento que se identifican
                      00027 ; mediante tres flags:
                      00028 ; A)    Modo "Termostato_OFF", en donde funciona como termómetro normal sin termostato. Se
                      00029 ;       reconoce por el flag F_Termostato_OFF.
                      00030 ; B)    Modo "Termostato_Ajuste", en donde se ajusta la temperatura deseada cuando funcione
                      00031 ;       como termostato. Se reconoce por el flag F_Termostato_Ajuste.
                      00032 ; C)    Modo "Termostato_ON", en donde funciona como termómetro normal con termostato. Se
                      00033 ;       reconoce por el flag F_Termostato_ON.
                      00034 ;
                      00035 ; El programa consigue que esté activado uno solo de los flags anteriores.
                      00036 ;
                      00037 ; ZONA DE DATOS **********************************************************************
                      00038 
2007   3FF1           00039         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00040         LIST       P=16F84A
                      00041         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00042 
                      00043         CBLOCK  0x0C
  0000000C            00044         TemperaturaDeseada
  0000000D            00045         Registro50ms                            ; Guarda los incrementos cada 50 ms.
  0000000E            00046         FlagsModos                              ; Guarda los flags para establecer los
                      00047         ENDC                                    ; modos de trabajo.
                      00048 
                      00049 #DEFINE  SalidaTermostato               PORTB,1         ; Carga controlada por el termostato.
                      00050 #DEFINE  Zumbador               PORTB,2         ; Aquí se conecta el zumbador.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00051 #DEFINE  ModoPulsador           PORTB,7         ; Los pulsadores se conectan a estos
                      00052 #DEFINE  IncrementarPulsador    PORTB,6         ; pines del puerto B.
                      00053 #DEFINE  F_Termostato_ON                FlagsModos,2    ; Flags utilizados en el ajuste de la
                      00054 #DEFINE  F_Termostato_Ajuste    FlagsModos,1    ; temperatura del termostato.
                      00055 #DEFINE  F_Termostato_OFF       FlagsModos,0
                      00056 
  FFFFFF3D            00057 TMR0_Carga50ms  EQU     -d'195'                 ; Para conseguir interrupción cada 50 ms.
  00000028            00058 Carga2s         EQU     d'40'                   ; Leerá cada 2s = 40 x 50ms = 2000ms.   
                      00059 
                      00060 ; ZONA DE CÓDIGOS ********************************************************************
                      00061 
0000                  00062         ORG     0
0000   2839           00063         goto    Inicio
0004                  00064         ORG     4
0004   2850           00065         goto    ServicioInterrupcion
                      00066 
0005                  00067 Mensajes
0005   0782           00068         addwf   PCL,F
0006                  00069 MensajePublicitario
0006   3449 3445 3453 00070         DT "IES. ISAAC PERAL", 0x00
       342E 3420 3449 
       3453 3441 3441 
       3443 3420 3450 
       3445 3452 3441 
       344C 3400 
0017                  00071 MensajeTermostato_ON
0017   3454 3465 3472 00072         DT "Termostato: ", 0x00
       346D 346F 3473 
       3474 3461 3474 
       346F 343A 3420 
       3400 
0024                  00073 MensajeTermostato_Ajuste
0024   3454 3465 346D 00074         DT "Temper. deseada", 0x00
       3470 3465 3472 
       342E 3420 3464 
       3465 3473 3465 
       3461 3464 3461 
       3400 
0034                  00075 MensajeGradoCentigrado
0034   34BA 3443 3420 00076         DT "ºC  ", 0x00                 ; En pantalla LCD: "ºC  "
       3420 3400 
                      00077 
0039   2179           00078 Inicio  call    LCD_Inicializa
003A   1683           00079         bsf     STATUS,RP0
003B   3007           00080         movlw   b'00000111'             ; Prescaler de 256 para el TMR0 y habilita
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003C   0081           00081         movwf   OPTION_REG              ; resistencias de Pull-Up del Puerto B.
003D   1786           00082         bsf     ModoPulsador            ; Se configuran como entrada.
003E   1706           00083         bsf     IncrementarPulsador
003F   1086           00084         bcf     SalidaTermostato                ; Se configuran como salida.
0040   1106           00085         bcf     Zumbador
0041   1283           00086         bcf     STATUS,RP0
0042   21AA           00087         call    LCD_Linea1              ; Se sitúa al principio de la primera línea.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   3006           00088         movlw   MensajePublicitario
0044   21FD           00089         call    LCD_Mensaje
0045   2102           00090         call    DS1820_Inicializa               ; Comienza la conversión del termómetro y pone
0046   20A9           00091         call    ModoTermostato_OFF      ; este modo de funcionamiento.
0047   303D           00092         movlw   TMR0_Carga50ms          ; Carga el TMR0 en complemento a 2.
0048   0081           00093         movwf   TMR0
0049   3028           00094         movlw   Carga2s                 ; Y el registro cuyo decremento contará los 2 s.
004A   008D           00095         movwf   Registro50ms
004B   3018           00096         movlw   .24                     ; Inicializa el valor de la temperatura deseada.
004C   008C           00097         movwf   TemperaturaDeseada
004D   30A8           00098         movlw   b'10101000'             ; Activa interrupción del TMR0 (TOIE), por cambio de
004E   008B           00099         movwf   INTCON                  ; líneas del Puerto B (RBIE) y la general (GIE)
                      00100 ;
                      00101 ; La sección "Principal" es mantenimiento. Solo espera las interrupciones.
                      00102 ; No se puede poner en modo de bajo consumo porque la instrucción "sleep" detiene el Timer 0.
                      00103 
004F                  00104 Principal
004F   284F           00105         goto    Principal
                      00106 
                      00107 ; Subrutina "ServicioInterrupcion" ------------------------------------------------------
                      00108 ;
                      00109 ; Detecta que ha producido la interrupción y ejecuta la subrutina de atención correspondiente.
                      00110 
0050                  00111 ServicioInterrupcion
0050   190B           00112         btfsc   INTCON,T0IF             ; Si es una interrupción producida por el Timer 0,
0051   205B           00113         call    Termometro              ; lee el termómetro y actualiza termostato.
0052   1C0B           00114         btfss   INTCON,RBIF             ; Si es una interrupción RBI, lee los pulsadores.
0053   2858           00115         goto    FinInterrupcion
0054   1F86           00116         btfss   ModoPulsador            ; ¿Está presionado el pulsador de "AJUSTE"?
0055   20A3           00117         call    CambiarModo             ; Sí. Ajusta la temperatura deseada en el termostato.
0056   1F06           00118         btfss   IncrementarPulsador     ; ¿Pulsado "INCREMENTAR"?
0057   20B5           00119         call    IncrementarTempDeseada  ; Sí, pasa a incrementar la temperatura deseada.
0058                  00120 FinInterrupcion
0058   100B           00121         bcf     INTCON,RBIF             ; Limpia los flags de reconocimiento.
0059   110B           00122         bcf     INTCON,T0IF
005A   0009           00123         retfie
                      00124 
                      00125 ; Subrutina "Termometro" ----------------------------------------------------------------
                      00126 ;
                      00127 ; Esta subrutina lee y visualiza el termómetro cada 2 segundos aproximadamente. Se ejecuta
                      00128 ; debido a la petición de interrupción del Timer 0, cada 50 ms. Para conseguir una
                      00129 ; temporización de 2 s, habrá que repetir 40 veces el lazo de 50 ms (40x50ms=2000ms=2s).
                      00130 ;
                      00131 ; También actúa sobre la salida del termostato posicionándola adecuadamente.
                      00132 
005B                  00133 Termometro
005B   303D           00134         movlw   TMR0_Carga50ms
005C   0081           00135         movwf   TMR0                    ; Recarga el TMR0.
005D   0B8D           00136         decfsz  Registro50ms,F          ; Decrementa el contador.
005E   2858           00137         goto    FinInterrupcion         ; No han pasado 2 segundos, por tanto, sale.
005F   3028           00138         movlw   Carga2s                 ; Repone este contador nuevamente.
0060   008D           00139         movwf   Registro50ms
0061   2108           00140         call    DS1820_LeeTemperatura   ; Lee la temperatura.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0062   2102           00141         call    DS1820_Inicializa               ; Comienza conversión para la siguiente lectura.
0063   208F           00142         call    Termostato              ; Actúa sobre el termostato.
                      00143 ;       call    Visualiza                       ; Como esta subrutina se escribe a continuación
                      00144 ;       return                          ; se ahorra estas dos instrucciones y ahorra 
                      00145                                         ; también espacio en la pila.
                      00146 ; Subrutina "Visualiza" -----------------------------------------------------------------
                      00147 ;
                      00148 ; Visualiza el termómetro en tres formatos posibles:
                      00149 ; A)    Con el termostato desactivado, modo "Termostato_OFF". Por ejemplo:
                      00150 ;                               "IES. Isaac Peral" (Primera línea)
                      00151 ;                               "       24.5ºC   " (Segunda línea).
                      00152 ;               Donde en la primera línea se visualiza un mensaje publicitario y en la
                      00153 ;               segunda línea la temperatura medida actual.
                      00154 ; B)    Ajuste del termostato, modo "Termostato_Ajuste". Por ejemplo:
                      00155 ;                               "Temper. deseada" (Primera línea)
                      00156 ;                               "        25ºC     " (Segunda línea).
                      00157 ;               Donde en la segunda línea visualiza la temperatura que se desea ajustar.
                      00158 ; C)    Con el termostato activado, modo "Termostato_ON". Por ejemplo:
                      00159 ;                               "Termostato: 25ºC" (Primera línea)
                      00160 ;                               "      23.5ºC    " (Segunda línea).
                      00161 ;               Donde en la primera línea se visualiza la temperatura que se desea
                      00162 ;               ajustar y en la segunda línea la temperatura medida actual.
0064                  00163 Visualiza
0064   180E           00164         btfsc   F_Termostato_OFF
0065   287C           00165         goto    VisualizaTermometro
0066   188E           00166         btfsc   F_Termostato_Ajuste
0067   2871           00167         goto    VisualizaTermostato_Ajuste
0068   190E           00168         btfsc   F_Termostato_ON
0069   286B           00169         goto    VisualizaTermostato_ON
006A   0008           00170         return
                      00171 
                      00172 ; "VisualizaTermostato_ON" --------------------------------------------------------------
                      00173 ;
                      00174 ; Visualiza el valor de la temperatura deseada en la primera línea y del valor de la
                      00175 ; temperatura medida en la segunda línea.
                      00176 ; 
006B                  00177 VisualizaTermostato_ON
006B   21AA           00178         call    LCD_Linea1
006C   3017           00179         movlw   MensajeTermostato_ON
006D   21FD           00180         call    LCD_Mensaje
006E   2076           00181         call    VisualizaTemperaturaDeseada
006F   207F           00182         call    VisualizaTemperaturaMedida
0070   0008           00183         return
                      00184 
                      00185 ; "VisualizaTermostatoAjuste" y "VisualizaTemperaturaDeseada" ---------------------------
                      00186 ;
                      00187 ; Visualiza en la pantalla el formato propio de este modo.
                      00188 ; 
                      00189 ; Entradas:     (TemperaturaDeseada), temperatura ajustada en la subrutina "Incrementar".
                      00190 
0071                  00191 VisualizaTermostato_Ajuste
0071   21AA           00192         call    LCD_Linea1              ; Se sitúa al principio de la primera línea.
0072   3024           00193         movlw   MensajeTermostato_Ajuste        ; Visualiza mensaje en la primera línea.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0073   21FD           00194         call    LCD_Mensaje
0074   3006           00195         movlw   .6                      ; Se coloca para centrar visualización en la 
0075   21B0           00196         call    LCD_PosicionLinea2      ; segunda línea.
0076                  00197 VisualizaTemperaturaDeseada
0076   080C           00198         movf    TemperaturaDeseada,W
0077   2166           00199         call    BIN_a_BCD               ; La pasa a BCD.
0078   21E7           00200         call    LCD_Byte                ; Visualiza apagando los ceros no significativos.
0079   3034           00201         movlw   MensajeGradoCentigrado  ; En pantalla aparece "ºC  ".
007A   21FD           00202         call    LCD_Mensaje
007B   0008           00203         return
                      00204 
                      00205 ; "VisualizaTermometro" y ""VisualizaTemperaturaMedida" ---------------------------------
                      00206 ;
                      00207 ; En la primera línea se visualiza un mensaje publicitario y en la segunda línea la
                      00208 ; temperatura medida
                      00209 ;
                      00210 ; Entradas:  -  (DS1820_Temperatura), temperatura medida en valor absoluto.
                      00211 ;            -  (DS1820_TemperaturaDecimal), parte decimal de la temperatura medida.
                      00212 ;            -  (DS1820_Signo), registro con el signo de la temperatura. Si es igual a
                      00213 ;               b'00000000', la temperatura es positiva. Si es b'11111111', resulta que
                      00214 ;               la temperatura es negativa.
                      00215 ;
007C                  00216 VisualizaTermometro
007C   21AA           00217         call    LCD_Linea1              ; Se sitúa al principio de la primera línea.
007D   3006           00218         movlw   MensajePublicitario
007E   21FD           00219         call    LCD_Mensaje
007F                  00220 VisualizaTemperaturaMedida
007F   3005           00221         movlw   .5                      ; Se coloca para centrar visualización en la
0080   21B0           00222         call    LCD_PosicionLinea2      ; segunda línea.
0081   1F92           00223         btfss   DS1820_TemperaturaSigno,7 ; ¿Temperatura negativa?.
0082   2885           00224         goto    TemperaturaPositiva             ; No, es positiva.
0083                  00225 TemperaturaNegativa:
0083   302D           00226         movlw   '-'                     ; Visualiza el signo "-" de temperatura negativa.
0084   21BD           00227         call    LCD_Caracter
0085                  00228 TemperaturaPositiva
0085   0811           00229         movf    DS1820_Temperatura,W
0086   2166           00230         call    BIN_a_BCD               ; La pasa a BCD.
0087   21E7           00231         call    LCD_Byte                ; Visualiza apagando los ceros no significativos.
0088   302E           00232         movlw   '.'                     ; Visualiza el punto decimal.
0089   21BD           00233         call    LCD_Caracter
008A   0813           00234         movf    DS1820_TemperaturaDecimal,W ; Visualiza la parte decimal.
008B   21F2           00235         call    LCD_Nibble
008C   3034           00236         movlw   MensajeGradoCentigrado  ; En pantalla LCD aparece "ºC  ".
008D   21FD           00237         call    LCD_Mensaje
008E   0008           00238         return
                      00239 
                      00240 ; Subrutina "Termostato" ----------------------------------------------------------------
                      00241 ;
                      00242 ; Controla una carga en función del valor de la temperatura medida respecto de la temperatura
                      00243 ; deseada. Para evitar inestabilidad en la salida, tendrá un pequeño ciclo de histéresis.
                      00244 ; Así por ejemplo, si la temperatura deseada es 24 ºC, la carga se activará cuando la
                      00245 ; temperatura baje o sea igual a 23,5 ºC y se apagará cuando la supere o sea igual a 25ºC.
                      00246 ; Si la temperatura medida está entre esos márgenes (23,5 y 25ºC), se queda en el estado
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00247 ; anterior, tanto si está encendida como apagada.
                      00248 ;
                      00249 ; Para temperaturas negativas la salida se debe activar siempre.
                      00250 ;
                      00251 ; Entradas:   - (DS1820_Temperatura), temperatura medida en valor absoluto.
                      00252 ;            -  (TemperaturaDeseada), temperatura a partir de la cual se tomarán
                      00253 ;               decisiones sobre la salida.
                      00254 ;            -  (DS1820_Signo), registro con el signo de la temperatura medida. Si es cero,
                      00255 ;               la temperatura es positiva y todos sus bits son uno, es negativa.
                      00256 ;
                      00257 ; Salida:    -  Su funcionamiento:
                      00258 ;                    -  Estando apagada, si la temperatura medida desciende por debajo de la
                      00259 ;                       temperatura deseada, la salida se activará.
                      00260 ;                    -  Estando encendida, si la temperatura medida supera la deseada, la
                      00261 ;                       salida se apagará.
                      00262 ;                    -  Si las temperaturas medidas y deseada son iguales, se queda en estado
                      00263 ;                       anterior, tanto si está encendida como si está apagada.
                      00264 ;                    -  Para temperaturas negativas la salida se debe activar siempre.
008F                  00265 Termostato
008F   1D0E           00266         btfss   F_Termostato_ON         ; Si el termostato no está activado, salta a
0090   289A           00267         goto    ApagaCarga              ; apagar la carga.
0091   1B92           00268         btfsc   DS1820_TemperaturaSigno,7       ; Con temperaturas negativas, pasa a activar
0092   28A0           00269         goto    EnciendeCarga           ; la carga.
0093   1C86           00270         btfss   SalidaTermostato                ; Comprueba el estado actual de la salida para
0094   289C           00271         goto    SalidaEstabaApagada     ; actuar en consecuencia.
0095                  00272 SalidaEstabaActivada                    ; Pasa a comprobar si tiene que apagar la carga.
0095   0811           00273         movf    DS1820_Temperatura,W
0096   020C           00274         subwf   TemperaturaDeseada,W    ; (W)=(TemperaturaDeseada)-(DS1820_Temperatura).
0097   1803           00275         btfsc   STATUS,C                ; ¿(TemperaturaDeseada)<(DS1820_Temperatura)?   
0098   28A2           00276         goto    FinTermostato           ; Sí, por tanto, lo deja encendido y sale.
0099   20C9           00277         call    Pitido                  ; Pitido cada vez que conmuta la carga.
009A                  00278 ApagaCarga
009A   1086           00279         bcf     SalidaTermostato                ; Apaga la salida y sale.
009B   28A2           00280         goto    FinTermostato
009C                  00281 SalidaEstabaApagada                     ; Pasa a comprobar si tiene que encender la carga
009C   080C           00282         movf    TemperaturaDeseada,W
009D   0211           00283         subwf   DS1820_Temperatura,W    ; (W)=(DS1820_Temperatura)-(TemperaturaDeseada).
009E   1803           00284         btfsc   STATUS,C                ; ¿(DS1820_Temperatura)<(TemperaturaDeseada)?   
009F   28A2           00285         goto    FinTermostato           ; Sí, lo deja apagada y sale.
00A0                  00286 EnciendeCarga
00A0   20C9           00287         call    Pitido                  ; Pitido cada vez que activa la carga.
00A1   1486           00288         bsf     SalidaTermostato
00A2                  00289 FinTermostato
00A2   0008           00290         return
                      00291 
                      00292 ; Subrutinas "CambiarModo" y "ModoTermostato_OFF" -----------------------------------------
                      00293 ;
                      00294 ; Subrutina de atención a la interrupción producida por el pulsador "MODO" que cambia el modo
                      00295 ; de funcionamiento. Cada vez que pulsa pasa por los modos "Termostato_Ajuste", "Termostato_ON",
                      00296 ; "Termostato_OFF" y vuelta repetir.
                      00297 ;
                      00298 ; El ajuste de la temperatura deseada en el termostato se logra mediante dos pulsadores: "MODO"
                      00299 ; e "INCREMENTAR" conectados a pines del Puerto B.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00300 
                      00301 ; Al principio aparecerá sólo el termómetro y el termostato estará desactivado:
                      00302 ; "ModoTermostato_OFF"
                      00303 ;
                      00304 ; Para comprender el funcionamiento de esta subrutina, hay que saber que el registro FlagsModos
                      00305 ; contiene 3 flags que permiten diferenciar cada uno de los modos de funcionamiento:
                      00306 ; A)    Modo "Termostato_OFF", en donde funciona como termómetro normal sin termostato. Se
                      00307 ;       reconoce por el flag F_Termostato_OFF, que es el bit 0 del registro FlagsModos.
                      00308 ; B)    Modo "Termostato_Ajuste", en donde se ajusta la temperatura deseada cuando funcione
                      00309 ;       como termostato. Se reconoce por el flag F_Termostato_Ajuste, que es el bit 1 del
                      00310 ;       registro FlagsModos.
                      00311 ; C)    Modo "Termostato_ON", en donde funciona como termómetro normal, y además, como termostato.
                      00312 ;       Se reconoce por el flag F_Termostato_ON, que es el bit 2 del registro FlagsModos.
                      00313 ;
                      00314 ; Así pues, el contenido del registro (FlagsModos) identifica los siguientes modos de
                      00315 ; funcionamiento:
                      00316 ; - (FlagsModos)=b'00000001'. Está en el modo "Termostato_OFF".
                      00317 ; - (FlagsModos)=b'00000010'. Está en el modo "Termostato_Ajuste".
                      00318 ; - (FlagsModos)=b'00000100'. Está en el modo "Termostato_ON".
                      00319 
                      00320 ; Pueden ocurrir dos casos:
                      00321 ;     - Que pulse "AJUSTE" estando en el modo más alto, "Termostato_ON",
                      00322 ;       (FlagsModos)=b'00000100'. En este caso, debe pasar al modo inicial 
                      00323 ;       "Termostato_OFF" poniendo (FlagsModos)=b'00000001'.
                      00324 ;     - Que pulse "AJUSTE" estando ya en cualquiera de los otros dos modos, en cuyo caso debe
                      00325 ;       pasar al siguiente modo. Esto lo hace mediante un desplazamiento a izquierdas. Así, por
                      00326 ;       ejemplo, si antes estaba en modo "Termostato_OFF", (FlagsModos)=b'00000001', pasará a
                      00327 ;       (FlagsModos)=b'00000010' que identifica al modo "Termostato_Ajuste".
                      00328 ;
00A3                  00329 CambiarModo
00A3   213C           00330         call    Retardo_20ms            ; Espera a que se estabilicen niveles de tensión.
00A4   1B86           00331         btfsc   ModoPulsador            ; Si es un rebote, sale fuera.
00A5   28B1           00332         goto    FinCambiarModo
00A6   20CB           00333         call    PitidoCorto             ; Cada vez que pulsa se oye un pitido.
00A7   1D0E           00334         btfss   F_Termostato_ON         ; Detecta si está en el último modo.
00A8   28AE           00335         goto    ModoSiguiente           ; Si no, pasa al modo siguiente.
00A9                  00336 ModoTermostato_OFF
00A9   20C9           00337         call    Pitido                  ; Pitido cada vez que conmuta la carga.
00AA   1086           00338         bcf     SalidaTermostato                ; Apaga la carga.
00AB   3001           00339         movlw   b'00000001'             ; Actualiza el registro FlagsModos pasando al
00AC   008E           00340         movwf   FlagsModos              ; modo inicial "Termostato_OFF".
00AD   28B0           00341         goto    BorraPantalla
00AE                  00342 ModoSiguiente                           ; Desplaza un "1" a la izquierda del registro
00AE   1003           00343         bcf     STATUS,C                ; FlagsModos para ajustar secuencialmente
00AF   0D8E           00344         rlf     FlagsModos,F            ; cada uno de los modos de funcionamiento.
00B0                  00345 BorraPantalla
00B0   21B8           00346         call    LCD_Borra               ; Borra la pantalla anterior.
00B1                  00347 FinCambiarModo
00B1   2064           00348         call    Visualiza
00B2   1F86           00349         btfss   ModoPulsador            ; Ahora espera a que deje de pulsar.
00B3   28B1           00350         goto    FinCambiarModo
00B4   0008           00351         return
                      00352 
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00353 ; Subrutina "IncrementarTempDeseada" ----------------------------------------------------
                      00354 ;
                      00355 ; Subrutina de atención a la interrupción por cambio de la línea RB6 al cual se ha conectado
                      00356 ; el pulsador "INCREMENTAR". Estando en el modo "Termostato_Ajustar" incrementa el valor de
                      00357 ; la temperatura deseada entre unos valores máximo y mínimo.
                      00358 ;
  00000014            00359 TemperaturaMinima   EQU .20
  00000024            00360 TemperaturaMaxima   EQU .36
                      00361 
00B5                  00362 IncrementarTempDeseada
00B5   213C           00363         call    Retardo_20ms            ; Espera a que se estabilicen niveles de tensión.       
00B6   1B06           00364         btfsc   IncrementarPulsador     ; Si es un rebote, sale fuera.
00B7   28C6           00365         goto    FinIncrementar
00B8   1C8E           00366         btfss   F_Termostato_Ajuste     ; Si no está en modo "Termostato_Ajuste", sale
00B9   28C6           00367         goto    FinIncrementar          ; fuera.
00BA   20CB           00368         call    PitidoCorto             ; Pitido cada vez que pulsa.
00BB   0A8C           00369         incf    TemperaturaDeseada,F    ; Incrementa el valor de la temperatura deseada.
00BC   3024           00370         movlw   TemperaturaMaxima       ; ¿Ha llegado a la temperatura máxima de ajuste?.
00BD   020C           00371         subwf   TemperaturaDeseada,W    ; (W) = (TemperaturaDeseada) - TemperaturaMaxima.
00BE   1C03           00372         btfss   STATUS,C                ; ¿(TemperaturaDeseada)>=TemperaturaMaxima?
00BF   28C2           00373         goto    VisualizaIncremento     ; No, pasa a visualizarlo.
00C0   3014           00374         movlw   TemperaturaMinima               ; Sí, entonces inicializa el registro.
00C1   008C           00375         movwf   TemperaturaDeseada
00C2                  00376 VisualizaIncremento
00C2   2064           00377         call    Visualiza                       ; Visualiza mientras espera a que deje
00C3   2136           00378         call    Retardo_200ms           ; de pulsar.
00C4   1F06           00379         btfss   IncrementarPulsador     ; Mientras permanezca pulsado,
00C5   28B5           00380         goto    IncrementarTempDeseada  ; incrementa el digito.
00C6                  00381 FinIncrementar
00C6   0008           00382         return
                      00383 
                      00384 ; Subrutina de pitidos ------------------------------------------------------------------
                      00385 ;
00C7                  00386 PitidoLargo
00C7   1506           00387         bsf     Zumbador
00C8   2158           00388         call    Retardo_500ms
00C9   1506           00389 Pitido  bsf     Zumbador
00CA   2136           00390         call    Retardo_200ms
00CB                  00391 PitidoCorto
00CB   1506           00392         bsf     Zumbador
00CC   213C           00393         call    Retardo_20ms
00CD   1106           00394         bcf     Zumbador
00CE   0008           00395         return
                      00396 ;
                      00397         INCLUDE  <BUS_1LIN.INC> ; Subrutinas de control del bus de 1 línea.
                      00001 ;**************************** Librería "BUS_1LIN.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control del bus de una sola línea
                      00010 ; según el protocolo del fabricante de semiconductores Dallas Semiconductors.
                      00011 ;
                      00012 ; ZONA DE DATOS **********************************************************************
                      00013 
                      00014         CBLOCK
  0000000F            00015         Bus1Linea_Dato                  ; Guarda dato a transmitir o recibir por el bus.
  00000010            00016         Bus1Linea_ContadorBits          ; Cuenta los bits a transmitir o a recibir.
                      00017         ENDC
                      00018 
                      00019 #DEFINE  Bus1Linea      PORTB,3         ; Línea donde se conecta el DS1820.
                      00020 
                      00021 ; Subrutina "Bus1Linea_AltaImpedancia" --------------------------------------------------
                      00022 ;
                      00023 ; Configura la línea única de 1-Wire Bus como entrada. Lo pone en alta impedancia.
                      00024 
00CF                  00025 Bus1Linea_AltaImpedancia
00CF   1683           00026         bsf     STATUS,RP0
00D0   1586           00027         bsf     Bus1Linea               ; La línea como entrada, por tanto, en alta
00D1   1283           00028         bcf     STATUS,RP0              ; impedancia.
00D2   0008           00029         return
                      00030 
                      00031 ; Subrutina "Bus1Linea_Bajo" ------------------------------------------------------------
                      00032 ;
                      00033 ; Mantiene el pin de datos del Bus de 1 línea en bajo.
                      00034  
00D3                  00035 Bus1Linea_Bajo
00D3   1683           00036         bsf     STATUS,RP0
00D4   1186           00037         bcf     Bus1Linea               ; La línea como salida.
00D5   1283           00038         bcf     STATUS,RP0
00D6   1186           00039         bcf     Bus1Linea               ; Pasa a bajo.
00D7   0008           00040         return
                      00041 
                      00042 ; Subrutina "Bus1Linea_Reset" -----------------------------------------------------------
                      00043 ;
                      00044 ; Envía un impulso de Reset al dispositivo conectado en el bus de 1 línea y después
                      00045 ; espera recibir un impulso de Presence". Esto consiste en:
                      00046 ; 1º.   El PIC manda un impulso en bajo durante unos 500 µs. (El protocolo permite entre 480
                      00047 ;       y 960 µs).
                      00048 ; 2º.   El PIC pasa modo entrada, espera 20 µs. (El protocolo fija entre 15 y 60 µs).
                      00049 ; 3º.   El PIC lee la línea de entrada y si es bajo está correcto (pulso de "Presence").
                      00050 ;       Se interpreta como que el procedimiento está correctamente inicializado.
                      00051 
00D8                  00052 Bus1Linea_Reset
00D8   20CF           00053         call    Bus1Linea_AltaImpedancia        ; Empieza en alto para conseguir el flanco de
                      00054                                         ; bajada con la siguiente instrucción.
00D9   20D3           00055         call    Bus1Linea_Bajo          ; El bus de 1 línea en bajo durante 500 µs.
00DA   2126           00056         call    Retardo_500micros
00DB   20CF           00057         call    Bus1Linea_AltaImpedancia        ; Permanece en alta impedancia (nivel alto por
00DC   2131           00058         call    Retardo_20micros                ; las resistencias de Pull-Up) durante unos µs.
00DD                  00059 Bus1Linea_EsperaLeerBajo
00DD   1986           00060         btfsc   Bus1Linea               ; Espera a que el dispositivo le envíe el pulso
00DE   28DD           00061         goto    Bus1Linea_EsperaLeerBajo        ; en bajo de "Presence".
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DF                  00062 Bus1Linea_EsperaLeerAlto
00DF   1D86           00063         btfss   Bus1Linea               ; Y ahora el dispositivo lo debe poner en alto.
00E0   28DF           00064         goto    Bus1Linea_EsperaLeerAlto
00E1   0008           00065         return
                      00066 
                      00067 ; Subrutina "Bus1Linea_EscribeByte" -----------------------------------------------------
                      00068 ;
                      00069 ; El maestro escribe un byte al esclavo conectado al bus de 1 línea, comenzando por el bit LSB.
                      00070 ; Consiste en enviar 8 bits, repitiendo 8 veces la siguiente secuencia:
                      00071 ; 1º    El PIC manda un impulso en bajo durante unos microsegundos. (El protocolo fija un
                      00072 ;       mínimo de 1 µs y sin exceder con lo que viene a continuación de 60 µs) A continuación:
                      00073 ;       - Si va a enviar un "0" permanece en bajo durante 50 µs.
                      00074 ;       - Si va a escribir un "1" se pone en alta impedancia durante 50 µs. (El protocolo
                      00075 ;         permite unos valores entre 15 y 60 µs para ambos casos).
                      00076 ; 2º    Para escribir otro bit se pone en alta impedancia durante unos µs. (El protocolo
                      00077 ;       establece un mínimo de 1 µs).
                      00078 ;
                      00079 ; Entrada:      En (W) el dato a enviar.
                      00080 
00E2                  00081 Bus1Linea_EscribeByte
00E2   008F           00082         movwf   Bus1Linea_Dato          ; Guarda el byte a transmitir.
00E3   3008           00083         movlw   0x08                    ; 8 bits a transmitir.
00E4   0090           00084         movwf   Bus1Linea_ContadorBits
00E5   20CF           00085         call    Bus1Linea_AltaImpedancia        ; Empieza en alta impedancia.
00E6                  00086 Bus1Linea_EnviaBit
00E6   20D3           00087         call    Bus1Linea_Bajo          ; Flanco de bajada.
                      00088 ;
                      00089 ; Pregunta por el valor del bit para transmitir.
                      00090 ;
00E7   0C8F           00091         rrf     Bus1Linea_Dato,F                ; Lleva el bit de menor peso (LSB) al Carry. 
00E8   1C03           00092         btfss   STATUS,C                ; ¿Es un "1" el bit a transmitir?.
00E9   28EC           00093         goto    Bus1Linea_EnviaCero     ; No, pues envía un "0".        
00EA                  00094 Bus1Linea_EnviaUno
00EA   20CF           00095         call    Bus1Linea_AltaImpedancia        ; Transmite un "1".
00EB   28ED           00096         goto    Bus1Linea_Espera50us
00EC                  00097 Bus1Linea_EnviaCero
00EC   20D3           00098         call    Bus1Linea_Bajo          ; Transmite un "0".
00ED                  00099 Bus1Linea_Espera50us
00ED   212E           00100         call    Retardo_50micros
00EE   20CF           00101         call    Bus1Linea_AltaImpedancia        ; Flanco de subida.
00EF   0B90           00102         decfsz  Bus1Linea_ContadorBits,1        ; Comprueba que es el último bit.
00F0   28E6           00103         goto    Bus1Linea_EnviaBit      ; Como no es el último bit repite la operación.
00F1   0008           00104         return
                      00105 ;
                      00106 ; Subrutina "Bus1Linea_LeeByte" ---------------------------------------------------------
                      00107 ;
                      00108 ; El microcontrolador maestro lee un byte del dispositivo esclavo conectado al bus de
                      00109 ; 1 línea. Consiste en leer 8 bits, repitiendo 8 veces la siguiente secuencia:
                      00110 ; 1º    El PIC manda un pulso en bajo durante unos µs. (El protocolo fija un mínimo de 1 µs)
                      00111 ; 2º    El PIC se pone en entrada (alta impedancia) durante otros 10 µs (con un total de 15 µs
                      00112 ;       desde el flanco de bajada), para proceder a la lectura de la línea.
                      00113 ; 3º    El PIC espera 50 µs para realizar la siguiente lectura (total unos 65 µs desde el
                      00114 ;       flanco de bajada). El protocolo fija que las lecturas se harán cada 60 µs ó más.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00115 ;
                      00116 ; Salida:       En (W) el dato leído.
                      00117 
00F2                  00118 Bus1Linea_LeeByte
00F2   3008           00119         movlw   0x08                    ; 8 bits a recibir.
00F3   0090           00120         movwf   Bus1Linea_ContadorBits
00F4   20CF           00121         call    Bus1Linea_AltaImpedancia        ; Empieza en alta impedancia.
00F5                  00122 Bus1Linea_LeeBit
00F5   20D3           00123         call    Bus1Linea_Bajo          ; Flanco de bajada.
00F6   20CF           00124         call    Bus1Linea_AltaImpedancia
00F7   211F           00125         call    Retardo_10micros                ; Añadiendo las instrucciones anteriores, supone
                      00126                                         ; un total de 15 µs desde el flanco de bajada.
00F8   1003           00127         bcf     STATUS,C                ; Ahora lee el pin. En principio supone que es 0.
00F9   1986           00128         btfsc   Bus1Linea               ; ¿Realmente es cero?.
00FA   1403           00129         bsf     STATUS,C                ; No, pues cambia a uno.
00FB   0C8F           00130         rrf     Bus1Linea_Dato,1                ; Introduce el bit en el registro.
00FC   212E           00131         call    Retardo_50micros                ; Espera.
00FD   20CF           00132         call    Bus1Linea_AltaImpedancia        ; Flanco de subida del pulso positivo.
00FE   0B90           00133         decfsz  Bus1Linea_ContadorBits,1        ; Comprueba que es el último bit.
00FF   28F5           00134         goto    Bus1Linea_LeeBit                ; Si no es el último bit, pasa a leer el siguiente.
0100   080F           00135         movf    Bus1Linea_Dato,W                ; El resultado en el registro W.
0101   0008           00136         return
                      00137         
                      00138 ;       ===================================================================
                      00139 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00140 ;         E. Palacios, F. Remiro y L. López.
                      00141 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00142 ;       ===================================================================
                      00398         INCLUDE  <DS1820.INC>           ; Subrutinas de control del termómetro digital.
                      00001 ;**************************** Librería "DS1820.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas de manejo del sensor de temperatura DS1820.
                      00010 ; Este sensor transmite la información vía serie a través de un 1-Wire Bus.
                      00011 ;
                      00012 ; ZONA DE DATOS **********************************************************************
                      00013 
                      00014         CBLOCK
  00000011            00015         DS1820_Temperatura              ; Primer byte leído del termómetro DS1820.
  00000012            00016         DS1820_TemperaturaSigno         ; Segundo byte leído del termómetro DS1820.
  00000013            00017         DS1820_TemperaturaDecimal               ; Parte decimal de la temperatura medida.
                      00018         ENDC
                      00019 
  000000CC            00020 DS1820_Skip_ROM_Command EQU     0xCC    ; Comandos del DS1820.
  000000BE            00021 DS1820_Read_Scratchpad_Command  EQU     0xBE
  00000044            00022 DS1820_Convert_T_Command        EQU     0x44
                      00023 ;
                      00024 ; Subrutina "DS1820_Inicializa" ---------------------------------------------------------
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00025 ;
                      00026 ; Inicializa el DS1820 para que comience la conversión de temperatura.
                      00027 ;
0102                  00028 DS1820_Inicializa
0102   20D8           00029         call    Bus1Linea_Reset         ; Primero los pulsos de "Reset" y "Presence".
0103   30CC           00030         movlw   DS1820_Skip_ROM_Command ; Salta los comandos de ROM ya que hay
0104   20E2           00031         call    Bus1Linea_EscribeByte   ; conectado un único dispositivo al bus.
0105   3044           00032         movlw   DS1820_Convert_T_Command ; Para que comience la conversión de temperatura.
0106   20E2           00033         call    Bus1Linea_EscribeByte
0107   0008           00034         return
                      00035 
                      00036 ; Subrutina "DS1820_LeeTemperatura" -----------------------------------------------------
                      00037 ;
                      00038 ; El DS1820 lee la temperatura en un formato ejemplarizado como sigue:
                      00039 ;
                      00040 ; +125,0 ºC     00000000 11111010
                      00041 ; + 25,5 ºC     00000000 00110011
                      00042 ; + 25,0 ºC     00000000 00110010
                      00043 ; +  0,5 ºC     00000000 00000001
                      00044 ; +  0,0 ºC     00000000 00000000
                      00045 ; -  0,5 ºC     11111111 11111111
                      00046 ; - 25,0 ºC     11111111 11001110
                      00047 ; - 55,0 ºC     11111111 10010010
                      00048 ;
                      00049 ; Se observa que:
                      00050 ;     - El formato es de dos bytes. El primer byte es el de signo.
                      00051 ;     - Las temperaturas positivas comienzan con 1 byte todo a cero: "00000000 xxxxxxxx".
                      00052 ;     - Las temperaturas negativas comienzan con 1 byte todo a uno : "11111111 xxxxxxxx".
                      00053 ;     - Las temperaturas "xx.0 ºC" terminan en cero: "xxxxxxx0".
                      00054 ;     - Las temperaturas "xx.5 ºC" terminan en uno : "xxxxxxx1".
                      00055 ;     - El valor de la temperatura está contenido en los 7 bits de mayor peso del byte bajo.
                      00056 ;       Por ejemplo: +25ºC = xxxxxxxx 0011001x = 25 en decimal. Por tanto, para obtener el
                      00057 ;       valor de la temperatura habrá que desplazar un lugar hacia la derecha los bits del
                      00058 ;       byte bajo.
                      00059 ;     - Las temperaturas negativas vienen dadas en complemento a dos. Por tanto para obtener
                      00060 ;       su valor absoluto, habrá que negarlas.
                      00061 ;
                      00062 ; Esta subrutina lee la temperatura, proporcionando tres datos: 
                      00063 ;
                      00064 ; Salida:       - En el registro DS1820_Temperatura, el valor de la temperatura en valor absoluto.
                      00065 ;       - En el registro DS1820_TemperaturaDecimal, la parte decimal del valor de la temperatura.
                      00066 ;       - En (DS1820_TemperaturaSigno)=b'11111111' si la temperatura es negativa y
                      00067 ;         y (DS1820_TemperaturaSigno)=b'00000000' si es positiva.
                      00068 ;
0108                  00069 DS1820_LeeTemperatura
0108   20D8           00070         call    Bus1Linea_Reset         ; Primero los pulsos de "Reset" y "Presence".
0109   30CC           00071         movlw   DS1820_Skip_ROM_Command ; Salta los comandos de ROM ya que hay
010A   20E2           00072         call    Bus1Linea_EscribeByte   ; conectado un único dispositivo al bus.
010B   30BE           00073         movlw   DS1820_Read_Scratchpad_Command ; Va a leer la primera posición de memoria,
010C   20E2           00074         call    Bus1Linea_EscribeByte   ; donde se localiza el valor de la temperatura.
010D   20F2           00075         call    Bus1Linea_LeeByte               ; Lee la temperatura en 
010E   0091           00076         movwf   DS1820_Temperatura      ; complemento a 2.
010F   20F2           00077         call    Bus1Linea_LeeByte               ; Ahora lee el segundo byte que indica el signo
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0110   0092           00078         movwf   DS1820_TemperaturaSigno ; de la temperatura.
0111   20D8           00079         call    Bus1Linea_Reset         ; Y para terminar, resetea el dispositivo.
                      00080 ;
                      00081 ; Ahora deduce si la temperatura es positiva o negativa y halla su valor absoluto.
                      00082 ;
0112   1F92           00083         btfss   DS1820_TemperaturaSigno,7       ; Si cualquier bit es "1": temperatura negativa.
0113   2917           00084         goto    DS1820_FinLeeTemperatura        ; La temperatura es positiva y salta.
0114                  00085 DS1820_TemperaturaNegativa
0114   0811           00086         movf    DS1820_Temperatura,W    ; La niega para convertirla a su valor
0115   3C00           00087         sublw   0x00                    ; absoluto. Para ello, simplemente le resta de
0116   0091           00088         movwf   DS1820_Temperatura      ; cero.
0117                  00089 DS1820_FinLeeTemperatura
0117   1003           00090         bcf     STATUS,C                ; Para no corromper luego el MSB.
0118   0C91           00091         rrf     DS1820_Temperatura,F    ; Obtiene el valor absoluto de la temperatura.
0119   3005           00092         movlw   .5
011A   1C03           00093         btfss   STATUS,C                ; Si el bit LSB es "1", la temperatura
011B   0103           00094         clrw                            ; medida es "xx.5ºC" sino "xx.0ºC".
011C   0093           00095         movwf   DS1820_TemperaturaDecimal
011D   0811           00096         movf    DS1820_Temperatura,W    ; En (W) la parte entera del valor absoluto de la
011E   0008           00097         return                          ; temperatura.
                      00098         
                      00099 ;       ===================================================================
                      00100 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00101 ;         E. Palacios, F. Remiro y L. López.
                      00102 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00103 ;       ===================================================================
                      00399         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000014            00021         R_ContA                         ; Contadores para los retardos.
  00000015            00022         R_ContB
  00000016            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
011F                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
011F   0000           00033         nop                             ; Aporta 1 ciclo máquina.
0120   0000           00034         nop                             ; Aporta 1 ciclo máquina.
0121   0000           00035         nop                             ; Aporta 1 ciclo máquina.
0122   0000           00036         nop                             ; Aporta 1 ciclo máquina.
0123   0000           00037         nop                             ; Aporta 1 ciclo máquina.
0124                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
0124   0000           00039         nop                             ; Aporta 1 ciclo máquina.
0125                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
0125   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
0126                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0126   0000           00046         nop                             ; Aporta 1 ciclo máquina.
0127   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
0128   2932           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0129                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
0129   0000           00050         nop                             ; Aporta 1 ciclo máquina.
012A   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
012B   2932           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
012C                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
012C   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
012D   2932           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
012E                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
012E   0000           00057         nop                             ; Aporta 1 ciclo máquina.
012F   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0130   2932           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0131                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
0131   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
0132                  00066 RetardoMicros
0132   0094           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
0133                  00068 Rmicros_Bucle
0133   0B94           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0134   2933           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
0135   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
0136                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
0136   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0137   2945           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0138                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
0138   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0139   2945           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
013A                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
013A   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
013B   2945           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
013C                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
013C   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
013D   2945           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
013E                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
013E   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
013F   2945           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0140                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
0140   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0141   2945           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0142                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
0142   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0143   2945           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0144                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
0144   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
0145                  00111 Retardos_ms
0145   0095           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
0146                  00113 R1ms_BucleExterno
0146   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
0147   0094           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
0148                  00116 R1ms_BucleInterno
0148   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
0149   0B94           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
014A   2948           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
014B   0B95           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
014C   2946           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
014D   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
014E                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
014E   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
014F   2959           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0150                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
0150   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
0151   2959           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0152                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
0152   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0153   2959           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0154                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
0154   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0155   2959           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0156                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
0156   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0157   2959           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0158                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
0158   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
0159                  00160 Retardo_1Decima
0159   0096           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
015A                  00162 R1Decima_BucleExterno2
015A   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
015B   0095           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
015C                  00165 R1Decima_BucleExterno
015C   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
015D   0094           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
015E                  00168 R1Decima_BucleInterno          
015E   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
015F   0B94           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
0160   295E           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
0161   0B95           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
0162   295C           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
0163   0B96           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0164   295A           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
0165   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00400         INCLUDE  <BIN_BCD.INC>
                      00001 ;******************************** Librería "BIN_BCD.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Un número binario natural de 8 bits es convertido a BCD. El resultado se guarda en tres
                      00010 ; posiciones de memorias llamadas: BCD_Centenas, BCD_Decenas y BCD_Unidades.
                      00011 ;
                      00012 ; El procedimiento utilizado es mediante restas de 10 tal como se explicó en el capítulo 9.
                      00013 ;
                      00014 ; Entrada:      En el registro W el número binario natural a convertir.
                      00015 ; Salidas:      En (BCD_Centenas), (BCD_Decenas) y (BCD_Unidades).
                      00016 ;               En el registro W también las decenas (nibble alto) y unidades (nibble bajo).
                      00017 
                      00018 ; Subrutina "BIN_a_BCD" -----------------------------------------------------------------
                      00019 
                      00020         CBLOCK                          ; En las subrutinas no se debe fijar la dirección
  00000017            00021         BCD_Centenas                    ; de la RAM de usuario. Se toma a continuación de
  00000018            00022         BCD_Decenas                     ; la última asignada.
  00000019            00023         BCD_Unidades    
                      00024         ENDC
                      00025 ;
0166                  00026 BIN_a_BCD
0166   0197           00027         clrf    BCD_Centenas            ; Carga los registros con el resultado inicial.
0167   0198           00028         clrf    BCD_Decenas             ; En principio las centenas y decenas a cero.
0168   0099           00029         movwf   BCD_Unidades            ; Se carga el número binario a convertir.
0169                  00030 BCD_Resta10
0169   300A           00031         movlw   .10                     ; A las unidades se le va restando 10 en cada
016A   0219           00032         subwf   BCD_Unidades,W          ; pasada. (W)=(BCD_Unidades) -10.
016B   1C03           00033         btfss   STATUS,C                ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Unidades)>=10?.
016C   2976           00034         goto    BIN_BCD_Fin             ; No, es menor de 10. Se acabó.
016D                  00035 BCD_IncrementaDecenas
016D   0099           00036         movwf   BCD_Unidades            ; Recupera lo que queda por restar.
016E   0A98           00037         incf    BCD_Decenas,F           ; Incrementa las decenas y comprueba si ha llegado
016F   300A           00038         movlw   .10                     ; a 10. Lo hace mediante una resta.
0170   0218           00039         subwf   BCD_Decenas,W           ; (W)=(BCD_Decenas)-10).
0171   1C03           00040         btfss   STATUS,C                ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Decenas)>=10?.
0172   2969           00041         goto    BCD_Resta10             ; No. Vuelve a dar otra pasada, restándole 10 a
0173                  00042 BCD_IncrementaCentenas                  ; las unidades.
0173   0198           00043         clrf    BCD_Decenas             ; Pone a cero las decenas 
0174   0A97           00044         incf    BCD_Centenas,F          ; e incrementa las centenas.
0175   2969           00045         goto    BCD_Resta10             ; Otra pasada: Resta 10 al número a convertir.
0176                  00046 BIN_BCD_Fin
0176   0E18           00047         swapf   BCD_Decenas,W           ; En el nibble alto de (W) también las decenas.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0177   0719           00048         addwf   BCD_Unidades,W          ; En el nibble bajo de (W) las unidades.
0178   0008           00049         return                          ; Vuelve al programa principal.
                      00050         
                      00051 ; La directiva "END" se debe poner en el programa principal, no aquí.
                      00052 
                      00053 ;       ===================================================================
                      00054 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00055 ;         E. Palacios, F. Remiro y L. López.
                      00056 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00057 ;       ===================================================================
                      00401         INCLUDE  <LCD_4BIT.INC>
                      00001 ;**************************** Librería "LCD_4BIT.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00010 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00011 ;
                      00012 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00013 ; conexiones son:
                      00014 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00015 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00016 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00017 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00018 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00019 ;
                      00020 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00021 ;
                      00022 ; ZONA DE DATOS *********************************************************************
                      00023 
                      00024         CBLOCK
  0000001A            00025         LCD_Dato
  0000001B            00026         LCD_GuardaDato
  0000001C            00027         LCD_GuardaTRISB
  0000001D            00028         LCD_Auxiliar1
  0000001E            00029         LCD_Auxiliar2
                      00030         ENDC
                      00031 
  00000010            00032 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00033 
                      00034 #DEFINE  LCD_PinRS      PORTA,0
                      00035 #DEFINE  LCD_PinRW      PORTA,1
                      00036 #DEFINE  LCD_PinEnable  PORTA,2
                      00037 #DEFINE  LCD_BusDatos   PORTB
                      00038 
                      00039 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00040 ;
                      00041 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00042 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00043 ; configuración inicial hay que hacerla como sigue:
                      00044 ;
0179                  00045 LCD_Inicializa
0179   1683           00046         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
017A   1005           00047         bcf     LCD_PinRS               ; R/W y E.
017B   1105           00048         bcf     LCD_PinEnable
017C   1085           00049         bcf     LCD_PinRW
017D   1283           00050         bcf     STATUS,RP0
017E   1085           00051         bcf     LCD_PinRW               ; En caso de que esté conectado, le indica
                      00052                                         ; que se va a escribir en el LCD.
017F   1105           00053         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD, poniendo E=0.
0180   1005           00054         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
0181   213C           00055         call    Retardo_20ms
0182   3030           00056         movlw   b'00110000'     
0183   2191           00057         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
0184   2140           00058         call    Retardo_5ms     
0185   3030           00059         movlw   b'00110000'     
0186   2191           00060         call    LCD_EscribeLCD
0187   2129           00061         call    Retardo_200micros
0188   3030           00062         movlw   b'00110000'     
0189   2191           00063         call    LCD_EscribeLCD
018A   3020           00064         movlw   b'00100000'             ; Interface de 4 bits.
018B   2191           00065         call    LCD_EscribeLCD
                      00066 
                      00067 ; Ahora configura el resto de los parámetros: 
                      00068 
018C   21BA           00069         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
018D   21B8           00070         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
018E   21B6           00071         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
018F   21A8           00072         call    LCD_CursorIncr          ; Cursor en modo incrementar.
0190   0008           00073         return
                      00074 
                      00075 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00076 ;
                      00077 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el
                      00078 ; pin "Enable" del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B
                      00079 ; que no son utilizadas para el LCD (pines RB3.. RB0), primero se lee estas líneas y después
                      00080 ; se vuelve a enviar este dato sin cambiarlo.
                      00081 
0191                  00082 LCD_EscribeLCD
0191   39F0           00083         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
0192   009A           00084         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
0193   0806           00085         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
0194   390F           00086         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
0195   049A           00087         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00088                                         ; y en la parte baja lo que había antes.
0196   1683           00089         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0197   0806           00090         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
0198   009C           00091         movwf   LCD_GuardaTRISB
0199   300F           00092         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
019A   0586           00093         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
019B   1283           00094         bcf     STATUS,RP0              ; Acceso al Banco 0.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00095 ;
019C   081A           00096         movf    LCD_Dato,W              ; Recupera el dato a enviar.
019D   0086           00097         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
019E   1505           00098         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD, mediante un pequeño
019F   1105           00099         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
01A0   1C05           00100         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
01A1   2142           00101         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
01A2   212E           00102         call    Retardo_50micros
01A3   1683           00103         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
01A4   081C           00104         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
01A5   0086           00105         movwf   PORTB                   ; Realmente es TRISB.
01A6   1283           00106         bcf     STATUS,RP0              ; Acceso al Banco 0.
01A7   0008           00107         return
                      00108 
                      00109 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00110 ;
                      00111 ;Los comandos que pueden ser ejecutados son:
                      00112 ;
01A8                  00113 LCD_CursorIncr                          ; Cursor en modo incrementar.
01A8   3006           00114         movlw   b'00000110'
01A9   29BB           00115         goto    LCD_EnviaComando
01AA                  00116 LCD_Linea1                              ; Cursor al principio de la Línea 1.
01AA   3080           00117         movlw   b'10000000'             ; Dirección 00h de la DDRAM
01AB   29BB           00118         goto    LCD_EnviaComando
01AC                  00119 LCD_Linea2                              ; Cursor al principio de la Línea 2.
01AC   30C0           00120         movlw   b'11000000'             ; Dirección 40h de la DDRAM
01AD   29BB           00121         goto    LCD_EnviaComando
01AE                  00122 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
01AE   3880           00123         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
01AF   29BB           00124         goto    LCD_EnviaComando        ; registro W.
01B0                  00125 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
01B0   38C0           00126         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
01B1   29BB           00127         goto    LCD_EnviaComando        ; registro W.
01B2                  00128 LCD_OFF                         ; Pantalla apagada.
01B2   3008           00129         movlw   b'00001000'
01B3   29BB           00130         goto    LCD_EnviaComando
01B4                  00131 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
01B4   300E           00132         movlw   b'00001110'
01B5   29BB           00133         goto    LCD_EnviaComando
01B6                  00134 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
01B6   300C           00135         movlw   b'00001100'
01B7   29BB           00136         goto    LCD_EnviaComando
01B8                  00137 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
01B8   3001           00138         movlw   b'00000001'             ; cursor a principio de la línea 1.
01B9   29BB           00139         goto    LCD_EnviaComando
01BA                  00140 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
01BA   3028           00141         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00142 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00143 
                      00144 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00145 ;
                      00146 ; "LCD_EnviaComando": Escribe un comando en el registro del módulo LCD. La palabra de
                      00147 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00148 ; "LCD_Caracter": Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00149 ; a través del registro W. Trabaja en Modo Dato.
                      00150 ;
01BB                  00151 LCD_EnviaComando
01BB   1005           00152         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
01BC   29BF           00153         goto    LCD_Envia
01BD                  00154 LCD_Caracter
01BD   1405           00155         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
01BE   21C4           00156         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
01BF                  00157 LCD_Envia
01BF   009B           00158         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
01C0   2191           00159         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
01C1   0E1B           00160         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00161                                         ; nibble bajo del dato a enviar a parte alta del byte.
01C2   2191           00162         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
01C3   0008           00163         return  
                      00164 
                      00165 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00166 ;
                      00167 ; A partir del carácter ASCII número 127, los códigos de los caracteres definidos en la
                      00168 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00169 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00170 ;
                      00171 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00172 ; que puedan ser visualizado en el módulo LM016L.
                      00173 ; 
                      00174 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00175 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00176 
01C4                  00177 LCD_CodigoCGROM
01C4   009A           00178         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
01C5                  00179 LCD_EnheMinuscula                       ; un carácter especial.
01C5   3CF1           00180         sublw   'ñ'                     ; ¿Es la "ñ"?
01C6   1D03           00181         btfss   STATUS,Z
01C7   29CB           00182         goto    LCD_EnheMayuscula       ; No es "ñ".
01C8   30EE           00183         movlw   b'11101110'             ; Código CGROM de la "ñ".
01C9   009A           00184         movwf   LCD_Dato
01CA   29D8           00185         goto    LCD_FinCGROM
01CB                  00186 LCD_EnheMayuscula
01CB   081A           00187         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
01CC   3CD1           00188         sublw   'Ñ'                     ; ¿Es la "Ñ"?
01CD   1D03           00189         btfss   STATUS,Z
01CE   29D2           00190         goto    LCD_Grado               ; No es "Ñ".
01CF   30EE           00191         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
01D0   009A           00192         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
01D1   29D8           00193         goto    LCD_FinCGROM    
01D2                  00194 LCD_Grado
01D2   081A           00195         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
01D3   3CBA           00196         sublw   'º'                     ; ¿Es el símbolo "º"?
01D4   1D03           00197         btfss   STATUS,Z
01D5   29D8           00198         goto    LCD_FinCGROM            ; No es "º".
01D6   30DF           00199         movlw   b'11011111'             ; Código CGROM del símbolo "º".
01D7   009A           00200         movwf   LCD_Dato
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D8                  00201 LCD_FinCGROM
01D8   081A           00202         movf    LCD_Dato,W              ; En (W) el código buscado.
01D9   0008           00203         return
                      00204 
                      00205 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00206 ;
                      00207 ; Visualiza espacios en blanco.
                      00208 
01DA                  00209 LCD_LineaEnBlanco
01DA   3010           00210         movlw   LCD_CaracteresPorLinea
01DB   29E1           00211         goto    LCD_EnviaBlancos
01DC                  00212 LCD_UnEspacioBlanco
01DC   3001           00213         movlw   .1
01DD   29E1           00214         goto    LCD_EnviaBlancos
01DE                  00215 LCD_DosEspaciosBlancos
01DE   3002           00216         movlw   .2
01DF   29E1           00217         goto    LCD_EnviaBlancos
01E0                  00218 LCD_TresEspaciosBlancos
01E0   3003           00219         movlw   .3
01E1                  00220 LCD_EnviaBlancos
01E1   009D           00221         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
01E2                  00222 LCD_EnviaOtroBlanco     
01E2   3020           00223         movlw   ' '                     ; Esto es un espacio en blanco.
01E3   21BD           00224         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
01E4   0B9D           00225         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
01E5   29E2           00226         goto    LCD_EnviaOtroBlanco
01E6   0008           00227         return
                      00228 
                      00229 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00230 ;
                      00231 ; Subrutina "LCD_ByteCompleto": Visualiza el byte que almacena el registro W en el
                      00232 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00233 ;
                      00234 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero, 
                      00235 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00236 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00237 ;
                      00238 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00239 ;
01E7                  00240 LCD_Byte
01E7   009E           00241         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01E8   39F0           00242         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
01E9   1D03           00243         btfss   STATUS,Z                ; Si es cero lo apaga.
01EA   29EF           00244         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
01EB   3020           00245         movlw   ' '                     ; Visualiza un espacio en blanco.
01EC   21BD           00246         call    LCD_Caracter
01ED   29F1           00247         goto    LCD_VisualizaBajo
                      00248 
01EE                  00249 LCD_ByteCompleto
01EE   009E           00250         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01EF                  00251 LCD_VisualizaAlto
01EF   0E1E           00252         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
01F0   21F2           00253         call    LCD_Nibble              ; Lo visualiza.
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F1                  00254 LCD_VisualizaBajo
01F1   081E           00255         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00256 ;       call    LCD_Nibble              ; Lo visualiza.
                      00257 ;       return
                      00258 
                      00259 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00260 ;
                      00261 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00262 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00263 ; - Si (W)=b'01010110', se visualizará "6". 
                      00264 ; - Si (W)=b'10101110', se visualizará "E". 
                      00265 ;
01F2                  00266 LCD_Nibble
01F2   390F           00267         andlw   b'00001111'             ; Se queda con la parte baja.
01F3   009D           00268         movwf   LCD_Auxiliar1           ; Lo guarda.
01F4   3C09           00269         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
01F5   1C03           00270         btfss   STATUS,C        
01F6   29FA           00271         goto    LCD_EnviaByteLetra
01F7   081D           00272         movf    LCD_Auxiliar1,W
01F8   3E30           00273         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
01F9   29FC           00274         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
01FA                  00275 LCD_EnviaByteLetra
01FA   081D           00276         movf    LCD_Auxiliar1,W
01FB   3E37           00277         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
01FC                  00278 LCD_FinVisualizaDigito
01FC   29BD           00279         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00280                                         ; para no sobrecargar la pila.
                      00402         INCLUDE  <LCD_MENS.INC>
                      00001 ;**************************** Librería "LCD_MENS.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00010 
                      00011         CBLOCK
  0000001F            00012         LCD_ApuntaCaracter              ; Indica la posición del carácter a visualizar
                      00013                                         ; respecto del comienzo de todos los mensajes,
                      00014                                         ; (posición de la etiqueta "Mensajes").
  00000020            00015         LCD_ValorCaracter                       ; Código ASCII del carácter a 
                      00016         ENDC                            ; visualizar.
                      00017 
                      00018 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00019 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00020 
                      00021 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00022 ;
                      00023 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00024 ;
                      00025 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00026 ; tenga la siguiente estructura:
                      00027 ;
                      00028 ; Mensajes                              ; ¡Etiqueta obligatoria!
                      00029 ;       addwf   PCL,F
                      00030 ; Mensaje0                              ; Posición inicial del mensaje.
                      00031 ;       DT ".. ..", 0x00                        ; Mensaje terminado en 0x00.
                      00032 ; Mensaje1
                      00033 ;       ...     
                      00034 ;       ...
                      00035 ; FinMensajes
                      00036 ;
                      00037 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00038 ;
                      00039 ;       movlw   Mensaje0                        ; Carga la posición del mensaje.
                      00040 ;       call    LCD_Mensaje             ; Visualiza el mensaje.
                      00041 ;
01FD                  00042 LCD_Mensaje
01FD   009F           00043         movwf   LCD_ApuntaCaracter      ; Posición de primer carácter del mensaje.
01FE   3005           00044         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
01FF   029F           00045         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
0200   039F           00046         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0201                  00047 LCD_VisualizaOtroCaracter
0201   081F           00048         movf    LCD_ApuntaCaracter,W
0202   2005           00049         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
0203   00A0           00050         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
0204   08A0           00051         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
0205   1903           00052         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
0206   2A0A           00053         goto    LCD_FinMensaje          ; de mensaje, sale fuera.
0207                  00054 LCD_NoUltimoCaracter
0207   21BD           00055         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
0208   0A9F           00056         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
0209   2A01           00057         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
020A                  00058 LCD_FinMensaje
020A   0008           00059         return                          ; Vuelve al programa principal.
                      00060 
                      00061 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00062 ;
                      00063 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00064 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00065 ;
                      00066 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00067 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00068 ;
                      00069         CBLOCK  
  00000021            00070         LCD_CursorPosicion              ; Contabiliza la posición del cursor dentro de la
                      00071         ENDC                            ; pantalla LCD
                      00072 
020B                  00073 LCD_MensajeMovimiento
020B   009F           00074         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
020C   3005           00075         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
020D   029F           00076         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
020E   039F           00077         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
020F                  00078 LCD_PrimeraPosicion
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020F   01A1           00079         clrf    LCD_CursorPosicion      ; El cursor en la posición 0 de la línea.
0210   21B8           00080         call    LCD_Borra               ; Se sitúa en la primera posición de la línea 1 y
0211                  00081 LCD_VisualizaCaracter                   ; borra la pantalla.
0211   3010           00082         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
0212   0221           00083         subwf   LCD_CursorPosicion,W
0213   1D03           00084         btfss   STATUS,Z
0214   2A1A           00085         goto    LCD_NoEsFinalLinea
0215                  00086 LCD_EsFinalLinea
0215   2136           00087         call    Retardo_200ms           ; Lo mantiene visualizado durante este tiempo.
0216   2136           00088         call    Retardo_200ms
0217   300F           00089         movlw   LCD_CaracteresPorLinea-1        ; Apunta a la posición del segundo carácter visualizado
0218   029F           00090         subwf   LCD_ApuntaCaracter,F    ; en pantalla y que será el primero en la siguiente
0219   2A0F           00091         goto    LCD_PrimeraPosicion      ; visualización de línea, para producir el efecto
021A                  00092 LCD_NoEsFinalLinea                      ; de desplazamiento hacia la izquierda.
021A   081F           00093         movf    LCD_ApuntaCaracter,W
021B   2005           00094         call    Mensajes                        ; Obtiene el ASCII del carácter apuntado.
021C   00A0           00095         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
021D   08A0           00096         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
021E   1903           00097         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
021F   2A24           00098         goto    LCD_FinMovimiento       ; de mensaje, sale fuera.
0220                  00099 LCD_NoUltimoCaracter2
0220   21BD           00100         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
0221   0AA1           00101         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00102                                         ; cursor en la pantalla.
0222   0A9F           00103         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
0223   2A11           00104         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
0224                  00105 LCD_FinMovimiento                       ; de la línea.
0224   0008           00106         return                          ; Vuelve al programa principal.
                      00403         END
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

ApagaCarga                        0000009A
BCD_Centenas                      00000017
BCD_Decenas                       00000018
BCD_IncrementaCentenas            00000173
BCD_IncrementaDecenas             0000016D
BCD_Resta10                       00000169
BCD_Unidades                      00000019
BIN_BCD_Fin                       00000176
BIN_a_BCD                         00000166
BorraPantalla                     000000B0
Bus1Linea                         PORTB,3
Bus1Linea_AltaImpedancia          000000CF
Bus1Linea_Bajo                    000000D3
Bus1Linea_ContadorBits            00000010
Bus1Linea_Dato                    0000000F
Bus1Linea_EnviaBit                000000E6
Bus1Linea_EnviaCero               000000EC
Bus1Linea_EnviaUno                000000EA
Bus1Linea_EscribeByte             000000E2
Bus1Linea_Espera50us              000000ED
Bus1Linea_EsperaLeerAlto          000000DF
Bus1Linea_EsperaLeerBajo          000000DD
Bus1Linea_LeeBit                  000000F5
Bus1Linea_LeeByte                 000000F2
Bus1Linea_Reset                   000000D8
C                                 00000000
CambiarModo                       000000A3
Carga2s                           00000028
DC                                00000001
DS1820_Convert_T_Command          00000044
DS1820_FinLeeTemperatura          00000117
DS1820_Inicializa                 00000102
DS1820_LeeTemperatura             00000108
DS1820_Read_Scratchpad_Command    000000BE
DS1820_Skip_ROM_Command           000000CC
DS1820_Temperatura                00000011
DS1820_TemperaturaDecimal         00000013
DS1820_TemperaturaNegativa        00000114
DS1820_TemperaturaSigno           00000012
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
EnciendeCarga                     000000A0
F                                 00000001
FSR                               00000004
F_Termostato_Ajuste               FlagsModos,1
F_Termostato_OFF                  FlagsModos,0
F_Termostato_ON                   FlagsModos,2
FinCambiarModo                    000000B1
FinIncrementar                    000000C6
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

FinInterrupcion                   00000058
FinTermostato                     000000A2
FlagsModos                        0000000E
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
IncrementarPulsador               PORTB,6
IncrementarTempDeseada            000000B5
Inicio                            00000039
LCD_2Lineas4Bits5x7               000001BA
LCD_ApuntaCaracter                0000001F
LCD_Auxiliar1                     0000001D
LCD_Auxiliar2                     0000001E
LCD_Borra                         000001B8
LCD_BusDatos                      PORTB
LCD_Byte                          000001E7
LCD_ByteCompleto                  000001EE
LCD_Caracter                      000001BD
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   000001C4
LCD_CursorIncr                    000001A8
LCD_CursorOFF                     000001B6
LCD_CursorON                      000001B4
LCD_CursorPosicion                00000021
LCD_Dato                          0000001A
LCD_DosEspaciosBlancos            000001DE
LCD_EnheMayuscula                 000001CB
LCD_EnheMinuscula                 000001C5
LCD_Envia                         000001BF
LCD_EnviaBlancos                  000001E1
LCD_EnviaByteLetra                000001FA
LCD_EnviaComando                  000001BB
LCD_EnviaOtroBlanco               000001E2
LCD_EsFinalLinea                  00000215
LCD_EscribeLCD                    00000191
LCD_FinCGROM                      000001D8
LCD_FinMensaje                    0000020A
LCD_FinMovimiento                 00000224
LCD_FinVisualizaDigito            000001FC
LCD_Grado                         000001D2
LCD_GuardaDato                    0000001B
LCD_GuardaTRISB                   0000001C
LCD_Inicializa                    00000179
LCD_Linea1                        000001AA
LCD_Linea2                        000001AC
LCD_LineaEnBlanco                 000001DA
LCD_Mensaje                       000001FD
LCD_MensajeMovimiento             0000020B
LCD_Nibble                        000001F2
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

LCD_NoEsFinalLinea                0000021A
LCD_NoUltimoCaracter              00000207
LCD_NoUltimoCaracter2             00000220
LCD_OFF                           000001B2
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                000001AE
LCD_PosicionLinea2                000001B0
LCD_PrimeraPosicion               0000020F
LCD_TresEspaciosBlancos           000001E0
LCD_UnEspacioBlanco               000001DC
LCD_ValorCaracter                 00000020
LCD_VisualizaAlto                 000001EF
LCD_VisualizaBajo                 000001F1
LCD_VisualizaCaracter             00000211
LCD_VisualizaOtroCaracter         00000201
MensajeGradoCentigrado            00000034
MensajePublicitario               00000006
MensajeTermostato_Ajuste          00000024
MensajeTermostato_ON              00000017
Mensajes                          00000005
ModoPulsador                      PORTB,7
ModoSiguiente                     000000AE
ModoTermostato_OFF                000000A9
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Pitido                            000000C9
PitidoCorto                       000000CB
PitidoLargo                       000000C7
Principal                         0000004F
R1Decima_BucleExterno             0000015C
R1Decima_BucleExterno2            0000015A
R1Decima_BucleInterno             0000015E
R1ms_BucleExterno                 00000146
R1ms_BucleInterno                 00000148
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           00000014
R_ContB                           00000015
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

R_ContC                           00000016
Registro50ms                      0000000D
RetardoMicros                     00000132
Retardo_100micros                 0000012C
Retardo_100ms                     00000138
Retardo_10micros                  0000011F
Retardo_10ms                      0000013E
Retardo_10s                       00000150
Retardo_1Decima                   00000159
Retardo_1ms                       00000144
Retardo_1s                        00000156
Retardo_200micros                 00000129
Retardo_200ms                     00000136
Retardo_20micros                  00000131
Retardo_20ms                      0000013C
Retardo_20s                       0000014E
Retardo_2ms                       00000142
Retardo_2s                        00000154
Retardo_4micros                   00000125
Retardo_500micros                 00000126
Retardo_500ms                     00000158
Retardo_50micros                  0000012E
Retardo_50ms                      0000013A
Retardo_5micros                   00000124
Retardo_5ms                       00000140
Retardo_5s                        00000152
Retardos_ms                       00000145
Rmicros_Bucle                     00000133
STATUS                            00000003
SalidaEstabaActivada              00000095
SalidaEstabaApagada               0000009C
SalidaTermostato                  PORTB,1
ServicioInterrupcion              00000050
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TMR0_Carga50ms                    FFFFFF3D
TRISA                             00000085
TRISB                             00000086
TemperaturaDeseada                0000000C
TemperaturaMaxima                 00000024
TemperaturaMinima                 00000014
TemperaturaNegativa               00000083
TemperaturaPositiva               00000085
Termometro                        0000005B
Termostato                        0000008F
Visualiza                         00000064
VisualizaIncremento               000000C2
VisualizaTemperaturaDeseada       00000076
VisualizaTemperaturaMedida        0000007F
VisualizaTermometro               0000007C
MPASM 03.50 Released                    DS1820_TERMOSTATO.ASM   10-12-2000  20:58:15         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

VisualizaTermostato_Ajuste        00000071
VisualizaTermostato_ON            0000006B
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
Zumbador                          PORTB,2
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXX----------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   546
Program Memory Words Free:   478


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     2 reported,     0 suppressed

