MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;************************************ RS232_06.asm **************************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Este programa envía varios mensajes grabados en la memoria de programa del
                      00010 ; microcontrolador al ordenador. Cada mensaje permanecerá en pantalla durante unos
                      00011 ; segundos hasta que sea sustituido por el siguiente.
                      00012 ;
                      00013 ; ZONA DE DATOS **********************************************************************
                      00014 
2007   3FF1           00015         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00016         LIST       P=16F84A
                      00017         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00018 
                      00019         CBLOCK  0x0C
                      00020         ENDC
                      00021 
  0000000D            00022 RetornoCarro    EQU     .13             ; Código de tecla "Enter" o "Retorno de Carro".
  0000000A            00023 CambioLinea     EQU     .10             ; Código para el cambio de línea.
                      00024 
                      00025 ; ZONA DE CÓDIGOS ********************************************************************
                      00026 
0000                  00027         ORG     0
0000   28F2           00028         goto    Inicio
                      00029 
0001                  00030 Mensajes                                ; Los mensajes se ponen al principio para no
0001   0782           00031         addwf   PCL,F                   ; superar la posición 0xFF de memoria de programa.
0002                  00032 Mensaje0
0002   3420 3420 3420 00033         DT "   ¿Quieres trabajar en dos años?."
       34BF 3451 3475 
       3469 3465 3472 
       3465 3473 3420 
       3474 3472 3461 
       3462 3461 346A 
       3461 3472 3420 
       3465 346E 3420 
       3464 346F 3473 
       3420 3461 34F1 
       346F 3473 343F 
       342E 
0024   340D 340A      00034         DT RetornoCarro, CambioLinea
0026   34BF 3451 3475 00035         DT "¿Quieres aprender hacer estos mensajes?",0x00
       3469 3465 3472 
       3465 3473 3420 
       3461 3470 3472 
       3465 346E 3464 
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3465 3472 3420 
       3468 3461 3463 
       3465 3472 3420 
       3465 3473 3474 
       346F 3473 3420 
       346D 3465 346E 
       3473 3461 346A 
       3465 3473 343F 
       3400 
004E                  00036 Mensaje1
004E   3420 3420 34A1 00037         DT "  ¡Pues estudia CICLOS FORMATIVOS!.",0x00
       3450 3475 3465 
       3473 3420 3465 
       3473 3474 3475 
       3464 3469 3461 
       3420 3443 3449 
       3443 344C 344F 
       3453 3420 3446 
       344F 3452 344D 
       3441 3454 3449 
       3456 344F 3453 
       3421 342E 3400 
0072                  00038 Mensaje2
0072   3445 346E 3420 00039         DT "En el I.E.S. ISAAC PERAL de Torrejon de Ardoz"
       3465 346C 3420 
       3449 342E 3445 
       342E 3453 342E 
       3420 3449 3453 
       3441 3441 3443 
       3420 3450 3445 
       3452 3441 344C 
       3420 3464 3465 
       3420 3454 346F 
       3472 3472 3465 
       346A 346F 346E 
       3420 3464 3465 
       3420 3441 3472 
       3464 346F 347A 
009F   340D 340A      00040         DT RetornoCarro, CambioLinea
00A1   3420 3420 3473 00041         DT "  se puede estudiar el Ciclo Formativo "
       3465 3420 3470 
       3475 3465 3464 
       3465 3420 3465 
       3473 3474 3475 
       3464 3469 3461 
       3472 3420 3465 
       346C 3420 3443 
       3469 3463 346C 
       346F 3420 3446 
       346F 3472 346D 
       3461 3474 3469 
       3476 346F 3420 
00C8   340D 340A      00042         DT RetornoCarro, CambioLinea
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   3420 3420 3444 00043         DT "  DESARROLLO de PRODUCTOS ELECTRONICOS.", 0x00
       3445 3453 3441 
       3452 3452 344F 
       344C 344C 344F 
       3420 3464 3465 
       3420 3450 3452 
       344F 3444 3455 
       3443 3454 344F 
       3453 3420 3445 
       344C 3445 3443 
       3454 3452 344F 
       344E 3449 3443 
       344F 3453 342E 
       3400 
00F2                  00044 FinMensajes
                      00045         IF (FinMensajes > 0xFF)
                      00046                 ERROR   "ATENCION: La tabla ha superado el tamaño de la página de los"
                      00047                 MESSG   "primeros 255 bytes de memoria ROM. NO funcionará correctamente."
                      00048         ENDIF
                      00049 
00F2                  00050 Inicio
00F2   2117           00051         call    RS232_Inicializa
00F3                  00052 Principal
00F3   3002           00053         movlw   Mensaje0                ; Carga la primera posición del mensaje.
00F4   20FA           00054         call    VisualizaMensaje        ; Lo visualiza en el ordenador.
00F5   304E           00055         movlw   Mensaje1                ; El mismo procedimiento para las siguientes.
00F6   20FA           00056         call    VisualizaMensaje
00F7   3072           00057         movlw   Mensaje2
00F8   20FA           00058         call    VisualizaMensaje
00F9   28F3           00059         goto    Principal
                      00060 
00FA                  00061 VisualizaMensaje        
00FA   2100           00062         call    RS232_Mensaje           ; Lo visualiza en el ordenador.
00FB   210E           00063         call    RS232_LineasBlanco      ; Visualiza unas líneas en blanco después del
00FC   21F7           00064         call    Retardo_2s              ; mensaje durante este tiempo.
00FD   21F9           00065         call    Retardo_1s
00FE   210E           00066         call    RS232_LineasBlanco      ; Líneas en blanco al principio del próximo mensaje.
00FF   0008           00067         return
                      00068 
                      00069         INCLUDE  <RS232MEN.INC>
                      00001 ;***************************** Librería "RS232MEN.INC" **********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten transmitir mensajes desde el microcontrolador hacia el 
                      00010 ; ordenador a través del puerto serie RS232.
                      00011 ;
                      00012 ; Subrutina "RS232_Mensaje" -------------------------------------------------------------
                      00013 ;
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00014 ; Envía por el puerto serie el mensaje apuntado por el registro W y grabado en memoria
                      00015 ; de programa del PIC. El mensaje se visualizará en el monitor del ordenador. Esta
                      00016 ; subrutina sigue la estructura de funcionamiento similar a la ya conocida "LCD_Mensaje"
                      00017 ; para visualización de mensajes en pantallas de  modulos LCD.
                      00018 ;
                      00019         CBLOCK
  0000000C            00020         RS232_ApuntaCaracter            ; Apunta al carácter a visualizar.
  0000000D            00021         RS232_ValorCaracter             ; Valor ASCII del carácter a visualizar.
                      00022         ENDC
                      00023 
0100                  00024 RS232_Mensaje
0100   008C           00025         movwf   RS232_ApuntaCaracter    ; Posición del primer carácter del mensaje.
0101   3001           00026         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0102   028C           00027         subwf   RS232_ApuntaCaracter,F  ; del mensaje respecto del comienzo de todos los
                      00028                                         ; mensajes (identificados mediante la etiqueta
                      00029                                         ; "Mensajes").
0103   038C           00030         decf    RS232_ApuntaCaracter,F  ; Para compensar la posición que ocupa la 
0104                  00031 RS232_VisualizaOtroCaracter                     ; instrucción "addwf PCL,F".
0104   080C           00032         movf    RS232_ApuntaCaracter,W  ; Apunta al carácter a visualizar.
0105   2001           00033         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
0106   008D           00034         movwf   RS232_ValorCaracter     ; Guarda el valor de carácter.
0107   088D           00035         movf    RS232_ValorCaracter,F   ; Lo único que hace es posicionar flag Z. En caso
0108   1903           00036         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
0109   290D           00037         goto    RS232_FinMensaje                ; de mensaje, sale fuera.
010A                  00038 RS232_NoUltimoCaracter
010A   212D           00039         call    RS232_EnviaDato         ; Visualiza el carácter ASCII leído.
010B   0A8C           00040         incf    RS232_ApuntaCaracter,F  ; Apunta a la posición del siguiente carácter
010C   2904           00041         goto    RS232_VisualizaOtroCaracter     ; dentro del mensaje.
010D                  00042 RS232_FinMensaje
010D   0008           00043         return
                      00044 
                      00045 ; Subrutina "RS232_LineasBlanco" ------------------------------------------------
                      00046 ;
                      00047 ; Visualiza unas cuantas líneas en blanco en el monitor del ordenador.
                      00048 
                      00049         CBLOCK
  0000000E            00050         RS232_ContadorLineas
                      00051         ENDC
                      00052 
010E                  00053 RS232_LineasBlanco
010E   300A           00054         movlw   d'10'                   ; Por ejemplo este número de líneas en
010F   008E           00055         movwf   RS232_ContadorLineas    ; blanco.
0110                  00056 R232_LineasBlancoLazo
0110   300A           00057         movlw   .10                     ; Código del salto de línea
0111   212D           00058         call    RS232_EnviaDato
0112   0B8E           00059         decfsz  RS232_ContadorLineas,F
0113   2910           00060         goto    R232_LineasBlancoLazo
0114   300D           00061         movlw   .13                     ; Código del retorno de carro.
0115   212D           00062         call    RS232_EnviaDato         ; Finaliza con un retorno de carro.
0116   0008           00063         return
                      00064         
                      00065 ;       ===================================================================
                      00066 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00067 ;         E. Palacios, F. Remiro y L. López.
                      00068 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00069 ;       ===================================================================
                      00070         INCLUDE  <RS232.INC>
                      00001 ;***************************** Librería "RS232.INC" *************************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de la transmisión
                      00010 ; seríe asincrona según normas RS-232.
                      00011 ;
                      00012 ; Los parámetros adoptados para la comunicación son los siguientes:
                      00013 ; - Velocidad de transmisión de 9600 baudios. La duración de cada bit será 104 µs.
                      00014 ; - Un bit de inicio o Start a nivel bajo.
                      00015 ; - Dato de 8 bits.
                      00016 ; - Sin paridad.
                      00017 ; - Dos bits de final o Stop a nivel alto.
                      00018 ;
                      00019 ; El tiempo entre bit y bit  debe coincidir con el periodo de la señal leída o enviada.
                      00020 ; Como la velocidad de transmisión o recepción es de 9600 baudios, el periodo será:
                      00021 ; 1/9600 Baudios = 104 µs. Se utilizará pues la subrutina Retardos_100micros.
                      00022 
                      00023         CBLOCK
  0000000F            00024         RS232_ContadorBits
  00000010            00025         RS232_Dato
                      00026         ENDC
                      00027 
                      00028 #DEFINE  RS232_Entrada  PORTA,3         ; Línea por la que se reciben los datos.
                      00029 #DEFINE  RS232_Salida   PORTA,4         ; Línea por la que se envían los datos.
                      00030 ;
                      00031 ; Subrutina "RS232_Inicializa" -------------------------------------------------------------
                      00032 ;
                      00033 ; Configura las líneas de salida y entrada del microcontrolador.
                      00034 
0117                  00035 RS232_Inicializa
0117   1683           00036         bsf     STATUS,RP0
0118   1585           00037         bsf     RS232_Entrada           ; Esta línea se configura como entrada.
0119   1205           00038         bcf     RS232_Salida            ; Esta línea se configura como salida.
011A   1283           00039         bcf     STATUS,RP0
011B   0008           00040         return
                      00041 
                      00042 ; Subrutina "RS232_LeeDato" -------------------------------------------------------------
                      00043 ;
                      00044 ; El microcontrolador lee el dato por la línea de entrada comenzando por el bit de menor
                      00045 ; peso. El dato leído se envía finalmente en el registro de trabajo W.
                      00046 ;
                      00047 ; El ordenador parte siempre de un nivel alto, que es el estado que tiene cuando no 
                      00048 ; envía información. La secuencia utilizada es:
                      00049 ; 1º    Espera que se ejecute el pulso negativo del bit Start o flanco de bajada.
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00050 ; 2º    Deja pasar un tiempo una y media veces mayor que el periodo de transmisión para
                      00051 ;       saltarse el bit de Start y lee el primer bit en su mitad.
                      00052 ; 3º    Lee el resto de los bits de datos, esperando un tiempo igual a la duración del
                      00053 ;       periodo entre lectura y lectura para testearlos en mitad del bit.
                      00054 ;
                      00055 ; Salida: En el registro de trabajo W el byte leído.
                      00056 
011C                  00057 RS232_LeeDato
011C   3008           00058         movlw   d'8'                    ; Número de bits a recibir.
011D   008F           00059         movwf   RS232_ContadorBits
011E                  00060 RS232_EsperaBitStart
011E   1985           00061         btfsc   RS232_Entrada           ; Lee la entrada y espera a que sea "0".
011F   291E           00062         goto    RS232_EsperaBitStart    ; No, pues espera el nivel bajo.
0120   21CF           00063         call    Retardo_100micros               ; El primer bit debe leerlo un tiempo igual a una
0121   21D1           00064         call    Retardo_50micros                ; vez y media el periodo de transmisión.
0122                  00065 RS232_LeeBit
0122   1003           00066         bcf     STATUS,C                ; Ahora lee el pin. En principio supone que es 0.
0123   1985           00067         btfsc   RS232_Entrada           ; ¿Realmente es cero?
0124   1403           00068         bsf     STATUS,C                ; No, pues cambia a "1".
0125   0C90           00069         rrf     RS232_Dato,F            ; Introduce el bit en el registro de lectura.
0126   21CF           00070         call    Retardo_100micros               ; Los siguientes bits los lee un periodo más tarde.
0127   0B8F           00071         decfsz  RS232_ContadorBits,F    ; Comprueba que es el último bit.
0128   2922           00072         goto    RS232_LeeBit            ; Si no es el último bit pasa a leer el siguiente.
0129   21CC           00073         call    Retardo_200micros               ; Espera un tiempo igual al los 2 bits de Stop.
012A   0810           00074         movf    RS232_Dato,W            ; El resultado en el registro W.
012B   0008           00075         return  
                      00076 
                      00077 ; Subrutinas "RS232_EnviaDato" y "RS232_EnviaNúmero" -------------------------------------
                      00078 ;
                      00079 ; El microcontrolador envía un dato por la línea de salida comenzando por el bit de menor
                      00080 ; peso. En dato enviado será el que le llegue a través del registro de trabajo W.
                      00081 ; 1º.   Envía un "0" durante un tiempo igual al periodo de la velocidad de transmisión.
                      00082 ;       Este es el bit de "Start".
                      00083 ; 2º.   Envía el bit correspondiente:
                      00084 ;       - Si va a enviar un "0" permanece en bajo durante el periodo correspondiente.
                      00085 ;       - Si va a escribir un "1" permanece en alto durante el periodo correspondiente.
                      00086 ; 3º.   Envía dos bits "1" durante un tiempo igual al período de la velocidad de 
                      00087 ;       transmisión cada uno. Estos son los dos bits de Stop.
                      00088 ;
                      00089 ; Entrada:      En (W) el dato a enviar.
                      00090 
012C                  00091 RS232_EnviaNumero                       ; Envía el código ASCII de un número.
012C   3E30           00092         addlw   '0'                     ; Lo pasa a código ASCII sumándole el ASCII del 0.
012D                  00093 RS232_EnviaDato
012D   0090           00094         movwf   RS232_Dato              ; Guarda el contenido del byte a transmitir.
012E   3008           00095         movlw   d'8'                    ; Este es el número de bits a transmitir.
012F   008F           00096         movwf   RS232_ContadorBits
0130   1205           00097         bcf     RS232_Salida            ; Bit de Start.
0131   21CF           00098         call    Retardo_100micros
0132                  00099 RS232_EnviaBit                          ; Comienza a enviar datos.
0132   0C90           00100         rrf     RS232_Dato,F            ; Lleva el bit que se quiere enviar al Carry para
0133   1C03           00101         btfss   STATUS,C                ; deducir su valor. ¿Es un "1" el bit a transmitir?
0134   2937           00102         goto    RS232_EnviaCero         ; No, pues envía un "0".
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0135                  00103 RS232_EnviaUno
0135   1605           00104         bsf     RS232_Salida            ; Transmite un "1".
0136   2938           00105         goto    RS232_FinEnviaBit
0137                  00106 RS232_EnviaCero
0137   1205           00107         bcf     RS232_Salida            ; Transmite un "0".
0138                  00108 RS232_FinEnviaBit
0138   21CF           00109         call    Retardo_100micros               ; Este es el tiempo que estará en alto o bajo.
0139   0B8F           00110         decfsz  RS232_ContadorBits,F    ; Comprueba que es el último bit.
013A   2932           00111         goto    RS232_EnviaBit          ; Como no es el último bit repite la operación.
013B   1605           00112         bsf     RS232_Salida            ; Envía dos bits de Stop.
013C   21CC           00113         call    Retardo_200micros
013D   0008           00114         return
                      00115         
                      00116 ;       ===================================================================
                      00117 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00118 ;         E. Palacios, F. Remiro y L. López.
                      00119 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00120 ;       ===================================================================
                      00071         INCLUDE  <LCD_4BIT.INC>
                      00001 ;**************************** Librería "LCD_4BIT.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00010 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00011 ;
                      00012 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00013 ; conexiones son:
                      00014 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00015 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00016 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00017 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00018 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00019 ;
                      00020 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00021 ;
                      00022 ; ZONA DE DATOS *********************************************************************
                      00023 
                      00024         CBLOCK
  00000011            00025         LCD_Dato
  00000012            00026         LCD_GuardaDato
  00000013            00027         LCD_GuardaTRISB
  00000014            00028         LCD_Auxiliar1
  00000015            00029         LCD_Auxiliar2
                      00030         ENDC
                      00031 
  00000010            00032 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00033 
                      00034 #DEFINE  LCD_PinRS      PORTA,0
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00035 #DEFINE  LCD_PinRW      PORTA,1
                      00036 #DEFINE  LCD_PinEnable  PORTA,2
                      00037 #DEFINE  LCD_BusDatos   PORTB
                      00038 
                      00039 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00040 ;
                      00041 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00042 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00043 ; configuración inicial hay que hacerla como sigue:
                      00044 ;
013E                  00045 LCD_Inicializa
013E   1683           00046         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
013F   1005           00047         bcf     LCD_PinRS               ; R/W y E.
0140   1105           00048         bcf     LCD_PinEnable
0141   1085           00049         bcf     LCD_PinRW
0142   1283           00050         bcf     STATUS,RP0
0143   1085           00051         bcf     LCD_PinRW               ; En caso de que esté conectado le indica
                      00052                                         ; que se va a escribir en el LCD.
0144   1105           00053         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD poniendo E=0.
0145   1005           00054         bcf     LCD_PinRS               ; Activa el Modo Comando poniendo RS=0.
0146   21DF           00055         call    Retardo_20ms
0147   3030           00056         movlw   b'00110000'     
0148   2156           00057         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
0149   21E3           00058         call    Retardo_5ms     
014A   3030           00059         movlw   b'00110000'     
014B   2156           00060         call    LCD_EscribeLCD
014C   21CC           00061         call    Retardo_200micros
014D   3030           00062         movlw   b'00110000'     
014E   2156           00063         call    LCD_EscribeLCD
014F   3020           00064         movlw   b'00100000'             ; Interface de 4 bits.
0150   2156           00065         call    LCD_EscribeLCD
                      00066 
                      00067 ; Ahora configura el resto de los parámetros: 
                      00068 
0151   217C           00069         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
0152   217A           00070         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
0153   2178           00071         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
0154   216A           00072         call    LCD_CursorIncr          ; Cursor en modo incrementar.
0155   0008           00073         return
                      00074 
                      00075 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00076 ;
                      00077 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el pin
                      00078 ; Enable del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B que
                      00079 ; no son utilizadas para el LCD (pines RB3:RB0), primero se lee estas líneas y después se
                      00080 ; vuelve a enviar este dato sin cambiarlo.
                      00081 
0156                  00082 LCD_EscribeLCD
0156   39F0           00083         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
0157   0091           00084         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
0158   0806           00085         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
0159   390F           00086         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
015A   0491           00087         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00088                                         ; y en la parte baja lo que había antes.
015B   1683           00089         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
015C   0806           00090         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
015D   0093           00091         movwf   LCD_GuardaTRISB
015E   300F           00092         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
015F   0586           00093         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
0160   1283           00094         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00095 ;
0161   0811           00096         movf    LCD_Dato,W              ; Recupera el dato a enviar.
0162   0086           00097         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
0163   1505           00098         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD mediante un pequeño
0164   1105           00099         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
0165   1683           00100         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
0166   0813           00101         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
0167   0086           00102         movwf   PORTB                   ; Realmente es TRISB.
0168   1283           00103         bcf     STATUS,RP0              ; Acceso al Banco 0.
0169   0008           00104         return
                      00105 
                      00106 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00107 ;
                      00108 ;Los comandos que pueden ser ejecutados son:
                      00109 ;
016A                  00110 LCD_CursorIncr                          ; Cursor en modo incrementar.
016A   3006           00111         movlw   b'00000110'
016B   297D           00112         goto    LCD_EnviaComando
016C                  00113 LCD_Linea1                              ; Cursor al principio de la Línea 1.
016C   3080           00114         movlw   b'10000000'             ; Dirección 00h de la DDRAM
016D   297D           00115         goto    LCD_EnviaComando
016E                  00116 LCD_Linea2                              ; Cursor al principio de la Línea 2.
016E   30C0           00117         movlw   b'11000000'             ; Dirección 40h de la DDRAM
016F   297D           00118         goto    LCD_EnviaComando
0170                  00119 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
0170   3880           00120         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
0171   297D           00121         goto    LCD_EnviaComando        ; registro W.
0172                  00122 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
0172   38C0           00123         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
0173   297D           00124         goto    LCD_EnviaComando        ; registro W.
0174                  00125 LCD_OFF                         ; Pantalla apagada.
0174   3008           00126         movlw   b'00001000'
0175   297D           00127         goto    LCD_EnviaComando
0176                  00128 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
0176   300E           00129         movlw   b'00001110'
0177   297D           00130         goto    LCD_EnviaComando
0178                  00131 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
0178   300C           00132         movlw   b'00001100'
0179   297D           00133         goto    LCD_EnviaComando
017A                  00134 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
017A   3001           00135         movlw   b'00000001'             ; cursor a principio de la línea 1.
017B   297D           00136         goto    LCD_EnviaComando
017C                  00137 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
017C   3028           00138         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00139 ;       goto    LCD_EnviaComando        ; 4 bits. 
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00140 
                      00141 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00142 ;
                      00143 ; "LCD_EnviaComando". Escribe un comando en el registro del módulo LCD. La palabra de
                      00144 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00145 ; "LCD_Caracter". Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00146 ; a través del registro W. Trabaja en Modo Dato.
                      00147 ;
017D                  00148 LCD_EnviaComando
017D   1005           00149         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
017E   2981           00150         goto    LCD_Envia
017F                  00151 LCD_Caracter
017F   1405           00152         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
0180   2189           00153         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
0181                  00154 LCD_Envia
0181   0092           00155         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
0182   2156           00156         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
0183   0E12           00157         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00158                                         ; nibble bajo del dato a enviar a parte alta del byte.
0184   2156           00159         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
0185   1C05           00160         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
0186   21E5           00161         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
0187   21D1           00162         call    Retardo_50micros
0188   0008           00163         return  
                      00164 
                      00165 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00166 ;
                      00167 ; A partir del carácter ASCII número 127 los códigos de los caracteres definidos en la
                      00168 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00169 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00170 ;
                      00171 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00172 ; que puedan ser visualizado en el módulo LM016L.
                      00173 ; 
                      00174 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00175 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00176 
0189                  00177 LCD_CodigoCGROM
0189   0091           00178         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
018A                  00179 LCD_EnheMinuscula                       ; un carácter especial.
018A   3CF1           00180         sublw   'ñ'                     ; ¿Es la "ñ"?
018B   1D03           00181         btfss   STATUS,Z
018C   2990           00182         goto    LCD_EnheMayuscula       ; No es "ñ".
018D   30EE           00183         movlw   b'11101110'             ; Código CGROM de la "ñ".
018E   0091           00184         movwf   LCD_Dato
018F   299D           00185         goto    LCD_FinCGROM
0190                  00186 LCD_EnheMayuscula
0190   0811           00187         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0191   3CD1           00188         sublw   'Ñ'                     ; ¿Es la "Ñ"?
0192   1D03           00189         btfss   STATUS,Z
0193   2997           00190         goto    LCD_Grado               ; No es "Ñ".
0194   30EE           00191         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
0195   0091           00192         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0196   299D           00193         goto    LCD_FinCGROM    
0197                  00194 LCD_Grado
0197   0811           00195         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0198   3CBA           00196         sublw   'º'                     ; ¿Es el símbolo "º"?
0199   1D03           00197         btfss   STATUS,Z
019A   299D           00198         goto    LCD_FinCGROM            ; No es "º".
019B   30DF           00199         movlw   b'11011111'             ; Código CGROM del símbolo "º".
019C   0091           00200         movwf   LCD_Dato
019D                  00201 LCD_FinCGROM
019D   0811           00202         movf    LCD_Dato,W              ; En (W) el código buscado.
019E   0008           00203         return
                      00204 
                      00205 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00206 ;
                      00207 ; Visualiza espacios en blanco.
                      00208 
019F                  00209 LCD_LineaEnBlanco
019F   3010           00210         movlw   LCD_CaracteresPorLinea
01A0   29A6           00211         goto    LCD_EnviaBlancos
01A1                  00212 LCD_UnEspacioBlanco
01A1   3001           00213         movlw   .1
01A2   29A6           00214         goto    LCD_EnviaBlancos
01A3                  00215 LCD_DosEspaciosBlancos
01A3   3002           00216         movlw   .2
01A4   29A6           00217         goto    LCD_EnviaBlancos
01A5                  00218 LCD_TresEspaciosBlancos
01A5   3003           00219         movlw   .3
01A6                  00220 LCD_EnviaBlancos
01A6   0094           00221         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
01A7                  00222 LCD_EnviaOtroBlanco     
01A7   3020           00223         movlw   ' '                     ; Esto es un espacio en blanco.
01A8   217F           00224         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
01A9   0B94           00225         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
01AA   29A7           00226         goto    LCD_EnviaOtroBlanco
01AB   0008           00227         return
                      00228 
                      00229 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00230 ;
                      00231 ; Subrutina "LCD_ByteCompleto", visualiza el byte que almacena el registro W en el
                      00232 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00233 ;
                      00234 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero 
                      00235 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00236 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00237 ;
                      00238 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00239 ;
01AC                  00240 LCD_Byte
01AC   0095           00241         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01AD   39F0           00242         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
01AE   1D03           00243         btfss   STATUS,Z                ; Si es cero lo apaga.
01AF   29B4           00244         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
01B0   3020           00245         movlw   ' '                     ; Visualiza un espacio en blanco.
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B1   217F           00246         call    LCD_Caracter
01B2   29B6           00247         goto    LCD_VisualizaBajo
                      00248 
01B3                  00249 LCD_ByteCompleto
01B3   0095           00250         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01B4                  00251 LCD_VisualizaAlto
01B4   0E15           00252         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
01B5   21B7           00253         call    LCD_Nibble              ; Lo visualiza.
01B6                  00254 LCD_VisualizaBajo
01B6   0815           00255         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00256 ;       call    LCD_Nibble              ; Lo visualiza.
                      00257 ;       return
                      00258 
                      00259 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00260 ;
                      00261 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00262 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00263 ; - Si (W)=b'01010110', se visualizará "6". 
                      00264 ; - Si (W)=b'10101110', se visualizará "E". 
                      00265 ;
01B7                  00266 LCD_Nibble
01B7   390F           00267         andlw   b'00001111'             ; Se queda con la parte baja.
01B8   0094           00268         movwf   LCD_Auxiliar1           ; Lo guarda.
01B9   3C09           00269         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
01BA   1C03           00270         btfss   STATUS,C        
01BB   29BF           00271         goto    LCD_EnviaByteLetra
01BC   0814           00272         movf    LCD_Auxiliar1,W
01BD   3E30           00273         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
01BE   29C1           00274         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
01BF                  00275 LCD_EnviaByteLetra
01BF   0814           00276         movf    LCD_Auxiliar1,W
01C0   3E37           00277         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
01C1                  00278 LCD_FinVisualizaDigito
01C1   297F           00279         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00280                                         ; para no sobrecargar la pila.
                      00281                                         
                      00282 ;       ===================================================================
                      00283 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00284 ;         E. Palacios, F. Remiro y L. López.
                      00285 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00286 ;       ===================================================================
                      00072         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000016            00021         R_ContA                         ; Contadores para los retardos.
  00000017            00022         R_ContB
  00000018            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
01C2                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
01C2   0000           00033         nop                             ; Aporta 1 ciclo máquina.
01C3   0000           00034         nop                             ; Aporta 1 ciclo máquina.
01C4   0000           00035         nop                             ; Aporta 1 ciclo máquina.
01C5   0000           00036         nop                             ; Aporta 1 ciclo máquina.
01C6   0000           00037         nop                             ; Aporta 1 ciclo máquina.
01C7                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
01C7   0000           00039         nop                             ; Aporta 1 ciclo máquina.
01C8                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
01C8   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
01C9                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
01C9   0000           00046         nop                             ; Aporta 1 ciclo máquina.
01CA   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
01CB   29D5           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
01CC                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
01CC   0000           00050         nop                             ; Aporta 1 ciclo máquina.
01CD   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
01CE   29D5           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
01CF                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
01CF   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
01D0   29D5           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
01D1                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
01D1   0000           00057         nop                             ; Aporta 1 ciclo máquina.
01D2   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
01D3   29D5           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
01D4                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
01D4   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00065 ;
01D5                  00066 RetardoMicros
01D5   0096           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
01D6                  00068 Rmicros_Bucle
01D6   0B96           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01D7   29D6           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
01D8   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
01D9                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
01D9   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
01DA   29E8           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01DB                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
01DB   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
01DC   29E8           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01DD                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
01DD   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
01DE   29E8           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01DF                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
01DF   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
01E0   29E8           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01E1                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
01E1   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
01E2   29E8           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01E3                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
01E3   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
01E4   29E8           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01E5                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
01E5   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
01E6   29E8           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
01E7                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
01E7   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
01E8                  00111 Retardos_ms
01E8   0097           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
01E9                  00113 R1ms_BucleExterno
01E9   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
01EA   0096           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
01EB                  00116 R1ms_BucleInterno
01EB   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EC   0B96           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
01ED   29EB           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
01EE   0B97           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01EF   29E9           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
01F0   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
01F1                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
01F1   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
01F2   29FC           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01F3                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
01F3   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
01F4   29FC           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01F5                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
01F5   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
01F6   29FC           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01F7                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
01F7   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
01F8   29FC           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01F9                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
01F9   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
01FA   29FC           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
01FB                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
01FB   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
01FC                  00160 Retardo_1Decima
01FC   0098           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
01FD                  00162 R1Decima_BucleExterno2
01FD   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
01FE   0097           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
01FF                  00165 R1Decima_BucleExterno
01FF   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
0200   0096           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
0201                  00168 R1Decima_BucleInterno          
0201   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
0202   0B96           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0203   2A01           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
0204   0B97           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
0205   29FF           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
0206   0B98           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0207   29FD           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
0208   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00191 
                      00192 ;       ===================================================================
                      00193 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00194 ;         E. Palacios, F. Remiro y L. López.
                      00195 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00196 ;       ===================================================================
                      00197 
                      00198 
                      00199 
                      00200 
                      00073         END
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
CambioLinea                       0000000A
DC                                00000001
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
F                                 00000001
FSR                               00000004
FinMensajes                       000000F2
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            000000F2
LCD_2Lineas4Bits5x7               0000017C
LCD_Auxiliar1                     00000014
LCD_Auxiliar2                     00000015
LCD_Borra                         0000017A
LCD_BusDatos                      PORTB
LCD_Byte                          000001AC
LCD_ByteCompleto                  000001B3
LCD_Caracter                      0000017F
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   00000189
LCD_CursorIncr                    0000016A
LCD_CursorOFF                     00000178
LCD_CursorON                      00000176
LCD_Dato                          00000011
LCD_DosEspaciosBlancos            000001A3
LCD_EnheMayuscula                 00000190
LCD_EnheMinuscula                 0000018A
LCD_Envia                         00000181
LCD_EnviaBlancos                  000001A6
LCD_EnviaByteLetra                000001BF
LCD_EnviaComando                  0000017D
LCD_EnviaOtroBlanco               000001A7
LCD_EscribeLCD                    00000156
LCD_FinCGROM                      0000019D
LCD_FinVisualizaDigito            000001C1
LCD_Grado                         00000197
LCD_GuardaDato                    00000012
LCD_GuardaTRISB                   00000013
LCD_Inicializa                    0000013E
LCD_Linea1                        0000016C
LCD_Linea2                        0000016E
LCD_LineaEnBlanco                 0000019F
LCD_Nibble                        000001B7
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

LCD_OFF                           00000174
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                00000170
LCD_PosicionLinea2                00000172
LCD_TresEspaciosBlancos           000001A5
LCD_UnEspacioBlanco               000001A1
LCD_VisualizaAlto                 000001B4
LCD_VisualizaBajo                 000001B6
Mensaje0                          00000002
Mensaje1                          0000004E
Mensaje2                          00000072
Mensajes                          00000001
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Principal                         000000F3
R1Decima_BucleExterno             000001FF
R1Decima_BucleExterno2            000001FD
R1Decima_BucleInterno             00000201
R1ms_BucleExterno                 000001E9
R1ms_BucleInterno                 000001EB
R232_LineasBlancoLazo             00000110
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
RS232_ApuntaCaracter              0000000C
RS232_ContadorBits                0000000F
RS232_ContadorLineas              0000000E
RS232_Dato                        00000010
RS232_Entrada                     PORTA,3
RS232_EnviaBit                    00000132
RS232_EnviaCero                   00000137
RS232_EnviaDato                   0000012D
RS232_EnviaNumero                 0000012C
RS232_EnviaUno                    00000135
RS232_EsperaBitStart              0000011E
RS232_FinEnviaBit                 00000138
RS232_FinMensaje                  0000010D
RS232_Inicializa                  00000117
RS232_LeeBit                      00000122
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

RS232_LeeDato                     0000011C
RS232_LineasBlanco                0000010E
RS232_Mensaje                     00000100
RS232_NoUltimoCaracter            0000010A
RS232_Salida                      PORTA,4
RS232_ValorCaracter               0000000D
RS232_VisualizaOtroCaracter       00000104
R_ContA                           00000016
R_ContB                           00000017
R_ContC                           00000018
RetardoMicros                     000001D5
Retardo_100micros                 000001CF
Retardo_100ms                     000001DB
Retardo_10micros                  000001C2
Retardo_10ms                      000001E1
Retardo_10s                       000001F3
Retardo_1Decima                   000001FC
Retardo_1ms                       000001E7
Retardo_1s                        000001F9
Retardo_200micros                 000001CC
Retardo_200ms                     000001D9
Retardo_20micros                  000001D4
Retardo_20ms                      000001DF
Retardo_20s                       000001F1
Retardo_2ms                       000001E5
Retardo_2s                        000001F7
Retardo_4micros                   000001C8
Retardo_500micros                 000001C9
Retardo_500ms                     000001FB
Retardo_50micros                  000001D1
Retardo_50ms                      000001DD
Retardo_5micros                   000001C7
Retardo_5ms                       000001E3
Retardo_5s                        000001F5
Retardos_ms                       000001E8
RetornoCarro                      0000000D
Rmicros_Bucle                     000001D6
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
VisualizaMensaje                  000000FA
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
MPASM 03.50 Released                             RS232_06.ASM   10-26-2003  9:27:14         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXX------- ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   521
Program Memory Words Free:   503


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     1 reported,     0 suppressed

