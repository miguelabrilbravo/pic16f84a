MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;******************************** Int_Cuadradas_01.asm **********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Por la línea 3 del puerto B se genera una onda cuadrada. La frecuencia de la onda cuadrada cambia
                      00010 ; mediante activación del pulsador conectado al pin 7 del puerto B, de la de la siguiente forma:
                      00011 ;
                      00012 ;       PULSACIÓN       FRECUENCIA                   SEMIPERIODO
                      00013 ;       ---------       ----------              -----------------------
                      00014 ;       (Inicial)         10 kHz                   50 µs. =   1 x 50 µs
                      00015 ;       Primera            5 kHz                  100 µs. =   2 x 50 µs
                      00016 ;       Segunda            2 kHz                  250 µs. =   5 x 50 µs
                      00017 ;       Tercera            1 kHz                  500 µs. =  10 x 50 µs
                      00018 ;       Cuarta           500  Hz                 1000 µs. =  20 x 50 µs
                      00019 ;       Quinta           200  Hz                 2500 µs. =  50 x 50 µs
                      00020 ;       Sexta            100  Hz                 5000 µs. = 100 x 50 µs
                      00021 ;       Septima           50  Hz                10000 µs. = 200 x 50 µs
                      00022 ;
                      00023 ; Al conectarlo por primera vez se genera una frecuencia de 10 kHz, al activar el
                      00024 ; pulsador cambia a 5 kHz, al actuar una segunda vez cambia a 2 kHz, y así sucesivamente.
                      00025 ;
                      00026 ; El módulo LCD visualizará la frecuencia generada. A la línea de salida se puede conectar
                      00027 ; un altavoz que producirá un pitido.
                      00028 
                      00029 ; ZONA DE DATOS **********************************************************************
                      00030 
2007   3FF1           00031         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00032         LIST       P=16F84A
                      00033         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00034 
                      00035         CBLOCK   0x0C
  0000000C            00036         ApuntadorFrecuencia
  0000000D            00037         Semiperiodo
                      00038         ENDC
                      00039 
  FFFFFFD6            00040 TMR0_Carga50us  EQU     -d'42'          ; El semiperiodo patrón va a ser de 50 µs.
  00000008            00041 NumeroFrec      EQU     d'8'            ; Ocho posibles frecuencias: 10 kHz, 5 kHz, 2 kHz,
                      00042                                         ; 1 kHz, 500 Hz, 200 Hz, 100 Hz y 50 Hz.
                      00043 #DEFINE  Salida PORTB,3
                      00044 #DEFINE  Pulsador PORTB,7
                      00045 
                      00046 ; ZONA DE CÓDIGOS ********************************************************************
                      00047 
0000                  00048         ORG     0
0000   2868           00049         goto    Inicio
0004                  00050         ORG     4
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004   2875           00051         goto    ServicioInterrupcion
                      00052 
                      00053 ; Subrutina "CargaContador" -------------------------------------------------------------
                      00054 
0005                  00055 CargaContador
0005   0782           00056         addwf   PCL,F
0006   3401           00057         retlw   .1      ; Semiperíodo   1 x 50 =    50 µs, frecuencia =  10 kHz.
0007   3402           00058         retlw   .2      ; Semiperíodo   2 x 50 =   100 µs, frecuencia =   5 kHz.
0008   3405           00059         retlw   .5      ; Semiperíodo   5 x 50 =   250 µs, frecuencia =   2 kHz.
0009   340A           00060         retlw   .10     ; Semiperíodo  10 x 50 =   500 µs, frecuencia =   1 kHz.
000A   3414           00061         retlw   .20     ; Semiperíodo  20 x 50 =  1000 µs, frecuencia = 500  Hz.
000B   3432           00062         retlw   .50     ; Semiperíodo  50 x 50 =  2500 µs, frecuencia = 200  Hz.
000C   3464           00063         retlw   .100    ; Semiperíodo 100 x 50 =  5000 µs, frecuencia = 100  Hz.
000D   34C8           00064         retlw   .200    ; Semiperíodo 200 x 50 = 10000 µs, frecuencia =  50  Hz.
                      00065 
                      00066 ; Subrutina "CargaMensaje" -------------------------------------------------------------
                      00067 
000E                  00068 CargaMensaje
000E   0782           00069         addwf   PCL,F
000F   3420           00070         retlw   Mensaje10kHz
0010   3429           00071         retlw   Mensaje5kHz
0011   3432           00072         retlw   Mensaje2kHz
0012   343B           00073         retlw   Mensaje1kHz
0013   3444           00074         retlw   Mensaje500Hz
0014   344D           00075         retlw   Mensaje200Hz
0015   3456           00076         retlw   Mensaje100Hz
0016   345F           00077         retlw   Mensaje50Hz
                      00078 
                      00079 ; Subrutina "Mensajes" ------------------------------------------------------------------
                      00080 ;
0017                  00081 Mensajes
0017   0782           00082         addwf   PCL,F
0018                  00083 MensajeFrecuencia
0018   3446 3472 3465 00084         DT "Frec.: ", 0x00
       3463 342E 343A 
       3420 3400 
0020                  00085 Mensaje10kHz
0020   3431 3430 3420 00086         DT "10 kHz. ", 0x00
       346B 3448 347A 
       342E 3420 3400 
0029                  00087 Mensaje5kHz
0029   3435 3420 346B 00088         DT "5 kHz.  ", 0x00
       3448 347A 342E 
       3420 3420 3400 
0032                  00089 Mensaje2kHz
0032   3432 3420 346B 00090         DT "2 kHz.  ", 0x00
       3448 347A 342E 
       3420 3420 3400 
003B                  00091 Mensaje1kHz
003B   3431 3420 346B 00092         DT "1 kHz.  ", 0x00
       3448 347A 342E 
       3420 3420 3400 
0044                  00093 Mensaje500Hz
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0044   3435 3430 3430 00094         DT "500 Hz. ", 0x00
       3420 3448 347A 
       342E 3420 3400 
004D                  00095 Mensaje200Hz
004D   3432 3430 3430 00096         DT "200 Hz. ", 0x00
       3420 3448 347A 
       342E 3420 3400 
0056                  00097 Mensaje100Hz
0056   3431 3430 3430 00098         DT "100 Hz. ", 0x00
       3420 3448 347A 
       342E 3420 3400 
005F                  00099 Mensaje50Hz
005F   3435 3430 3420 00100         DT "50 Hz.  ", 0x00
       3448 347A 342E 
       3420 3420 3400 
                      00101 
                      00102 ; Programa Principal ------------------------------------------------------------------
                      00103 
0068                  00104 Inicio
0068   20C5           00105         call    LCD_Inicializa
0069   1683           00106         bsf     STATUS,RP0
006A   1186           00107         bcf     Salida
006B   1786           00108         bsf     Pulsador
006C   3008           00109         movlw   b'00001000'             ; TMR0 sin prescaler.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006D   0081           00110         movwf   OPTION_REG
006E   1283           00111         bcf     STATUS,RP0
006F   2083           00112         call    EstadoInicial           ; Visualiza la frecuencia inicial.
0070   30D6           00113         movlw   TMR0_Carga50us          ; Carga el TMR0.
0071   0081           00114         movwf   TMR0    
0072   30A8           00115         movlw   b'10101000'
0073   008B           00116         movwf   INTCON                  ; Activa interrupciones del TMR0, RBI y general.
0074                  00117 Principal
0074   2874           00118         goto    Principal
                      00119 
                      00120 ; Subrutina "ServicioInterrupcion" ------------------------------------------------------
                      00121 ;
                      00122 ; Detecta qué ha producido la interrupción y ejecuta la subrutina correspondiente.
                      00123 
0075                  00124 ServicioInterrupcion
0075   190B           00125         btfsc   INTCON,T0IF             ; ¿Interrupción por desbordamiento del TMR0?.
0076   2091           00126         call    Timer0_Interrupcion
0077   180B           00127         btfsc   INTCON,RBIF             ; ¿Interrupción por cambio en el Puerto B?.
0078   207C           00128         call    Pulsador_Interrupcion
0079   110B           00129         bcf     INTCON,T0IF             ; Repone flag del TMR0.
007A   100B           00130         bcf     INTCON,RBIF             ; Repone flag del RBI.
007B   0009           00131         retfie
                      00132 
                      00133 ; Subrutina "Pulsador_Interrupcion" -----------------------------------------------------
                      00134 ;
                      00135 ; Subrutina de atención a la interrupción por cambio en la línea RB7 donde se ha
                      00136 ; conectado un pulsador. 
                      00137 ; Incrementa el registro (ApuntadorFrecuencia), desde b'00000000' (que corresponde a una
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00138 ; frecuencia de 10 kHz), hasta b'00000111' (que corresponde a una frecuencia de 50 Hz) según
                      00139 ; la tabla especificada en el enunciado del ejercicio.
                      00140 ;
007C                  00141 Pulsador_Interrupcion
007C   2166           00142         call    Retardo_20ms
007D   1B86           00143         btfsc   Pulsador
007E   2890           00144         goto    Fin_PulsadorInterrupcion
007F   0A8C           00145         incf    ApuntadorFrecuencia,F   ; Apunta a la siguiente frecuencia.
0080   3008           00146         movlw   NumeroFrec              ; Va a comprobar si ha llegado al máximo.
0081   020C           00147         subwf   ApuntadorFrecuencia,W   ; (W)=(ApuntadorFrecuencia)-NumeroFrec
0082   1803           00148         btfsc   STATUS,C                ; ¿Ha llegado a su máximo?
0083                  00149 EstadoInicial
0083   018C           00150         clrf    ApuntadorFrecuencia     ; Si llega al máximo lo inicializa.
0084   080C           00151         movf    ApuntadorFrecuencia,W   ; Va a cargar el valor del factor de
0085   2005           00152         call    CargaContador           ; multiplicación del semiperiodo según la 
0086   008D           00153         movwf   Semiperiodo             ; tabla.
0087   008E           00154         movwf   Timer0_ContadorA
0088   20F6           00155         call    LCD_Linea1              ; Visualiza la frecuencia seleccionada.
0089   3018           00156         movlw   MensajeFrecuencia
008A   209D           00157         call    LCD_Mensaje
008B   080C           00158         movf    ApuntadorFrecuencia,W
008C   200E           00159         call    CargaMensaje
008D   209D           00160         call    LCD_Mensaje
008E                  00161 EsperaDejePulsar
008E   1F86           00162         btfss   Pulsador
008F   288E           00163         goto    EsperaDejePulsar
0090                  00164 Fin_PulsadorInterrupcion
0090   0008           00165         return
                      00166 
                      00167 ; Subrutina "Timer0_Interrupcion" -------------------------------------------------------
                      00168 ;
                      00169         CBLOCK
  0000000E            00170         Timer0_ContadorA
                      00171         ENDC
                      00172 
0091                  00173 Timer0_Interrupcion
0091   30D6           00174         movlw   TMR0_Carga50us
0092   0081           00175         movwf   TMR0                    ; Recarga el TMR0.
0093   0B8E           00176         decfsz  Timer0_ContadorA,F      ; Decrementa el contador.
0094   289C           00177         goto    Fin_Timer0_Interrupcion
0095   080D           00178         movf    Semiperiodo,W           ; Repone el contador nuevamente.
0096   008E           00179         movwf   Timer0_ContadorA
0097   1986           00180         btfsc   Salida                  ; Testea el último estado de la salida.
0098   289B           00181         goto    EstabaAlto
0099                  00182 EstabaBajo
0099   1586           00183         bsf     Salida                  ; Estaba bajo y lo pasa a alto.
009A   289C           00184         goto    Fin_Timer0_Interrupcion
009B                  00185 EstabaAlto
009B   1186           00186         bcf     Salida                  ; Estaba alto y lo pasa a bajo.
009C                  00187 Fin_Timer0_Interrupcion
009C   0008           00188         return
                      00189 
                      00190         INCLUDE  <LCD_MENS.INC>
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**************************** Librería "LCD_MENS.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00010 
                      00011         CBLOCK
  0000000F            00012         LCD_ApuntaCaracter              ; Indica la posición del carácter a visualizar
                      00013                                         ; respecto del comienzo de todos los mensajes,
                      00014                                         ; (posición de la etiqueta "Mensajes").
  00000010            00015         LCD_ValorCaracter                       ; Código ASCII del carácter a 
                      00016         ENDC                            ; visualizar.
                      00017 
                      00018 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00019 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00020 
                      00021 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00022 ;
                      00023 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00024 ;
                      00025 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
                      00026 ; tenga la siguiente estructura:
                      00027 ;
                      00028 ; Mensajes                              ; ¡Etiqueta obligatoria!
                      00029 ;       addwf   PCL,F
                      00030 ; Mensaje0                              ; Posición inicial del mensaje.
                      00031 ;       DT ".. ..", 0x00                        ; Mensaje terminado en 0x00.
                      00032 ; Mensaje1
                      00033 ;       ...     
                      00034 ;       ...
                      00035 ; FinMensajes
                      00036 ;
                      00037 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00038 ;
                      00039 ;       movlw   Mensaje0                        ; Carga la posición del mensaje.
                      00040 ;       call    LCD_Mensaje             ; Visualiza el mensaje.
                      00041 ;
009D                  00042 LCD_Mensaje
009D   008F           00043         movwf   LCD_ApuntaCaracter      ; Posición de primer carácter del mensaje.
009E   3017           00044         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
009F   028F           00045         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
00A0   038F           00046         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
00A1                  00047 LCD_VisualizaOtroCaracter
00A1   080F           00048         movf    LCD_ApuntaCaracter,W
00A2   2017           00049         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
00A3   0090           00050         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
00A4   0890           00051         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
00A5   1903           00052         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
00A6   28AA           00053         goto    LCD_FinMensaje          ; de mensaje, sale fuera.
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A7                  00054 LCD_NoUltimoCaracter
00A7   2109           00055         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
00A8   0A8F           00056         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
00A9   28A1           00057         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
00AA                  00058 LCD_FinMensaje
00AA   0008           00059         return                          ; Vuelve al programa principal.
                      00060 
                      00061 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00062 ;
                      00063 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00064 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00065 ;
                      00066 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00067 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00068 ;
                      00069         CBLOCK  
  00000011            00070         LCD_CursorPosicion              ; Contabiliza la posición del cursor dentro de la
                      00071         ENDC                            ; pantalla LCD
                      00072 
00AB                  00073 LCD_MensajeMovimiento
00AB   008F           00074         movwf   LCD_ApuntaCaracter      ; Posición del primer carácter del mensaje.
00AC   3017           00075         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
00AD   028F           00076         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
00AE   038F           00077         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
00AF                  00078 LCD_PrimeraPosicion
00AF   0191           00079         clrf    LCD_CursorPosicion      ; El cursor en la posición 0 de la línea.
00B0   2104           00080         call    LCD_Borra               ; Se sitúa en la primera posición de la línea 1 y
00B1                  00081 LCD_VisualizaCaracter                   ; borra la pantalla.
00B1   3010           00082         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
00B2   0211           00083         subwf   LCD_CursorPosicion,W
00B3   1D03           00084         btfss   STATUS,Z
00B4   28BA           00085         goto    LCD_NoEsFinalLinea
00B5                  00086 LCD_EsFinalLinea
00B5   2160           00087         call    Retardo_200ms           ; Lo mantiene visualizado durante este tiempo.
00B6   2160           00088         call    Retardo_200ms
00B7   300F           00089         movlw   LCD_CaracteresPorLinea-1        ; Apunta a la posición del segundo carácter visualizado
00B8   028F           00090         subwf   LCD_ApuntaCaracter,F    ; en pantalla y que será el primero en la siguiente
00B9   28AF           00091         goto    LCD_PrimeraPosicion      ; visualización de línea, para producir el efecto
00BA                  00092 LCD_NoEsFinalLinea                      ; de desplazamiento hacia la izquierda.
00BA   080F           00093         movf    LCD_ApuntaCaracter,W
00BB   2017           00094         call    Mensajes                        ; Obtiene el ASCII del carácter apuntado.
00BC   0090           00095         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
00BD   0890           00096         movf    LCD_ValorCaracter,F     ; Lo único que hace es posicionar flag Z. En caso
00BE   1903           00097         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
00BF   28C4           00098         goto    LCD_FinMovimiento       ; de mensaje, sale fuera.
00C0                  00099 LCD_NoUltimoCaracter2
00C0   2109           00100         call    LCD_Caracter            ; Visualiza el carácter ASCII leído.
00C1   0A91           00101         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00102                                         ; cursor en la pantalla.
00C2   0A8F           00103         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
00C3   28B1           00104         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
00C4                  00105 LCD_FinMovimiento                       ; de la línea.
00C4   0008           00106         return                          ; Vuelve al programa principal.
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00191         INCLUDE  <LCD_4BIT.INC>
                      00001 ;**************************** Librería "LCD_4BIT.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00010 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00011 ;
                      00012 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00013 ; conexiones son:
                      00014 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00015 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00016 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00017 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00018 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00019 ;
                      00020 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00021 ;
                      00022 ; ZONA DE DATOS *********************************************************************
                      00023 
                      00024         CBLOCK
  00000012            00025         LCD_Dato
  00000013            00026         LCD_GuardaDato
  00000014            00027         LCD_GuardaTRISB
  00000015            00028         LCD_Auxiliar1
  00000016            00029         LCD_Auxiliar2
                      00030         ENDC
                      00031 
  00000010            00032 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00033 
                      00034 #DEFINE  LCD_PinRS      PORTA,0
                      00035 #DEFINE  LCD_PinRW      PORTA,1
                      00036 #DEFINE  LCD_PinEnable  PORTA,2
                      00037 #DEFINE  LCD_BusDatos   PORTB
                      00038 
                      00039 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00040 ;
                      00041 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00042 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00043 ; configuración inicial hay que hacerla como sigue:
                      00044 ;
00C5                  00045 LCD_Inicializa
00C5   1683           00046         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
00C6   1005           00047         bcf     LCD_PinRS               ; R/W y E.
00C7   1105           00048         bcf     LCD_PinEnable
00C8   1085           00049         bcf     LCD_PinRW
00C9   1283           00050         bcf     STATUS,RP0
00CA   1085           00051         bcf     LCD_PinRW               ; En caso de que esté conectado, le indica
                      00052                                         ; que se va a escribir en el LCD.
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CB   1105           00053         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD, poniendo E=0.
00CC   1005           00054         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
00CD   2166           00055         call    Retardo_20ms
00CE   3030           00056         movlw   b'00110000'     
00CF   20DD           00057         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
00D0   216A           00058         call    Retardo_5ms     
00D1   3030           00059         movlw   b'00110000'     
00D2   20DD           00060         call    LCD_EscribeLCD
00D3   2153           00061         call    Retardo_200micros
00D4   3030           00062         movlw   b'00110000'     
00D5   20DD           00063         call    LCD_EscribeLCD
00D6   3020           00064         movlw   b'00100000'             ; Interface de 4 bits.
00D7   20DD           00065         call    LCD_EscribeLCD
                      00066 
                      00067 ; Ahora configura el resto de los parámetros: 
                      00068 
00D8   2106           00069         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
00D9   2104           00070         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
00DA   2102           00071         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
00DB   20F4           00072         call    LCD_CursorIncr          ; Cursor en modo incrementar.
00DC   0008           00073         return
                      00074 
                      00075 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00076 ;
                      00077 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el
                      00078 ; pin "Enable" del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B
                      00079 ; que no son utilizadas para el LCD (pines RB3.. RB0), primero se lee estas líneas y después
                      00080 ; se vuelve a enviar este dato sin cambiarlo.
                      00081 
00DD                  00082 LCD_EscribeLCD
00DD   39F0           00083         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
00DE   0092           00084         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
00DF   0806           00085         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
00E0   390F           00086         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
00E1   0492           00087         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00088                                         ; y en la parte baja lo que había antes.
00E2   1683           00089         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E3   0806           00090         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
00E4   0094           00091         movwf   LCD_GuardaTRISB
00E5   300F           00092         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
00E6   0586           00093         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
00E7   1283           00094         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00095 ;
00E8   0812           00096         movf    LCD_Dato,W              ; Recupera el dato a enviar.
00E9   0086           00097         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
00EA   1505           00098         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD, mediante un pequeño
00EB   1105           00099         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
00EC   1C05           00100         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
00ED   216C           00101         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
00EE   2158           00102         call    Retardo_50micros
00EF   1683           00103         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
00F0   0814           00104         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F1   0086           00105         movwf   PORTB                   ; Realmente es TRISB.
00F2   1283           00106         bcf     STATUS,RP0              ; Acceso al Banco 0.
00F3   0008           00107         return
                      00108 
                      00109 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00110 ;
                      00111 ;Los comandos que pueden ser ejecutados son:
                      00112 ;
00F4                  00113 LCD_CursorIncr                          ; Cursor en modo incrementar.
00F4   3006           00114         movlw   b'00000110'
00F5   2907           00115         goto    LCD_EnviaComando
00F6                  00116 LCD_Linea1                              ; Cursor al principio de la Línea 1.
00F6   3080           00117         movlw   b'10000000'             ; Dirección 00h de la DDRAM
00F7   2907           00118         goto    LCD_EnviaComando
00F8                  00119 LCD_Linea2                              ; Cursor al principio de la Línea 2.
00F8   30C0           00120         movlw   b'11000000'             ; Dirección 40h de la DDRAM
00F9   2907           00121         goto    LCD_EnviaComando
00FA                  00122 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
00FA   3880           00123         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
00FB   2907           00124         goto    LCD_EnviaComando        ; registro W.
00FC                  00125 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
00FC   38C0           00126         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
00FD   2907           00127         goto    LCD_EnviaComando        ; registro W.
00FE                  00128 LCD_OFF                         ; Pantalla apagada.
00FE   3008           00129         movlw   b'00001000'
00FF   2907           00130         goto    LCD_EnviaComando
0100                  00131 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
0100   300E           00132         movlw   b'00001110'
0101   2907           00133         goto    LCD_EnviaComando
0102                  00134 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
0102   300C           00135         movlw   b'00001100'
0103   2907           00136         goto    LCD_EnviaComando
0104                  00137 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
0104   3001           00138         movlw   b'00000001'             ; cursor a principio de la línea 1.
0105   2907           00139         goto    LCD_EnviaComando
0106                  00140 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
0106   3028           00141         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00142 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00143 
                      00144 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00145 ;
                      00146 ; "LCD_EnviaComando": Escribe un comando en el registro del módulo LCD. La palabra de
                      00147 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00148 ; "LCD_Caracter": Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00149 ; a través del registro W. Trabaja en Modo Dato.
                      00150 ;
0107                  00151 LCD_EnviaComando
0107   1005           00152         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
0108   290B           00153         goto    LCD_Envia
0109                  00154 LCD_Caracter
0109   1405           00155         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
010A   2110           00156         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
010B                  00157 LCD_Envia
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010B   0093           00158         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
010C   20DD           00159         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
010D   0E13           00160         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00161                                         ; nibble bajo del dato a enviar a parte alta del byte.
010E   20DD           00162         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
010F   0008           00163         return  
                      00164 
                      00165 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00166 ;
                      00167 ; A partir del carácter ASCII número 127, los códigos de los caracteres definidos en la
                      00168 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00169 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00170 ;
                      00171 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00172 ; que puedan ser visualizado en el módulo LM016L.
                      00173 ; 
                      00174 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00175 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00176 
0110                  00177 LCD_CodigoCGROM
0110   0092           00178         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
0111                  00179 LCD_EnheMinuscula                       ; un carácter especial.
0111   3CF1           00180         sublw   'ñ'                     ; ¿Es la "ñ"?
0112   1D03           00181         btfss   STATUS,Z
0113   2917           00182         goto    LCD_EnheMayuscula       ; No es "ñ".
0114   30EE           00183         movlw   b'11101110'             ; Código CGROM de la "ñ".
0115   0092           00184         movwf   LCD_Dato
0116   2924           00185         goto    LCD_FinCGROM
0117                  00186 LCD_EnheMayuscula
0117   0812           00187         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0118   3CD1           00188         sublw   'Ñ'                     ; ¿Es la "Ñ"?
0119   1D03           00189         btfss   STATUS,Z
011A   291E           00190         goto    LCD_Grado               ; No es "Ñ".
011B   30EE           00191         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
011C   0092           00192         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
011D   2924           00193         goto    LCD_FinCGROM    
011E                  00194 LCD_Grado
011E   0812           00195         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
011F   3CBA           00196         sublw   'º'                     ; ¿Es el símbolo "º"?
0120   1D03           00197         btfss   STATUS,Z
0121   2924           00198         goto    LCD_FinCGROM            ; No es "º".
0122   30DF           00199         movlw   b'11011111'             ; Código CGROM del símbolo "º".
0123   0092           00200         movwf   LCD_Dato
0124                  00201 LCD_FinCGROM
0124   0812           00202         movf    LCD_Dato,W              ; En (W) el código buscado.
0125   0008           00203         return
                      00204 
                      00205 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00206 ;
                      00207 ; Visualiza espacios en blanco.
                      00208 
0126                  00209 LCD_LineaEnBlanco
0126   3010           00210         movlw   LCD_CaracteresPorLinea
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0127   292D           00211         goto    LCD_EnviaBlancos
0128                  00212 LCD_UnEspacioBlanco
0128   3001           00213         movlw   .1
0129   292D           00214         goto    LCD_EnviaBlancos
012A                  00215 LCD_DosEspaciosBlancos
012A   3002           00216         movlw   .2
012B   292D           00217         goto    LCD_EnviaBlancos
012C                  00218 LCD_TresEspaciosBlancos
012C   3003           00219         movlw   .3
012D                  00220 LCD_EnviaBlancos
012D   0095           00221         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
012E                  00222 LCD_EnviaOtroBlanco     
012E   3020           00223         movlw   ' '                     ; Esto es un espacio en blanco.
012F   2109           00224         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
0130   0B95           00225         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
0131   292E           00226         goto    LCD_EnviaOtroBlanco
0132   0008           00227         return
                      00228 
                      00229 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00230 ;
                      00231 ; Subrutina "LCD_ByteCompleto": Visualiza el byte que almacena el registro W en el
                      00232 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00233 ;
                      00234 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero, 
                      00235 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00236 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00237 ;
                      00238 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00239 ;
0133                  00240 LCD_Byte
0133   0096           00241         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0134   39F0           00242         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
0135   1D03           00243         btfss   STATUS,Z                ; Si es cero lo apaga.
0136   293B           00244         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
0137   3020           00245         movlw   ' '                     ; Visualiza un espacio en blanco.
0138   2109           00246         call    LCD_Caracter
0139   293D           00247         goto    LCD_VisualizaBajo
                      00248 
013A                  00249 LCD_ByteCompleto
013A   0096           00250         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
013B                  00251 LCD_VisualizaAlto
013B   0E16           00252         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
013C   213E           00253         call    LCD_Nibble              ; Lo visualiza.
013D                  00254 LCD_VisualizaBajo
013D   0816           00255         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00256 ;       call    LCD_Nibble              ; Lo visualiza.
                      00257 ;       return
                      00258 
                      00259 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00260 ;
                      00261 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00262 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00263 ; - Si (W)=b'01010110', se visualizará "6". 
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00264 ; - Si (W)=b'10101110', se visualizará "E". 
                      00265 ;
013E                  00266 LCD_Nibble
013E   390F           00267         andlw   b'00001111'             ; Se queda con la parte baja.
013F   0095           00268         movwf   LCD_Auxiliar1           ; Lo guarda.
0140   3C09           00269         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
0141   1C03           00270         btfss   STATUS,C        
0142   2946           00271         goto    LCD_EnviaByteLetra
0143   0815           00272         movf    LCD_Auxiliar1,W
0144   3E30           00273         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
0145   2948           00274         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
0146                  00275 LCD_EnviaByteLetra
0146   0815           00276         movf    LCD_Auxiliar1,W
0147   3E37           00277         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
0148                  00278 LCD_FinVisualizaDigito
0148   2909           00279         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00280                                         ; para no sobrecargar la pila.
                      00192         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000017            00021         R_ContA                         ; Contadores para los retardos.
  00000018            00022         R_ContB
  00000019            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
0149                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
0149   0000           00033         nop                             ; Aporta 1 ciclo máquina.
014A   0000           00034         nop                             ; Aporta 1 ciclo máquina.
014B   0000           00035         nop                             ; Aporta 1 ciclo máquina.
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

014C   0000           00036         nop                             ; Aporta 1 ciclo máquina.
014D   0000           00037         nop                             ; Aporta 1 ciclo máquina.
014E                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
014E   0000           00039         nop                             ; Aporta 1 ciclo máquina.
014F                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
014F   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
0150                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0150   0000           00046         nop                             ; Aporta 1 ciclo máquina.
0151   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
0152   295C           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0153                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
0153   0000           00050         nop                             ; Aporta 1 ciclo máquina.
0154   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0155   295C           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0156                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
0156   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0157   295C           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0158                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
0158   0000           00057         nop                             ; Aporta 1 ciclo máquina.
0159   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
015A   295C           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
015B                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
015B   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
015C                  00066 RetardoMicros
015C   0097           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
015D                  00068 Rmicros_Bucle
015D   0B97           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
015E   295D           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
015F   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
0160                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
0160   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0161   296F           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0162                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
0162   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0163   296F           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0164                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0164   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
0165   296F           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0166                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
0166   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
0167   296F           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0168                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
0168   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
0169   296F           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
016A                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
016A   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
016B   296F           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
016C                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
016C   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
016D   296F           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
016E                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
016E   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
016F                  00111 Retardos_ms
016F   0098           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
0170                  00113 R1ms_BucleExterno
0170   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
0171   0097           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
0172                  00116 R1ms_BucleInterno
0172   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
0173   0B97           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
0174   2972           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
0175   0B98           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0176   2970           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
0177   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
0178                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
0178   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
0179   2983           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
017A                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
017A   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
017B   2983           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017C                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
017C   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
017D   2983           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
017E                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
017E   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
017F   2983           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0180                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
0180   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0181   2983           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0182                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
0182   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
0183                  00160 Retardo_1Decima
0183   0099           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
0184                  00162 R1Decima_BucleExterno2
0184   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
0185   0098           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
0186                  00165 R1Decima_BucleExterno
0186   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
0187   0097           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
0188                  00168 R1Decima_BucleInterno          
0188   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
0189   0B97           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
018A   2988           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
018B   0B98           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
018C   2986           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
018D   0B99           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
018E   2984           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
018F   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00193         END
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

ApuntadorFrecuencia               0000000C
C                                 00000000
CargaContador                     00000005
CargaMensaje                      0000000E
DC                                00000001
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
EsperaDejePulsar                  0000008E
EstabaAlto                        0000009B
EstabaBajo                        00000099
EstadoInicial                     00000083
F                                 00000001
FSR                               00000004
Fin_PulsadorInterrupcion          00000090
Fin_Timer0_Interrupcion           0000009C
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000068
LCD_2Lineas4Bits5x7               00000106
LCD_ApuntaCaracter                0000000F
LCD_Auxiliar1                     00000015
LCD_Auxiliar2                     00000016
LCD_Borra                         00000104
LCD_BusDatos                      PORTB
LCD_Byte                          00000133
LCD_ByteCompleto                  0000013A
LCD_Caracter                      00000109
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   00000110
LCD_CursorIncr                    000000F4
LCD_CursorOFF                     00000102
LCD_CursorON                      00000100
LCD_CursorPosicion                00000011
LCD_Dato                          00000012
LCD_DosEspaciosBlancos            0000012A
LCD_EnheMayuscula                 00000117
LCD_EnheMinuscula                 00000111
LCD_Envia                         0000010B
LCD_EnviaBlancos                  0000012D
LCD_EnviaByteLetra                00000146
LCD_EnviaComando                  00000107
LCD_EnviaOtroBlanco               0000012E
LCD_EsFinalLinea                  000000B5
LCD_EscribeLCD                    000000DD
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

LCD_FinCGROM                      00000124
LCD_FinMensaje                    000000AA
LCD_FinMovimiento                 000000C4
LCD_FinVisualizaDigito            00000148
LCD_Grado                         0000011E
LCD_GuardaDato                    00000013
LCD_GuardaTRISB                   00000014
LCD_Inicializa                    000000C5
LCD_Linea1                        000000F6
LCD_Linea2                        000000F8
LCD_LineaEnBlanco                 00000126
LCD_Mensaje                       0000009D
LCD_MensajeMovimiento             000000AB
LCD_Nibble                        0000013E
LCD_NoEsFinalLinea                000000BA
LCD_NoUltimoCaracter              000000A7
LCD_NoUltimoCaracter2             000000C0
LCD_OFF                           000000FE
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                000000FA
LCD_PosicionLinea2                000000FC
LCD_PrimeraPosicion               000000AF
LCD_TresEspaciosBlancos           0000012C
LCD_UnEspacioBlanco               00000128
LCD_ValorCaracter                 00000010
LCD_VisualizaAlto                 0000013B
LCD_VisualizaBajo                 0000013D
LCD_VisualizaCaracter             000000B1
LCD_VisualizaOtroCaracter         000000A1
Mensaje100Hz                      00000056
Mensaje10kHz                      00000020
Mensaje1kHz                       0000003B
Mensaje200Hz                      0000004D
Mensaje2kHz                       00000032
Mensaje500Hz                      00000044
Mensaje50Hz                       0000005F
Mensaje5kHz                       00000029
MensajeFrecuencia                 00000018
Mensajes                          00000017
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
NumeroFrec                        00000008
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

PSA                               00000003
Principal                         00000074
Pulsador                          PORTB,7
Pulsador_Interrupcion             0000007C
R1Decima_BucleExterno             00000186
R1Decima_BucleExterno2            00000184
R1Decima_BucleInterno             00000188
R1ms_BucleExterno                 00000170
R1ms_BucleInterno                 00000172
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           00000017
R_ContB                           00000018
R_ContC                           00000019
RetardoMicros                     0000015C
Retardo_100micros                 00000156
Retardo_100ms                     00000162
Retardo_10micros                  00000149
Retardo_10ms                      00000168
Retardo_10s                       0000017A
Retardo_1Decima                   00000183
Retardo_1ms                       0000016E
Retardo_1s                        00000180
Retardo_200micros                 00000153
Retardo_200ms                     00000160
Retardo_20micros                  0000015B
Retardo_20ms                      00000166
Retardo_20s                       00000178
Retardo_2ms                       0000016C
Retardo_2s                        0000017E
Retardo_4micros                   0000014F
Retardo_500micros                 00000150
Retardo_500ms                     00000182
Retardo_50micros                  00000158
Retardo_50ms                      00000164
Retardo_5micros                   0000014E
Retardo_5ms                       0000016A
Retardo_5s                        0000017C
Retardos_ms                       0000016F
Rmicros_Bucle                     0000015D
STATUS                            00000003
Salida                            PORTB,3
Semiperiodo                       0000000D
ServicioInterrupcion              00000075
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TMR0_Carga50us                    FFFFFFD6
MPASM 03.50 Released                     INT_CUADRADAS_01.ASM   10-9-2003  11:32:52         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

TRISA                             00000085
TRISB                             00000086
Timer0_ContadorA                  0000000E
Timer0_Interrupcion               00000091
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   397
Program Memory Words Free:   627


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     2 reported,     0 suppressed

