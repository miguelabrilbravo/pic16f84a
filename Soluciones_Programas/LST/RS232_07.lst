MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;************************************ RS232_07.asm **************************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; En el monitor del ordenador se visualizan mensajes grabados en la memoria de programa del
                      00010 ; microcontrolador. El cambio de mensaje se ejecuta cada vez que se pulse la tecla "Enter".
                      00011 
                      00012 ; ZONA DE DATOS **********************************************************************
                      00013 
2007   3FF1           00014         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00015         LIST       P=16F84A
                      00016         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00017 
                      00018         CBLOCK  0x0C
                      00019         ENDC
                      00020 
  0000000D            00021 RetornoCarro    EQU     .13             ; Código de tecla "Enter" o "Retorno de Carro".
  0000000A            00022 CambioLinea     EQU     .10             ; Código para el cambio de línea.
                      00023 
                      00024 ; ZONA DE CÓDIGOS ********************************************************************
                      00025 
0000                  00026         ORG     0
0000   28F2           00027         goto    Inicio
                      00028 
0001                  00029 Mensajes                                ; Los mensajes se ponen al principio para no
0001   0782           00030         addwf   PCL,F                   ; superar la posición 0xFF de memoria de programa.
0002                  00031 Mensaje0
0002   3420 3420 3420 00032         DT "   ¿Quieres trabajar en dos años?."
       34BF 3451 3475 
       3469 3465 3472 
       3465 3473 3420 
       3474 3472 3461 
       3462 3461 346A 
       3461 3472 3420 
       3465 346E 3420 
       3464 346F 3473 
       3420 3461 34F1 
       346F 3473 343F 
       342E 
0024   340D 340A      00033         DT RetornoCarro, CambioLinea
0026   34BF 3451 3475 00034         DT "¿Quieres aprender hacer estos mensajes?",0x00
       3469 3465 3472 
       3465 3473 3420 
       3461 3470 3472 
       3465 346E 3464 
       3465 3472 3420 
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3468 3461 3463 
       3465 3472 3420 
       3465 3473 3474 
       346F 3473 3420 
       346D 3465 346E 
       3473 3461 346A 
       3465 3473 343F 
       3400 
004E                  00035 Mensaje1
004E   3420 3420 34A1 00036         DT "  ¡Pues estudia CICLOS FORMATIVOS!.",0x00
       3450 3475 3465 
       3473 3420 3465 
       3473 3474 3475 
       3464 3469 3461 
       3420 3443 3449 
       3443 344C 344F 
       3453 3420 3446 
       344F 3452 344D 
       3441 3454 3449 
       3456 344F 3453 
       3421 342E 3400 
0072                  00037 Mensaje2
0072   3445 346E 3420 00038         DT "En el I.E.S. ISAAC PERAL de Torrejon de Ardoz"
       3465 346C 3420 
       3449 342E 3445 
       342E 3453 342E 
       3420 3449 3453 
       3441 3441 3443 
       3420 3450 3445 
       3452 3441 344C 
       3420 3464 3465 
       3420 3454 346F 
       3472 3472 3465 
       346A 346F 346E 
       3420 3464 3465 
       3420 3441 3472 
       3464 346F 347A 
009F   340D 340A      00039         DT RetornoCarro, CambioLinea
00A1   3420 3420 3473 00040         DT "  se puede estudiar el Ciclo Formativo "
       3465 3420 3470 
       3475 3465 3464 
       3465 3420 3465 
       3473 3474 3475 
       3464 3469 3461 
       3472 3420 3465 
       346C 3420 3443 
       3469 3463 346C 
       346F 3420 3446 
       346F 3472 346D 
       3461 3474 3469 
       3476 346F 3420 
00C8   340D 340A      00041         DT RetornoCarro, CambioLinea
00CA   3420 3420 3444 00042         DT "  DESARROLLO de PRODUCTOS ELECTRONICOS.", 0x00
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3445 3453 3441 
       3452 3452 344F 
       344C 344C 344F 
       3420 3464 3465 
       3420 3450 3452 
       344F 3444 3455 
       3443 3454 344F 
       3453 3420 3445 
       344C 3445 3443 
       3454 3452 344F 
       344E 3449 3443 
       344F 3453 342E 
       3400 
00F2                  00043 FinMensajes
                      00044         IF (FinMensajes > 0xFF)
                      00045                 ERROR   "ATENCION: La tabla ha superado el tamaño de la página de los"
                      00046                 MESSG   "primeros 255 bytes de memoria ROM. NO funcionará correctamente."
                      00047         ENDIF
                      00048 
00F2                  00049 Inicio
00F2   211A           00050         call    RS232_Inicializa
00F3   2111           00051         call    RS232_LineasBlanco      ; Visualiza unas cuantas líneas en blanco.
00F4                  00052 Principal
00F4   3002           00053         movlw   Mensaje0                ; Carga la primera posición del mensaje.
00F5   20FB           00054         call    Visualiza_y_Espera      ; Lo visualiza en el ordenador y espera
00F6   304E           00055         movlw   Mensaje1                ; pulse "Enter".
00F7   20FB           00056         call    Visualiza_y_Espera
00F8   3072           00057         movlw   Mensaje2        
00F9   20FB           00058         call    Visualiza_y_Espera
00FA   28F4           00059         goto    Principal
                      00060         
00FB                  00061 Visualiza_y_Espera
00FB   2103           00062         call    RS232_Mensaje           ; Lo visualiza en el ordenador.
00FC   2111           00063         call    RS232_LineasBlanco      ; Visualiza unas líneas en blanco.
00FD                  00064 EsperaPulseEnter
00FD   211F           00065         call    RS232_LeeDato           ; Lee el teclado del ordenador.
00FE   3A0D           00066         xorlw   RetornoCarro            ; Si no ha pulsado el "Enter" vuelve a 
00FF   1D03           00067         btfss   STATUS,Z                ; leer de nuevo
0100   28FD           00068         goto    EsperaPulseEnter
0101   2111           00069         call    RS232_LineasBlanco      ; Líneas en blanco al principio del próximo mensaje.
0102   0008           00070         return
                      00071 
                      00072         INCLUDE  <RS232MEN.INC>
                      00001 ;***************************** Librería "RS232MEN.INC" **********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten transmitir mensajes desde el microcontrolador hacia el 
                      00010 ; ordenador a través del puerto serie RS232.
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00011 ;
                      00012 ; Subrutina "RS232_Mensaje" -------------------------------------------------------------
                      00013 ;
                      00014 ; Envía por el puerto serie el mensaje apuntado por el registro W y grabado en memoria
                      00015 ; de programa del PIC. El mensaje se visualizará en el monitor del ordenador. Esta
                      00016 ; subrutina sigue la estructura de funcionamiento similar a la ya conocida "LCD_Mensaje"
                      00017 ; para visualización de mensajes en pantallas de  modulos LCD.
                      00018 ;
                      00019         CBLOCK
  0000000C            00020         RS232_ApuntaCaracter            ; Apunta al carácter a visualizar.
  0000000D            00021         RS232_ValorCaracter             ; Valor ASCII del carácter a visualizar.
                      00022         ENDC
                      00023 
0103                  00024 RS232_Mensaje
0103   008C           00025         movwf   RS232_ApuntaCaracter    ; Posición del primer carácter del mensaje.
0104   3001           00026         movlw   Mensajes                        ; Halla la posición relativa del primer carácter
0105   028C           00027         subwf   RS232_ApuntaCaracter,F  ; del mensaje respecto del comienzo de todos los
                      00028                                         ; mensajes (identificados mediante la etiqueta
                      00029                                         ; "Mensajes")
0106   038C           00030         decf    RS232_ApuntaCaracter,F  ; Para compensar la posición que ocupa la 
0107                  00031 RS232_VisualizaOtroCaracter                     ; instrucción "addwf PCL,F".
0107   080C           00032         movf    RS232_ApuntaCaracter,W  ; Apunta al carácter a visualizar.
0108   2001           00033         call    Mensajes                        ; Obtiene el código ASCII del carácter apuntado.
0109   008D           00034         movwf   RS232_ValorCaracter     ; Guarda el valor de carácter.
010A   088D           00035         movf    RS232_ValorCaracter,F   ; Lo único que hace es posicionar flag Z. En caso
010B   1903           00036         btfsc   STATUS,Z                ; que sea "0x00", que es código indicador final 
010C   2910           00037         goto    RS232_FinMensaje                ; de mensaje, sale fuera.
010D                  00038 RS232_NoUltimoCaracter
010D   2130           00039         call    RS232_EnviaDato         ; Visualiza el carácter ASCII leído.
010E   0A8C           00040         incf    RS232_ApuntaCaracter,F  ; Apunta a la posición del siguiente carácter
010F   2907           00041         goto    RS232_VisualizaOtroCaracter     ; dentro del mensaje.
0110                  00042 RS232_FinMensaje
0110   0008           00043         return
                      00044 
                      00045 ; Subrutina "RS232_LineasBlanco" ------------------------------------------------
                      00046 ;
                      00047 ; Visualiza unas cuantas líneas en blanco en el monitor del ordenador.
                      00048 
                      00049         CBLOCK
  0000000E            00050         RS232_ContadorLineas
                      00051         ENDC
                      00052 
0111                  00053 RS232_LineasBlanco
0111   300A           00054         movlw   d'10'                   ; Por ejemplo este número de líneas en
0112   008E           00055         movwf   RS232_ContadorLineas    ; blanco.
0113                  00056 R232_LineasBlancoLazo
0113   300A           00057         movlw   .10                     ; Código del salto de línea
0114   2130           00058         call    RS232_EnviaDato
0115   0B8E           00059         decfsz  RS232_ContadorLineas,F
0116   2913           00060         goto    R232_LineasBlancoLazo
0117   300D           00061         movlw   .13                     ; Código del retorno de carro.
0118   2130           00062         call    RS232_EnviaDato         ; Finaliza con un retorno de carro.
0119   0008           00063         return
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00064         
                      00065 ;       ===================================================================
                      00066 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00067 ;         E. Palacios, F. Remiro y L. López.
                      00068 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00069 ;       ===================================================================
                      00073         INCLUDE  <RS232.INC>
                      00001 ;***************************** Librería "RS232.INC" *************************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de la transmisión
                      00010 ; seríe asincrona según normas RS-232.
                      00011 ;
                      00012 ; Los parámetros adoptados para la comunicación son los siguientes:
                      00013 ; - Velocidad de transmisión de 9600 baudios. La duración de cada bit será 104 µs.
                      00014 ; - Un bit de inicio ó Start a nivel bajo.
                      00015 ; - Dato de 8 bits.
                      00016 ; - Sin paridad.
                      00017 ; - Dos bits de final ó Stop a nivel alto.
                      00018 ;
                      00019 ; El tiempo entre bit y bit  debe coincidir con el período de la señal leída o enviada.
                      00020 ; Como la velocidad de transmisión ó recepción es de 9600 baudios, el período será:
                      00021 ; 1/9600Baudios= 104 µs. Se utilizará pues la subrutina "Retardos_100micros".
                      00022 
                      00023         CBLOCK
  0000000F            00024         RS232_ContadorBits
  00000010            00025         RS232_Dato
                      00026         ENDC
                      00027 
                      00028 #DEFINE  RS232_Entrada  PORTA,3         ; Línea por la que se reciben los datos.
                      00029 #DEFINE  RS232_Salida   PORTA,4         ; Línea por la que se envían los datos.
                      00030 ;
                      00031 ; Subrutina "RS232_Inicializa" -------------------------------------------------------------
                      00032 ;
                      00033 ; Configura las líneas de salida y entrada del microcontrolador.
                      00034 
011A                  00035 RS232_Inicializa
011A   1683           00036         bsf     STATUS,RP0
011B   1585           00037         bsf     RS232_Entrada           ; Esta línea se configura como entrada.
011C   1205           00038         bcf     RS232_Salida            ; Esta línea se configura como salida.
011D   1283           00039         bcf     STATUS,RP0
011E   0008           00040         return
                      00041 
                      00042 ; Subrutina "RS232_LeeDato" -------------------------------------------------------------
                      00043 ;
                      00044 ; El microcontrolador lee el dato por la línea de entrada comenzando por el bit de menor
                      00045 ; peso. El dato leído se envía finalmente en el registro de trabajo W.
                      00046 ;
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00047 ; El ordenador parte siempre de un nivel alto, que es el estado que tiene cuando no 
                      00048 ; envía información. La secuencia utilizada es:
                      00049 ; 1º    Espera que se ejecute el pulso negativo del bit Start, o flanco de bajada.
                      00050 ; 2º    Deja pasar un tiempo una y media veces mayor que el periodo de transmisión para
                      00051 ;       saltarse el bit de Start y lee el primer bit en su mitad.
                      00052 ; 3º    Lee el resto de los bits de datos, esperando un tiempo igual a la duración del
                      00053 ;       período entre lectura y lectura para testearlos en mitad del bit.
                      00054 ;
                      00055 ; Salida: En el registro de trabajo W el byte leído.
                      00056 
011F                  00057 RS232_LeeDato
011F   3008           00058         movlw   d'8'                    ; Número de bits a recibir.
0120   008F           00059         movwf   RS232_ContadorBits
0121                  00060 RS232_EsperaBitStart
0121   1985           00061         btfsc   RS232_Entrada           ; Lee la entrada y espera a que sea "0".
0122   2921           00062         goto    RS232_EsperaBitStart    ; No, pues espera el nivel bajo.
0123   214E           00063         call    Retardo_100micros               ; El primer bit debe leerlo un tiempo igual a una
0124   2150           00064         call    Retardo_50micros                ; vez y media el periodo de transmisión.
0125                  00065 RS232_LeeBit
0125   1003           00066         bcf     STATUS,C                ; Ahora lee el pin. En principio supone que es 0.
0126   1985           00067         btfsc   RS232_Entrada           ; ¿Realmente es cero?.
0127   1403           00068         bsf     STATUS,C                ; No, pues cambia a uno.
0128   0C90           00069         rrf     RS232_Dato,F            ; Introduce el bit en el registro de lectura.
0129   214E           00070         call    Retardo_100micros               ; Los siguientes bits los lee un período más tarde.
012A   0B8F           00071         decfsz  RS232_ContadorBits,F    ; Comprueba que es el último bit.
012B   2925           00072         goto    RS232_LeeBit            ; Si no es el último bit, pasa a leer el siguiente.
012C   214B           00073         call    Retardo_200micros               ; Espera un tiempo igual al los 2 bits de "Stop".
012D   0810           00074         movf    RS232_Dato,W            ; El resultado en el registro W.
012E   0008           00075         return  
                      00076 
                      00077 ; Subrutinas "RS232_EnviaDato" y "RS232_EnviaNúmero" -------------------------------------
                      00078 ;
                      00079 ; El microcontrolador envía un dato por la línea de salida comenzando por el bit de menor
                      00080 ; peso. En dato enviado será el que le llegue a través del registro de trabajo W.
                      00081 ; 1º.   Envía un "0" durante un tiempo igual al período de la velocidad de transmisión.
                      00082 ;       Este es el bit de "Start".
                      00083 ; 2º.   Envía el bit correspondiente:
                      00084 ;       - Si va a enviar un "0" permanece en bajo durante el período correspondiente.
                      00085 ;       - Si va a escribir un "1" permanece en alto durante el período correspondiente.
                      00086 ; 3º.   Envía dos bits "1" durante un tiempo igual al período de la velocidad de 
                      00087 ;       transmisión cada uno. Estos son los dos bits de "Stop".
                      00088 ;
                      00089 ; Entrada:      En (W) el dato a enviar.
                      00090 
012F                  00091 RS232_EnviaNumero                       ; Envía el código ASCII de un número.
012F   3E30           00092         addlw   '0'                     ; Lo pasa a código ASCII sumándole el ASCII del 0.
0130                  00093 RS232_EnviaDato
0130   0090           00094         movwf   RS232_Dato              ; Guarda el contenido del byte a transmitir.
0131   3008           00095         movlw   d'8'                    ; Este es el número de bits a transmitir.
0132   008F           00096         movwf   RS232_ContadorBits
0133   1205           00097         bcf     RS232_Salida            ; Bit de Start.
0134   214E           00098         call    Retardo_100micros
0135                  00099 RS232_EnviaBit                          ; Comienza a enviar datos.
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0135   0C90           00100         rrf     RS232_Dato,F            ; Lleva el bit que se quiere enviar al Carry para
0136   1C03           00101         btfss   STATUS,C                ; deducir su valor. ¿Es un "1" el bit a transmitir?.
0137   293A           00102         goto    RS232_EnviaCero         ; No, pues envía un "0".
0138                  00103 RS232_EnviaUno
0138   1605           00104         bsf     RS232_Salida            ; Transmite un "1".
0139   293B           00105         goto    RS232_FinEnviaBit
013A                  00106 RS232_EnviaCero
013A   1205           00107         bcf     RS232_Salida            ; Transmite un "0".
013B                  00108 RS232_FinEnviaBit
013B   214E           00109         call    Retardo_100micros               ; Este es el tiempo que estará en alto o bajo.
013C   0B8F           00110         decfsz  RS232_ContadorBits,F    ; Comprueba que es el último bit.
013D   2935           00111         goto    RS232_EnviaBit          ; Como no es el último bit repite la operación.
013E   1605           00112         bsf     RS232_Salida            ; Envía dos bits de Stop.
013F   214B           00113         call    Retardo_200micros
0140   0008           00114         return
                      00115         
                      00116 ;       ===================================================================
                      00117 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00118 ;         E. Palacios, F. Remiro y L. López.
                      00119 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00120 ;       ===================================================================
                      00074         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000011            00021         R_ContA                         ; Contadores para los retardos.
  00000012            00022         R_ContB
  00000013            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0141                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
0141   0000           00033         nop                             ; Aporta 1 ciclo máquina.
0142   0000           00034         nop                             ; Aporta 1 ciclo máquina.
0143   0000           00035         nop                             ; Aporta 1 ciclo máquina.
0144   0000           00036         nop                             ; Aporta 1 ciclo máquina.
0145   0000           00037         nop                             ; Aporta 1 ciclo máquina.
0146                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
0146   0000           00039         nop                             ; Aporta 1 ciclo máquina.
0147                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
0147   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
0148                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
0148   0000           00046         nop                             ; Aporta 1 ciclo máquina.
0149   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
014A   2954           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
014B                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
014B   0000           00050         nop                             ; Aporta 1 ciclo máquina.
014C   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
014D   2954           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
014E                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
014E   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
014F   2954           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0150                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
0150   0000           00057         nop                             ; Aporta 1 ciclo máquina.
0151   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
0152   2954           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
0153                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
0153   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
0154                  00066 RetardoMicros
0154   0091           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
0155                  00068 Rmicros_Bucle
0155   0B91           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0156   2955           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
0157   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
0158                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
0158   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
0159   2967           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015A                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
015A   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
015B   2967           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
015C                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
015C   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
015D   2967           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
015E                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
015E   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
015F   2967           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0160                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
0160   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
0161   2967           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0162                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
0162   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0163   2967           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0164                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
0164   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
0165   2967           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
0166                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
0166   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
0167                  00111 Retardos_ms
0167   0092           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
0168                  00113 R1ms_BucleExterno
0168   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
0169   0091           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
016A                  00116 R1ms_BucleInterno
016A   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
016B   0B91           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
016C   296A           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
016D   0B92           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
016E   2968           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
016F   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
0170                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
0170   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0171   297B           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0172                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
0172   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
0173   297B           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0174                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
0174   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0175   297B           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0176                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
0176   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0177   297B           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
0178                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
0178   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
0179   297B           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
017A                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
017A   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
017B                  00160 Retardo_1Decima
017B   0093           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
017C                  00162 R1Decima_BucleExterno2
017C   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
017D   0092           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
017E                  00165 R1Decima_BucleExterno
017E   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
017F   0091           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
0180                  00168 R1Decima_BucleInterno          
0180   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
0181   0B91           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
0182   2980           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
0183   0B92           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
0184   297E           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
0185   0B93           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0186   297C           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
0187   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00075         END
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
CambioLinea                       0000000A
DC                                00000001
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
EsperaPulseEnter                  000000FD
F                                 00000001
FSR                               00000004
FinMensajes                       000000F2
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            000000F2
Mensaje0                          00000002
Mensaje1                          0000004E
Mensaje2                          00000072
Mensajes                          00000001
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Principal                         000000F4
R1Decima_BucleExterno             0000017E
R1Decima_BucleExterno2            0000017C
R1Decima_BucleInterno             00000180
R1ms_BucleExterno                 00000168
R1ms_BucleInterno                 0000016A
R232_LineasBlancoLazo             00000113
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
RS232_ApuntaCaracter              0000000C
RS232_ContadorBits                0000000F
RS232_ContadorLineas              0000000E
RS232_Dato                        00000010
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

RS232_Entrada                     PORTA,3
RS232_EnviaBit                    00000135
RS232_EnviaCero                   0000013A
RS232_EnviaDato                   00000130
RS232_EnviaNumero                 0000012F
RS232_EnviaUno                    00000138
RS232_EsperaBitStart              00000121
RS232_FinEnviaBit                 0000013B
RS232_FinMensaje                  00000110
RS232_Inicializa                  0000011A
RS232_LeeBit                      00000125
RS232_LeeDato                     0000011F
RS232_LineasBlanco                00000111
RS232_Mensaje                     00000103
RS232_NoUltimoCaracter            0000010D
RS232_Salida                      PORTA,4
RS232_ValorCaracter               0000000D
RS232_VisualizaOtroCaracter       00000107
R_ContA                           00000011
R_ContB                           00000012
R_ContC                           00000013
RetardoMicros                     00000154
Retardo_100micros                 0000014E
Retardo_100ms                     0000015A
Retardo_10micros                  00000141
Retardo_10ms                      00000160
Retardo_10s                       00000172
Retardo_1Decima                   0000017B
Retardo_1ms                       00000166
Retardo_1s                        00000178
Retardo_200micros                 0000014B
Retardo_200ms                     00000158
Retardo_20micros                  00000153
Retardo_20ms                      0000015E
Retardo_20s                       00000170
Retardo_2ms                       00000164
Retardo_2s                        00000176
Retardo_4micros                   00000147
Retardo_500micros                 00000148
Retardo_500ms                     0000017A
Retardo_50micros                  00000150
Retardo_50ms                      0000015C
Retardo_5micros                   00000146
Retardo_5ms                       00000162
Retardo_5s                        00000174
Retardos_ms                       00000167
RetornoCarro                      0000000D
Rmicros_Bucle                     00000155
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
MPASM 03.50 Released                             RS232_07.ASM   10-12-2000  20:02:26         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
Visualiza_y_Espera                000000FB
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXX-------- ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   392
Program Memory Words Free:   632


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

