MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;********************************* I2C_Teclado_01.asm ************************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Programa para comprobar el funcionamiento y control de un teclado hexadecimal conectado a un
                      00010 ; bus I2C a través de un expansor PCF8574 tal como se indica en el esquema correspondiente.
                      00011 ; El módulo LCD visualiza el valor hexadecimal de la tecla pulsada.
                      00012 ; 
                      00013 ; ZONA DE DATOS **********************************************************************
                      00014 
2007   3FF1           00015         __CONFIG   _CP_OFF &  _WDT_OFF & _PWRTE_ON & _XT_OSC
                      00016         LIST       P=16F84A
                      00017         INCLUDE  <P16F84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00018 
                      00019         CBLOCK  0x0C
                      00020         ENDC
                      00021 
                      00022 #DEFINE  Zumbador       PORTB,2         ; Aquí se conecta el zumbador.
                      00023 
                      00024 ; ZONA DE CÓDIGOS ********************************************************************
                      00025 
0000                  00026         ORG     0
0000   2805           00027         goto    Inicio
0004                  00028         ORG     4       
0004   280F           00029         goto    ServicioInterrupcion
0005                  00030 Inicio
0005   2100           00031         call    LCD_Inicializa
0006   1683           00032         bsf     STATUS,RP0              ; Acceso Banco 1.
0007   1106           00033         bcf     Zumbador                ; La línea del zumbador se define como salida.
0008   1283           00034         bcf     STATUS,RP0              ; Acceso Banco 0.
0009   2015           00035         call    PitidoCorto             ; Pitido al conectarlo.
000A   2030           00036         call    Teclado_Inicializa              ; Prepara al PCF8574 para interrumpir.
000B   3090           00037         movlw   b'10010000'             ; Habilita la interrupción INT y la general.
000C   008B           00038         movwf   INTCON
000D                  00039 Principal
000D   0063           00040         sleep                           ; Pasa a modo de bajo consumo.
000E   280D           00041         goto    Principal
                      00042 
                      00043 ; Subrutina "ServicioInterrupcion" ------------------------------------------------------
                      00044 ;
                      00045 ; Lee el teclado conectado al PCF8574 y el resultado se visualiza en la pantalla.
                      00046 
000F                  00047 ServicioInterrupcion
000F   2019           00048         call    Teclado_LeeHex          ; Obtiene el valor hex. de la tecla pulsada.
0010   2179           00049         call    LCD_Nibble              ; Sí, ha pulsado. Visualiza el valor en la
0011   2015           00050         call    PitidoCorto             ; pantalla y suena un pitido en el zumbador.
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0012   2035           00051         call    Teclado_EsperaDejePulsar        ; Para que no se repita el mismo carácter.
0013   108B           00052         bcf     INTCON,INTF
0014   0009           00053         retfie
                      00054 
                      00055 ; Subrutina "PitidoCorto" ---------------------------------------------------------------
                      00056 ;
0015                  00057 PitidoCorto
0015   1506           00058         bsf     Zumbador
0016   20D6           00059         call    Retardo_20ms
0017   1106           00060         bcf     Zumbador
0018   0008           00061         return
                      00062 
                      00063         INCLUDE  <PCF8574_Teclado.INC>
                      00001 ;*************************** Librería "PCF8574_Teclado.INC" ***************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para la gestión de un teclado organizado en una matriz de 4 x 4 y
                      00010 ; conectado a un bus I2C a través de un PCF8574 tal como se muestra en el esquema.
                      00011 ; El teclado está conectado al puerto del expansor PCF8574, siendo su disposición:
                      00012 ;
                      00013 ;                 P4  P5  P6  P7
                      00014 ;                  ^    ^    ^    ^
                      00015 ;               |     |     |     |     |
                      00016 ;               |----|----|----|----|
                      00017 ;       P0 -->  |  0 |  1 |  2 |  3 |
                      00018 ;               |----|----|----|----|
                      00019 ;       P1 -->  |  4 |  5 |  6 |  7 |
                      00020 ;               |----|----|----|----|
                      00021 ;       P2 -->  |  8 |  9 | 10| 11|
                      00022 ;               |----|----|----|----|
                      00023 ;       P3 -->  | 12| 13| 14| 15|
                      00024 ;               |----|----|----|----|
                      00025 ;
                      00026 ; El número que se indica dentro de cada cuadrado es el número de orden de la tecla que no
                      00027 ; tiene por qué coincidir con lo serigrafiado sobre ella. El número de orden de la tecla
                      00028 ; se convierte al valor serigrafiado mediante una tabla de conversión.
                      00029 ;
                      00030 ; ZONA DE DATOS **********************************************************************
                      00031 ;
                      00032         CBLOCK
  0000000C            00033         Tecl_TeclaOrden                 ; Orden de la tecla a chequear.
                      00034         ENDC
                      00035 
  00000041            00036 PCF8574_DireccionLectura        EQU     b'01000001'
  00000040            00037 PCF8574_DireccionEscritura      EQU     b'01000000'
                      00038 
  00000010            00039 Tecl_NumeroTeclas       EQU     d'16'           ; Número de pulsadores del teclado.
                      00040 
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00041 #DEFINE  PCF8574_INT    PORTB,0         ; Línea donde se conecta la línea de 
                      00042                                         ; interrupción del expansor de bus I2C.
                      00043 ; Subrutina "Teclado_LeeHex" ------------------------------------------------------------
                      00044 ;
                      00045 ; A cada tecla se le asigna un número de orden que se va contabilizando en la variable
                      00046 ; Tecl_TeclaOrden. Para convertir a su valor cada tipo de teclado se utiliza una tabla de
                      00047 ; conversión. 
                      00048 ;
                      00049 ; A continuación se expone la relación entre el número de orden de la tecla y los valores
                      00050 ; correspondientes para el teclado hexadecimal más utilizado.
                      00051 ;
                      00052 ;               ORDEN DE TECLA:            TECLADO HEX. UTILIZADO:
                      00053 ;                0   1   2   3                  1  2  3  F
                      00054 ;                4   5   6   7                  4  5  6  E
                      00055 ;                8   9  10  11                  7  8  9  D
                      00056 ;               12  13  14  15                  A  0  B  C
                      00057 ;
                      00058 ; En este ejemplo, la tecla "7" ocupa el orden 8, la tecla "F" ocupa el orden 3 y la tecla
                      00059 ; "9" el orden 10.
                      00060 
                      00061 ; En teclados con otra serigrafía basta con cambiar de tabla de conversión.
                      00062 ;
                      00063 ; Entrada:      En (W) el orden de la tecla pulsada.
                      00064 ; Salida:       En (W) el valor hexadecimal para este teclado concreto.
                      00065 ;
0019                  00066 Teclado_LeeHex
0019   203D           00067         call    Teclado_LeeOrdenTecla   ; Lee el Orden de la tecla pulsada
001A   1C03           00068         btfss   STATUS,C                ; ¿Pulsa alguna tecla?, ¿C=1?
001B   281E           00069         goto    Tecl_FinLeeHex          ; No, por tanto sale.
001C   201F           00070         call    Tecl_ConvierteOrdenEnHex        ; Lo convierte en su valor real mediante tabla.
001D   1403           00071         bsf     STATUS,C                ; Vuelve a posicionar el Carry porque la
001E                  00072 Tecl_FinLeeHex                          ; instrucción "addwf PCL,F" lo pone a "0".
001E   0008           00073         return
                      00074 ;
001F                  00075 Tecl_ConvierteOrdenEnHex:                       ; Según el teclado utilizado resulta:
001F   0782           00076         addwf   PCL,F
0020   3401 3402 3403 00077         DT      1h,2h,3h,0Fh            ; Primera fila del teclado.
       340F 
0024   3404 3405 3406 00078         DT      4h,5h,6h,0Eh            ; Segunda fila del teclado
       340E 
0028   3407 3408 3409 00079         DT      7h,8h,9h,0Dh            ; Tercera fila del teclado.
       340D 
002C   340A 3400 340B 00080         DT      0Ah,0h,0Bh,0Ch          ; Cuarta fila del teclado.
       340C 
0030                  00081 Teclado_FinTablaHex
                      00082 ;
                      00083 ; Esta tabla se sitúa al principio de la librería con el propósito de que no supere la
                      00084 ; posición 0FF de memoria ROM de programa. De todas formas, en caso de que así fuera se
                      00085 ; visualizaría el siguiente mensaje de error en el proceso de ensamblado:
                      00086 ;
                      00087         IF (Teclado_FinTablaHex-1 > 0xFF)
                      00088                 ERROR   "¡Cuidado!. La tabla ha superado el tamaño de la página de los"
                      00089                 MESSG   "primeros 256 bytes de memoria ROM. NO funcionará correctamente."
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00090         ENDIF
                      00091 
                      00092 ; Subrutina "Teclado_Inicializa" --------------------------------------------------------
                      00093 ;
0030                  00094 Teclado_Inicializa
0030   1683           00095         bsf     STATUS,RP0              ; Acceso al Banco 1.
0031   1406           00096         bsf     PCF8574_INT             ; La línea RB0/INT se configura como entrada.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0032   1381           00097         bcf     OPTION_REG,NOT_RBPU     ; Habilita las resistencias de Pull-Up del Puerto B.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0033   1301           00098         bcf     OPTION_REG,INTEDG       ; Interrupción INT activa por flanco de bajada.
0034   1283           00099         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00100 ;       call    Teclado_EsperaDejePulsar
                      00101 ;       return
                      00102 
                      00103 ; Subrutina "Teclado_EsperaDejePulsar" --------------------------------------------------
                      00104 ;
                      00105 ; Permanece en esta subrutina mientras siga pulsada la tecla y deja en el puerto una
                      00106 ; combinación que permite la interrupción de la próxima pulsación.
                      00107 ;
  000000F0            00108 Teclado_Comprobacion    EQU     b'11110000'
                      00109 
0035                  00110 Teclado_EsperaDejePulsar:
0035   30F0           00111         movlw   Teclado_Comprobacion    ; Pone a cero las cuatro líneas de salida del puerto
0036   20B0           00112         call    PCF8574_Escribe         ; para que se produzca una interrupción cuando se
0037                  00113 Teclado_SigueEsperando                  ; presione alguna tecla.
0037   20D6           00114         call    Retardo_20ms
0038   20A7           00115         call    PCF8574_Lee             ; Lee el puerto.
0039   3CF0           00116         sublw   Teclado_Comprobacion    ; Si es lo mismo que lanzó es que ya no pulsa 
003A   1D03           00117         btfss   STATUS,Z                ; tecla alguna.
003B   2837           00118         goto    Teclado_SigueEsperando
003C   0008           00119         return
                      00120 ;
                      00121 ; Subrutina "Teclado_LeeOrdenTecla" -----------------------------------------------------
                      00122 ;
                      00123 ; Lee el teclado, obteniendo el orden de la tecla pulsada. 
                      00124 ;
                      00125 ; Salida:       En (W) el número de orden de la tecla pulsada. 
                      00126 ;       Además el flag Carry indica si se ha pulsado o no una tecla:
                      00127 ;       - Si se pulsa una tecla, (Carry)=1.
                      00128 ;       - Si no se pulsa tecla alguna, (Carry)=0.
                      00129 
                      00130         CBLOCK
  0000000D            00131         Tecl_I2C_DatoLeido              ; Guarda el dato leído.
  0000000E            00132         Tecl_I2C_FilaChequear           ; Fila que va a ser chequeada.
                      00133         ENDC
                      00134 
003D                  00135 Teclado_LeeOrdenTecla:
003D   018C           00136         clrf    Tecl_TeclaOrden         ; Todavía no ha empezado a chequear el teclado.
003E   30FE           00137         movlw   b'11111110'             ; Va a chequear primera fila.
003F   008E           00138         movwf   Tecl_I2C_FilaChequear
0040                  00139 Tecl_ChequeaFila                                ; (Ver esquema de conexión).
0040   20B0           00140         call    PCF8574_Escribe         ; Activa la fila correspondiente.
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0041   20A7           00141         call    PCF8574_Lee             ; Lee el puerto.
0042   008D           00142         movwf   Tecl_I2C_DatoLeido      ; Guarda la lectura efectuada.
0043                  00143 Tecl_Columna1
0043   1E0D           00144         btfss   Tecl_I2C_DatoLeido,4    ; Chequea 1ª columna buscando un cero. 
0044   2859           00145         goto    Tecl_GuardaValor                ; Sí, es cero. Salta a guardar su valor y sale.
0045   0A8C           00146         incf    Tecl_TeclaOrden,F               ; No es cero. Va a chequear la siguiente tecla.
0046                  00147 Tecl_Columna2                           ; Repite proceso para las siguientes 
0046   1E8D           00148         btfss   Tecl_I2C_DatoLeido,5    ; columnas.
0047   2859           00149         goto    Tecl_GuardaValor
0048   0A8C           00150         incf    Tecl_TeclaOrden,F
0049                  00151 Tecl_Columna3
0049   1F0D           00152         btfss   Tecl_I2C_DatoLeido,6
004A   2859           00153         goto    Tecl_GuardaValor
004B   0A8C           00154         incf    Tecl_TeclaOrden,F
004C                  00155 Tecl_Columna4
004C   1F8D           00156         btfss   Tecl_I2C_DatoLeido,7
004D   2859           00157         goto    Tecl_GuardaValor
004E   0A8C           00158         incf    Tecl_TeclaOrden,F
                      00159 ;
                      00160 ; Comprueba si ha chequeado la última tecla en cuyo caso sale. Para ello comprueba si
                      00161 ; el contenido del registro Tecl_TeclaOrden es igual al número de teclas del teclado.
                      00162 ;
004F                  00163 Tecl_TerminaColumnas
004F   3010           00164         movlw   Tecl_NumeroTeclas
0050   020C           00165         subwf   Tecl_TeclaOrden,W
0051   1903           00166         btfsc   STATUS,Z
0052   2857           00167         goto    Tecl_NoPulsada          ; Sí, se ha llegado al final del chequeo.
0053   1403           00168         bsf     STATUS,C                ; No. Va a chequear la siguiente fila.
0054   0D8E           00169         rlf     Tecl_I2C_FilaChequear,F ; Apunta a la siguiente fila.
0055   080E           00170         movf    Tecl_I2C_FilaChequear,W
0056   2840           00171         goto    Tecl_ChequeaFila
0057                  00172 Tecl_NoPulsada
0057   1003           00173         bcf     STATUS,C                ; Posiciona C=0, indicando que no ha pulsado
0058   285B           00174         goto    Tecl_FinTecladoLee      ; tecla alguna y sale.
0059                  00175 Tecl_GuardaValor
0059   080C           00176         movf    Tecl_TeclaOrden,W               ; El orden de la tecla pulsada en (W).
005A   1403           00177         bsf     STATUS,C                ; Como hay tecla pulsada pone C=1. 
005B                  00178 Tecl_FinTecladoLee
005B   0008           00179         return
                      00180         
                      00181 ;       ===================================================================
                      00182 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00183 ;         E. Palacios, F. Remiro y L. López.
                      00184 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00185 ;       ===================================================================
                      00064         INCLUDE  <BUS_I2C.INC>
                      00001 ;**************************** Librería "BUS_I2C.INC" ************************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control del bus serie I2C, 
                      00010 ; por parte de un solo microcontrolador maestro.
                      00011 ;
                      00012 ; ZONA DE DATOS **********************************************************************
                      00013 ;
                      00014         CBLOCK
  0000000F            00015         I2C_ContadorBits                ; Cuenta los bits a transmitir o a recibir.
  00000010            00016         I2C_Dato                        ; Dato a transmitir o recibido.
  00000011            00017         I2C_Flags                       ; Guarda la información del estado del bus I2C.
                      00018         ENDC
                      00019 
                      00020 #DEFINE I2C_UltimoByteLeer      I2C_Flags,0
                      00021 ;    -  (I2C_UltimoByteLeer)=0, NO es el último byte a leer por el maestro.
                      00022 ;    -  (I2C_UltimoByteLeer)=1, SÍ es el último byte a leer por el maestro.
                      00023 
                      00024 ; La definición de las líneas SCL y SDA del bus I2C se puede cambiar según las
                      00025 ; necesidades del hardware.
                      00026 
                      00027 #DEFINE SCL     PORTA,3                 ; Línea SCL del bus I2C.
                      00028 #DEFINE SDA     PORTA,4                 ; Línea SDA del bus I2C.
                      00029 ;
                      00030 ; Subrutina "SDA_Bajo" -------------------------------------------------------------------------------
                      00031 ;
005C                  00032 SDA_Bajo
005C   1683           00033         bsf     STATUS,RP0              ; Configura la línea SDA como salida.
005D   1205           00034         bcf     SDA
005E   1283           00035         bcf     STATUS,RP0
005F   1205           00036         bcf     SDA                     ; SDA en bajo.
0060   0008           00037         return
                      00038 ;
                      00039 ; Subrutina "SDA_AltaImpedancia" --------------------------------------------------------
                      00040 ;
0061                  00041 SDA_AltaImpedancia
0061   1683           00042         bsf     STATUS,RP0              ; Configura la línea SDA entrada.
0062   1605           00043         bsf     SDA                     ; Lo pone en alta impedancia y, gracias a la
0063   1283           00044         bcf     STATUS,RP0              ; Rp de esta línea, se mantiene a nivel alto.
0064   0008           00045         return
                      00046 ;
                      00047 ; Subrutina "SCL_Bajo" ------------------------------------------------------------------
                      00048 ;
0065                  00049 SCL_Bajo
0065   1683           00050         bsf     STATUS,RP0
0066   1185           00051         bcf     SCL                     ; Configura la línea SCL como salida.
0067   1283           00052         bcf     STATUS,RP0
0068   1185           00053         bcf     SCL                     ; La línea de reloj SCL en bajo.
0069   0008           00054         return
                      00055 ;
                      00056 ; Subrutina "SCL_AltaImpedancia" --------------------------------------------------------
                      00057 ;
006A                  00058 SCL_AltaImpedancia
006A   1683           00059         bsf     STATUS,RP0              ; Configura la línea SCL entrada.
006B   1585           00060         bsf     SCL                     ; Lo pone en alta impedancia y, gracias a la Rp
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006C   1283           00061         bcf     STATUS,RP0              ; de esta línea, se mantiene a nivel alto.
006D                  00062 SCL_EsperaNivelAlto
006D   1D85           00063         btfss   SCL                     ; Si algún esclavo mantiene esta línea en bajo
006E   286D           00064         goto    SCL_EsperaNivelAlto     ; hay que esperar.
006F   0008           00065         return
                      00066 ;
                      00067 ; Subrutina "I2C_EnviaStart" ------------------------------------------------------------
                      00068 ;
                      00069 ; Esta subrutina envía una condición de Start o inicio.
                      00070 ;
0070                  00071 I2C_EnviaStart
0070   2061           00072         call    SDA_AltaImpedancia      ; Línea SDA en alto.
0071   206A           00073         call    SCL_AltaImpedancia      ; Línea SCL en alto.
0072   20BF           00074         call    Retardo_4micros         ; Tiempo tBUF del protocolo.
0073   205C           00075         call    SDA_Bajo                ; Flanco de bajada de SDA mientras SCL está alto.
0074   20BF           00076         call    Retardo_4micros         ; Tiempo tHD;STA del protocolo.
0075   2065           00077         call    SCL_Bajo                ; Flanco de bajada del reloj SCL.
0076   20BF           00078         call    Retardo_4micros 
0077   0008           00079         return
                      00080 ;
                      00081 ; Subrutina "I2C_EnviaStop" -------------------------------------------------------------
                      00082 ;
                      00083 ; Esta subrutina envía un condición de Stop o parada.
                      00084 ;
0078                  00085 I2C_EnviaStop
0078   205C           00086         call    SDA_Bajo
0079   206A           00087         call    SCL_AltaImpedancia      ; Flanco de subida de SCL.
007A   20BF           00088         call    Retardo_4micros         ; Tiempo tSU;STO del protocolo.
007B   2061           00089         call    SDA_AltaImpedancia      ; Flanco de subida de SDA.
007C   20BF           00090         call    Retardo_4micros         ; Tiempo tBUF del protocolo.
007D   0008           00091         return
                      00092 ;
                      00093 ; Subrutina "I2C_EnviaByte" -------------------------------------------------------------
                      00094 ;
                      00095 ; El microcontrolador maestro transmite un byte por el bus I2C, comenzando por el bit
                      00096 ; MSB. El byte a transmitir debe estar cargado previamente en el registro de trabajo W.
                      00097 ; De la subrutina ejecutada anteriormente I2C_EnviaStart o esta misma I2C_EnviaByte, 
                      00098 ; la línea SCL se debe encontrar a nivel bajo al menos durante 5 µs.
                      00099 ;
007E                  00100 I2C_EnviaByte
007E   0090           00101         movwf   I2C_Dato                        ; Almacena el byte a transmitir.
007F   3008           00102         movlw   0x08                    ; A transmitir 8 bits.
0080   008F           00103         movwf   I2C_ContadorBits
0081                  00104 I2C_EnviaBit
0081   0D90           00105         rlf     I2C_Dato,F              ; Chequea el bit, llevándolo previamente al Carry.
0082   1803           00106         btfsc   STATUS,C
0083   2886           00107         goto    I2C_EnviaUno
0084                  00108 I2C_EnviaCero
0084   205C           00109         call    SDA_Bajo                ; Si es "0" envía un nivel bajo.
0085   2887           00110         goto    I2C_FlancoSCL
0086                  00111 I2C_EnviaUno
0086   2061           00112         call    SDA_AltaImpedancia      ; Si es "1" lo activará a alto.
0087                  00113 I2C_FlancoSCL
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0087   206A           00114         call    SCL_AltaImpedancia      ; Flanco de subida del SCL.
0088   20BF           00115         call    Retardo_4micros         ; Tiempo tHIGH del protocolo.
0089   2065           00116         call    SCL_Bajo                ; Termina el semiperiodo positivo del reloj.
008A   20BF           00117         call    Retardo_4micros         ; Tiempo tHD;DAT del protocolo.
008B   0B8F           00118         decfsz  I2C_ContadorBits,F              ; Lazo para los ocho bits.
008C   2881           00119         goto    I2C_EnviaBit
                      00120 ;
008D   2061           00121         call    SDA_AltaImpedancia      ; Libera la línea de datos.
008E   206A           00122         call    SCL_AltaImpedancia      ; Pulso en alto de reloj para que el esclavo
008F   20BF           00123         call    Retardo_4micros         ; pueda enviar el bit ACK.
0090   2065           00124         call    SCL_Bajo
0091   20BF           00125         call    Retardo_4micros
0092   0008           00126         return
                      00127 ;
                      00128 ; Subrutina "I2C_LeeByte" ---------------------------------------------------------------
                      00129 ;
                      00130 ; El microcontrolador maestro lee un byte desde el esclavo conectado al bus I2C. El dato
                      00131 ; recibido se carga en el registro I2C_Dato y lo envía a la subrutina superior a través
                      00132 ; del registro W. Se empieza a leer por el bit de mayor peso MSB.
                      00133 ; De alguna de las subrutinas ejecutadas anteriormente I2C_EnviaStart, I2C_EnviaByte
                      00134 ; o esta misma I2C_LeeByte, la línea SCL lleva en bajo al menos 5 µs.
                      00135 
0093                  00136 I2C_LeeByte
0093   3008           00137         movlw   0x08                    ; A recibir 8 bits.
0094   008F           00138         movwf   I2C_ContadorBits
0095   2061           00139         call    SDA_AltaImpedancia      ; Deja libre la línea de datos.
0096                  00140 I2C_LeeBit
0096   206A           00141         call    SCL_AltaImpedancia      ; Flanco de subida del reloj.
0097   1003           00142         bcf     STATUS,C                ; En principio supone que es "0".
0098   1A05           00143         btfsc   SDA                     ; Lee el bit
0099   1403           00144         bsf     STATUS,C                ; Si es "1" carga 1 en el Carry.
009A   0D90           00145         rlf     I2C_Dato,F              ; Lo introduce en el registro.
009B   2065           00146         call    SCL_Bajo                ; Termina el semiperiodo positivo del reloj.
009C   20BF           00147         call    Retardo_4micros         ; Tiempo tHD;DAT del protocolo.
009D   0B8F           00148         decfsz  I2C_ContadorBits,F              ; Lazo para los 8 bits.
009E   2896           00149         goto    I2C_LeeBit
                      00150 ;
                      00151 ; Chequea si este es el último byte a leer para enviar o no el bit de reconocimiento
                      00152 ; ACK en consecuencia.
                      00153 ;
009F   1C11           00154         btfss   I2C_UltimoByteLeer      ; Si es el último, no debe enviar
                      00155                                         ; el bit de reconocimiento ACK.
00A0   205C           00156         call    SDA_Bajo                ; Envía el bit de reconocimiento ACK
                      00157                                         ; porque todavía no es el último byte a leer.
00A1   206A           00158         call    SCL_AltaImpedancia      ; Pulso en alto del SCL para transmitir el
00A2   20BF           00159         call    Retardo_4micros         ; bit ACK de reconocimiento. Este es tHIGH.
00A3   2065           00160         call    SCL_Bajo                ; Pulso de bajada del SCL.
00A4   20BF           00161         call    Retardo_4micros
00A5   0810           00162         movf    I2C_Dato,W              ; El resultado se manda en el registro de
00A6   0008           00163         return                          ; de trabajo W.
                      00164         
                      00165 ;       ===================================================================
                      00166 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00167 ;         E. Palacios, F. Remiro y L. López.
                      00168 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00169 ;       ===================================================================
                      00065         INCLUDE  <PCF8574.INC>
                      00001 ;**************************** Librería "PCF8574.INC" **********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas de manejo del expansor de bus I2C PCF8574
                      00010 ; que convierte un bus de 8 líneas paralelo a bus serie I2C y viceversa.
                      00011 ;
                      00012 ; Como es posible que haya más de un expansor en el mismo circuito, se deja a la subrutina
                      00013 ; de llamada a éstas que determine las direcciones de escritura y lectura mediante las
                      00014 ; etiquetas "PCF8574_DireccionLectura" y "PCF8574_DireccionEscritura", atendiendo a las
                      00015 ; características del hardware utilizado.
                      00016 ;
                      00017 ; ZONA DE DATOS **********************************************************************
                      00018 
                      00019         CBLOCK
  00000012            00020         PCF8574_Dato                    ; Aquí guarda el resultado del dato leído o que
                      00021         ENDC                            ; se va a escribir.
                      00022 
                      00023 ; Subrutina "PCF8574_Lee" -------------------------------------------------------------
                      00024 ;
                      00025 ; Lee el periférico conectado al bus paralelo de 8 líneas del PCF8574 que actúa como
                      00026 ; entrada y el resultado lo proporciona en el registro de trabajo W.
                      00027 
00A7                  00028 PCF8574_Lee
00A7   2070           00029         call    I2C_EnviaStart          ; Envía la condición de Start.
00A8   3041           00030         movlw   PCF8574_DireccionLectura        ; Apunta al expansor de lectura.
00A9   207E           00031         call    I2C_EnviaByte
00AA   1411           00032         bsf     I2C_UltimoByteLeer
00AB   2093           00033         call    I2C_LeeByte             ; Lee el puerto.
00AC   0092           00034         movwf   PCF8574_Dato            ; Lo guarda en el registro correspondiente.
00AD   2078           00035         call    I2C_EnviaStop           ; Acaba de leer.
00AE   0812           00036         movf    PCF8574_Dato,W          ; Recupera el valor del dato leído.
00AF   0008           00037         return
                      00038 
                      00039 ; Subrutina "PCF8574_Escribe" ----------------------------------------------------------
                      00040 ;
                      00041 ; Escribe en el periférico conectado bus paralelo de 8 líneas del expansor PCF8574 que
                      00042 ; actúa como salida, el dato que le llega por el registro de trabajo W. El dato escrito
                      00043 ; es recuperado finalmente en el registro W.
                      00044 ;
00B0                  00045 PCF8574_Escribe
00B0   0092           00046         movwf   PCF8574_Dato            ; Guarda el dato a escribir.
00B1   2070           00047         call    I2C_EnviaStart          ; Envia condición de Start.
00B2   3040           00048         movlw   PCF8574_DireccionEscritura      ; Apunta al expansor que actúa como salida.
00B3   207E           00049         call    I2C_EnviaByte
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B4   0812           00050         movf    PCF8574_Dato,W          ; Recupera el valor del dato a enviar.
00B5   207E           00051         call    I2C_EnviaByte           ; Envía el dato.
00B6   2078           00052         call    I2C_EnviaStop           ; Termina.
00B7   0812           00053         movf    PCF8574_Dato,W          ; Recupera el valor del dato escrito.
00B8   0008           00054         return
                      00055 
                      00056 ;       ===================================================================
                      00057 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00058 ;         E. Palacios, F. Remiro y L. López.
                      00059 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00060 ;       ===================================================================
                      00066         INCLUDE  <RETARDOS.INC>
                      00001 ;**************************** Librería "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería con múltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; Además se pueden implementar otras subrutinas muy fácilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo máquina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo máquina tarda 4 x 1/4MHz = 1 µs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos máquina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000013            00021         R_ContA                         ; Contadores para los retardos.
  00000014            00022         R_ContB
  00000015            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuación retardos pequeños teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos máquina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos máquina y cada instrucción "nop" tarda 1 ciclo máquina.
                      00031 ;
00B9                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos máquina.
00B9   0000           00033         nop                             ; Aporta 1 ciclo máquina.
00BA   0000           00034         nop                             ; Aporta 1 ciclo máquina.
00BB   0000           00035         nop                             ; Aporta 1 ciclo máquina.
00BC   0000           00036         nop                             ; Aporta 1 ciclo máquina.
00BD   0000           00037         nop                             ; Aporta 1 ciclo máquina.
00BE                  00038 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos máquina.
00BE   0000           00039         nop                             ; Aporta 1 ciclo máquina.
00BF                  00040 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos máquina.
00BF   0008           00041         return                          ; El salto del retorno aporta 2 ciclos máquina.
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00042 ;
                      00043 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00044 ;
00C0                  00045 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos máquina.
00C0   0000           00046         nop                             ; Aporta 1 ciclo máquina.
00C1   30A4           00047         movlw   d'164'                  ; Aporta 1 ciclo máquina. Este es el valor de "K".
00C2   28CC           00048         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00C3                  00049 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos máquina.
00C3   0000           00050         nop                             ; Aporta 1 ciclo máquina.
00C4   3040           00051         movlw   d'64'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
00C5   28CC           00052         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00C6                  00053 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos máquina.
00C6   301F           00054         movlw   d'31'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
00C7   28CC           00055         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00C8                  00056 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos máquina.
00C8   0000           00057         nop                             ; Aporta 1 ciclo máquina.
00C9   300E           00058         movlw   d'14'                   ; Aporta 1 ciclo máquina. Este es el valor de "K".
00CA   28CC           00059         goto    RetardoMicros           ; Aporta 2 ciclos máquina.
00CB                  00060 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos máquina.
00CB   3005           00061         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "K".
                      00062 ;
                      00063 ; El próximo bloque "RetardoMicros" tarda:
                      00064 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos máquina.
                      00065 ;
00CC                  00066 RetardoMicros
00CC   0093           00067         movwf   R_ContA                 ; Aporta 1 ciclo máquina.
00CD                  00068 Rmicros_Bucle
00CD   0B93           00069         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
00CE   28CD           00070         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos máquina.
00CF   0008           00071         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00072 ;
                      00073 ;En total estas subrutinas tardan:
                      00074 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 µs. (para K=164 y 4 MHz).
                      00075 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 µs. (para K= 64 y 4 MHz).
                      00076 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 µs. (para K= 31 y 4 MHz).
                      00077 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 µs. (para K= 14 y 4 MHz).
                      00078 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 µs. (para K=  5 y 4 MHz).
                      00079 ;
                      00080 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00081 ;
00D0                  00082 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos máquina.
00D0   30C8           00083         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
00D1   28DF           00084         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00D2                  00085 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos máquina.
00D2   3064           00086         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "M".
00D3   28DF           00087         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00D4                  00088 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos máquina.
00D4   3032           00089         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
00D5   28DF           00090         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00D6                  00091 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos máquina.
00D6   3014           00092         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
00D7   28DF           00093         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00D8                  00094 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos máquina.
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D8   300A           00095         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "M".
00D9   28DF           00096         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00DA                  00097 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos máquina.
00DA   3005           00098         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
00DB   28DF           00099         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00DC                  00100 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos máquina.
00DC   3002           00101         movlw   d'2'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
00DD   28DF           00102         goto    Retardos_ms             ; Aporta 2 ciclos máquina.
00DE                  00103 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos máquina.
00DE   3001           00104         movlw   d'1'                    ; Aporta 1 ciclo máquina. Este es el valor de "M".
                      00105 ;
                      00106 ; El próximo bloque "Retardos_ms" tarda:
                      00107 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00108 ; = (2 + 4M + 4KM) ciclos máquina. Para K=249 y M=1 supone 1002 ciclos máquina
                      00109 ; que a 4 MHz son 1002 µs = 1 ms.
                      00110 ;
00DF                  00111 Retardos_ms
00DF   0094           00112         movwf   R_ContB                 ; Aporta 1 ciclo máquina.
00E0                  00113 R1ms_BucleExterno
00E0   30F9           00114         movlw   d'249'                  ; Aporta Mx1 ciclos máquina. Este es el valor de "K".
00E1   0093           00115         movwf   R_ContA                 ; Aporta Mx1 ciclos máquina.
00E2                  00116 R1ms_BucleInterno
00E2   0000           00117         nop                             ; Aporta KxMx1 ciclos máquina.
00E3   0B93           00118         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
00E4   28E2           00119         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos máquina.
00E5   0B94           00120         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
00E6   28E0           00121         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos máquina.
00E7   0008           00122         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00123 ;
                      00124 ;En total estas subrutinas tardan:
                      00125 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00126 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00127 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00128 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00129 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00130 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00131 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00132 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00133 ;
                      00134 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00135 ;
00E8                  00136 Retardo_20s                             ; La llamada "call" aporta 2 ciclos máquina.
00E8   30C8           00137         movlw   d'200'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
00E9   28F3           00138         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00EA                  00139 Retardo_10s                             ; La llamada "call" aporta 2 ciclos máquina.
00EA   3064           00140         movlw   d'100'                  ; Aporta 1 ciclo máquina. Este es el valor de "N".
00EB   28F3           00141         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00EC                  00142 Retardo_5s                              ; La llamada "call" aporta 2 ciclos máquina.
00EC   3032           00143         movlw   d'50'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00ED   28F3           00144         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00EE                  00145 Retardo_2s                              ; La llamada "call" aporta 2 ciclos máquina.
00EE   3014           00146         movlw   d'20'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00EF   28F3           00147         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F0                  00148 Retardo_1s                              ; La llamada "call" aporta 2 ciclos máquina.
00F0   300A           00149         movlw   d'10'                   ; Aporta 1 ciclo máquina. Este es el valor de "N".
00F1   28F3           00150         goto    Retardo_1Decima         ; Aporta 2 ciclos máquina.
00F2                  00151 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos máquina.
00F2   3005           00152         movlw   d'5'                    ; Aporta 1 ciclo máquina. Este es el valor de "N".
                      00153 ;
                      00154 ; El próximo bloque "Retardo_1Decima" tarda:
                      00155 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00156 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00157 ; = (2 + 4M + 4MN + 4KM) ciclos máquina. Para K=249, M=100 y N=1 supone 100011
                      00158 ; ciclos máquina que a 4 MHz son 100011 µs = 100 ms = 0,1 s = 1 décima de segundo.
                      00159 ;
00F3                  00160 Retardo_1Decima
00F3   0095           00161         movwf   R_ContC                 ; Aporta 1 ciclo máquina.
00F4                  00162 R1Decima_BucleExterno2
00F4   3064           00163         movlw   d'100'                  ; Aporta Nx1 ciclos máquina. Este es el valor de "M".
00F5   0094           00164         movwf   R_ContB                 ; Aporta Nx1 ciclos máquina.
00F6                  00165 R1Decima_BucleExterno
00F6   30F9           00166         movlw   d'249'                  ; Aporta MxNx1 ciclos máquina. Este es el valor de "K".
00F7   0093           00167         movwf   R_ContA                 ; Aporta MxNx1 ciclos máquina.
00F8                  00168 R1Decima_BucleInterno          
00F8   0000           00169         nop                             ; Aporta KxMxNx1 ciclos máquina.
00F9   0B93           00170         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
00FA   28F8           00171         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos máquina.
00FB   0B94           00172         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
00FC   28F6           00173         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos máquina.
00FD   0B95           00174         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
00FE   28F4           00175         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos máquina.
00FF   0008           00176         return                          ; El salto del retorno aporta 2 ciclos máquina.
                      00177 ;
                      00178 ;En total estas subrutinas tardan:
                      00179 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00180 ;                       (N=200, M=100 y K=249).
                      00181 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00182 ;                       (N=100, M=100 y K=249).
                      00183 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00184 ;                       (N= 50, M=100 y K=249).
                      00185 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00186 ;                       (N= 20, M=100 y K=249).
                      00187 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00188 ;                       (N= 10, M=100 y K=249).
                      00189 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00190 ;                       (N=  5, M=100 y K=249).
                      00191 
                      00192 ;       ===================================================================
                      00193 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00194 ;         E. Palacios, F. Remiro y L. López.
                      00195 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00196 ;       ===================================================================
                      00197 
                      00198 
                      00199 
                      00200 
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00067         INCLUDE  <LCD_4BIT.INC>
                      00001 ;**************************** Librería "LCD_4BIT.INC" ***********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00010 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00011 ;
                      00012 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00013 ; conexiones son:
                      00014 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00015 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00016 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00017 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00018 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00019 ;
                      00020 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00021 ;
                      00022 ; ZONA DE DATOS *********************************************************************
                      00023 
                      00024         CBLOCK
  00000016            00025         LCD_Dato
  00000017            00026         LCD_GuardaDato
  00000018            00027         LCD_GuardaTRISB
  00000019            00028         LCD_Auxiliar1
  0000001A            00029         LCD_Auxiliar2
                      00030         ENDC
                      00031 
  00000010            00032 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00033 
                      00034 #DEFINE  LCD_PinRS      PORTA,0
                      00035 #DEFINE  LCD_PinRW      PORTA,1
                      00036 #DEFINE  LCD_PinEnable  PORTA,2
                      00037 #DEFINE  LCD_BusDatos   PORTB
                      00038 
                      00039 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00040 ;
                      00041 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00042 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00043 ; configuración inicial hay que hacerla como sigue:
                      00044 ;
0100                  00045 LCD_Inicializa
0100   1683           00046         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
0101   1005           00047         bcf     LCD_PinRS               ; R/W y E.
0102   1105           00048         bcf     LCD_PinEnable
0103   1085           00049         bcf     LCD_PinRW
0104   1283           00050         bcf     STATUS,RP0
0105   1085           00051         bcf     LCD_PinRW               ; En caso de que esté conectado le indica
                      00052                                         ; que se va a escribir en el LCD.
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0106   1105           00053         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD poniendo E=0.
0107   1005           00054         bcf     LCD_PinRS               ; Activa el Modo Comando poniendo RS=0.
0108   20D6           00055         call    Retardo_20ms
0109   3030           00056         movlw   b'00110000'     
010A   2118           00057         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
010B   20DA           00058         call    Retardo_5ms     
010C   3030           00059         movlw   b'00110000'     
010D   2118           00060         call    LCD_EscribeLCD
010E   20C3           00061         call    Retardo_200micros
010F   3030           00062         movlw   b'00110000'     
0110   2118           00063         call    LCD_EscribeLCD
0111   3020           00064         movlw   b'00100000'             ; Interface de 4 bits.
0112   2118           00065         call    LCD_EscribeLCD
                      00066 
                      00067 ; Ahora configura el resto de los parámetros: 
                      00068 
0113   213E           00069         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
0114   213C           00070         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
0115   213A           00071         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
0116   212C           00072         call    LCD_CursorIncr          ; Cursor en modo incrementar.
0117   0008           00073         return
                      00074 
                      00075 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00076 ;
                      00077 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el pin
                      00078 ; Enable del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B que
                      00079 ; no son utilizadas para el LCD (pines RB3:RB0), primero se lee estas líneas y después se
                      00080 ; vuelve a enviar este dato sin cambiarlo.
                      00081 
0118                  00082 LCD_EscribeLCD
0118   39F0           00083         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
0119   0096           00084         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
011A   0806           00085         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
011B   390F           00086         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
011C   0496           00087         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00088                                         ; y en la parte baja lo que había antes.
011D   1683           00089         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
011E   0806           00090         movf    TRISB,W         ; Guarda la configuración que tenía antes TRISB.
011F   0098           00091         movwf   LCD_GuardaTRISB
0120   300F           00092         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
0121   0586           00093         andwf   PORTB,F                 ; como estaban y las 4 superiores como salida.
0122   1283           00094         bcf     STATUS,RP0              ; Acceso al Banco 0.
                      00095 ;
0123   0816           00096         movf    LCD_Dato,W              ; Recupera el dato a enviar.
0124   0086           00097         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
0125   1505           00098         bsf     LCD_PinEnable           ; Permite funcionamiento del LCD mediante un pequeño
0126   1105           00099         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
0127   1683           00100         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
0128   0818           00101         movf    LCD_GuardaTRISB,W       ; la configuración del Puerto B.
0129   0086           00102         movwf   PORTB                   ; Realmente es TRISB.
012A   1283           00103         bcf     STATUS,RP0              ; Acceso al Banco 0.
012B   0008           00104         return
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00105 
                      00106 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00107 ;
                      00108 ;Los comandos que pueden ser ejecutados son:
                      00109 ;
012C                  00110 LCD_CursorIncr                          ; Cursor en modo incrementar.
012C   3006           00111         movlw   b'00000110'
012D   293F           00112         goto    LCD_EnviaComando
012E                  00113 LCD_Linea1                              ; Cursor al principio de la Línea 1.
012E   3080           00114         movlw   b'10000000'             ; Dirección 00h de la DDRAM
012F   293F           00115         goto    LCD_EnviaComando
0130                  00116 LCD_Linea2                              ; Cursor al principio de la Línea 2.
0130   30C0           00117         movlw   b'11000000'             ; Dirección 40h de la DDRAM
0131   293F           00118         goto    LCD_EnviaComando
0132                  00119 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
0132   3880           00120         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
0133   293F           00121         goto    LCD_EnviaComando        ; registro W.
0134                  00122 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
0134   38C0           00123         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
0135   293F           00124         goto    LCD_EnviaComando        ; registro W.
0136                  00125 LCD_OFF                         ; Pantalla apagada.
0136   3008           00126         movlw   b'00001000'
0137   293F           00127         goto    LCD_EnviaComando
0138                  00128 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
0138   300E           00129         movlw   b'00001110'
0139   293F           00130         goto    LCD_EnviaComando
013A                  00131 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
013A   300C           00132         movlw   b'00001100'
013B   293F           00133         goto    LCD_EnviaComando
013C                  00134 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
013C   3001           00135         movlw   b'00000001'             ; cursor a principio de la línea 1.
013D   293F           00136         goto    LCD_EnviaComando
013E                  00137 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
013E   3028           00138         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00139 ;       goto    LCD_EnviaComando        ; 4 bits. 
                      00140 
                      00141 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00142 ;
                      00143 ; "LCD_EnviaComando". Escribe un comando en el registro del módulo LCD. La palabra de
                      00144 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00145 ; "LCD_Caracter". Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00146 ; a través del registro W. Trabaja en Modo Dato.
                      00147 ;
013F                  00148 LCD_EnviaComando
013F   1005           00149         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
0140   2943           00150         goto    LCD_Envia
0141                  00151 LCD_Caracter
0141   1405           00152         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
0142   214B           00153         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
0143                  00154 LCD_Envia
0143   0097           00155         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
0144   2118           00156         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
0145   0E17           00157         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00158                                         ; nibble bajo del dato a enviar a parte alta del byte.
0146   2118           00159         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
0147   1C05           00160         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
0148   20DC           00161         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
0149   20C8           00162         call    Retardo_50micros
014A   0008           00163         return  
                      00164 
                      00165 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00166 ;
                      00167 ; A partir del carácter ASCII número 127 los códigos de los caracteres definidos en la
                      00168 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00169 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00170 ;
                      00171 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00172 ; que puedan ser visualizado en el módulo LM016L.
                      00173 ; 
                      00174 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00175 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00176 
014B                  00177 LCD_CodigoCGROM
014B   0096           00178         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
014C                  00179 LCD_EnheMinuscula                       ; un carácter especial.
014C   3CF1           00180         sublw   'ñ'                     ; ¿Es la "ñ"?
014D   1D03           00181         btfss   STATUS,Z
014E   2952           00182         goto    LCD_EnheMayuscula       ; No es "ñ".
014F   30EE           00183         movlw   b'11101110'             ; Código CGROM de la "ñ".
0150   0096           00184         movwf   LCD_Dato
0151   295F           00185         goto    LCD_FinCGROM
0152                  00186 LCD_EnheMayuscula
0152   0816           00187         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0153   3CD1           00188         sublw   'Ñ'                     ; ¿Es la "Ñ"?
0154   1D03           00189         btfss   STATUS,Z
0155   2959           00190         goto    LCD_Grado               ; No es "Ñ".
0156   30EE           00191         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
0157   0096           00192         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
0158   295F           00193         goto    LCD_FinCGROM    
0159                  00194 LCD_Grado
0159   0816           00195         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
015A   3CBA           00196         sublw   'º'                     ; ¿Es el símbolo "º"?
015B   1D03           00197         btfss   STATUS,Z
015C   295F           00198         goto    LCD_FinCGROM            ; No es "º".
015D   30DF           00199         movlw   b'11011111'             ; Código CGROM del símbolo "º".
015E   0096           00200         movwf   LCD_Dato
015F                  00201 LCD_FinCGROM
015F   0816           00202         movf    LCD_Dato,W              ; En (W) el código buscado.
0160   0008           00203         return
                      00204 
                      00205 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00206 ;
                      00207 ; Visualiza espacios en blanco.
                      00208 
0161                  00209 LCD_LineaEnBlanco
0161   3010           00210         movlw   LCD_CaracteresPorLinea
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0162   2968           00211         goto    LCD_EnviaBlancos
0163                  00212 LCD_UnEspacioBlanco
0163   3001           00213         movlw   .1
0164   2968           00214         goto    LCD_EnviaBlancos
0165                  00215 LCD_DosEspaciosBlancos
0165   3002           00216         movlw   .2
0166   2968           00217         goto    LCD_EnviaBlancos
0167                  00218 LCD_TresEspaciosBlancos
0167   3003           00219         movlw   .3
0168                  00220 LCD_EnviaBlancos
0168   0099           00221         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
0169                  00222 LCD_EnviaOtroBlanco     
0169   3020           00223         movlw   ' '                     ; Esto es un espacio en blanco.
016A   2141           00224         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
016B   0B99           00225         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
016C   2969           00226         goto    LCD_EnviaOtroBlanco
016D   0008           00227         return
                      00228 
                      00229 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00230 ;
                      00231 ; Subrutina "LCD_ByteCompleto", visualiza el byte que almacena el registro W en el
                      00232 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00233 ;
                      00234 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero 
                      00235 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00236 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00237 ;
                      00238 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00239 ;
016E                  00240 LCD_Byte
016E   009A           00241         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
016F   39F0           00242         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
0170   1D03           00243         btfss   STATUS,Z                ; Si es cero lo apaga.
0171   2976           00244         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
0172   3020           00245         movlw   ' '                     ; Visualiza un espacio en blanco.
0173   2141           00246         call    LCD_Caracter
0174   2978           00247         goto    LCD_VisualizaBajo
                      00248 
0175                  00249 LCD_ByteCompleto
0175   009A           00250         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
0176                  00251 LCD_VisualizaAlto
0176   0E1A           00252         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
0177   2179           00253         call    LCD_Nibble              ; Lo visualiza.
0178                  00254 LCD_VisualizaBajo
0178   081A           00255         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00256 ;       call    LCD_Nibble              ; Lo visualiza.
                      00257 ;       return
                      00258 
                      00259 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00260 ;
                      00261 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00262 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00263 ; - Si (W)=b'01010110', se visualizará "6". 
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00264 ; - Si (W)=b'10101110', se visualizará "E". 
                      00265 ;
0179                  00266 LCD_Nibble
0179   390F           00267         andlw   b'00001111'             ; Se queda con la parte baja.
017A   0099           00268         movwf   LCD_Auxiliar1           ; Lo guarda.
017B   3C09           00269         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
017C   1C03           00270         btfss   STATUS,C        
017D   2981           00271         goto    LCD_EnviaByteLetra
017E   0819           00272         movf    LCD_Auxiliar1,W
017F   3E30           00273         addlw   '0'                     ; El número se pasa a carácter ASCII sumándole
0180   2983           00274         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
0181                  00275 LCD_EnviaByteLetra
0181   0819           00276         movf    LCD_Auxiliar1,W
0182   3E37           00277         addlw   'A'-0x0A                        ; Sí, por tanto, se le suma el ASCII de la 'A'.
0183                  00278 LCD_FinVisualizaDigito
0183   2941           00279         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00280                                         ; para no sobrecargar la pila.
                      00281                                         
                      00282 ;       ===================================================================
                      00283 ;         Del libro "MICROCONTROLADOR PIC16F84A. DESARROLLO DE PROYECTOS"
                      00284 ;         E. Palacios, F. Remiro y L. López.
                      00285 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00286 ;       ===================================================================
                      00068         END
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
DC                                00000001
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
F                                 00000001
FSR                               00000004
GIE                               00000007
I2C_ContadorBits                  0000000F
I2C_Dato                          00000010
I2C_EnviaBit                      00000081
I2C_EnviaByte                     0000007E
I2C_EnviaCero                     00000084
I2C_EnviaStart                    00000070
I2C_EnviaStop                     00000078
I2C_EnviaUno                      00000086
I2C_Flags                         00000011
I2C_FlancoSCL                     00000087
I2C_LeeBit                        00000096
I2C_LeeByte                       00000093
I2C_UltimoByteLeer                I2C_Flags,0
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
Inicio                            00000005
LCD_2Lineas4Bits5x7               0000013E
LCD_Auxiliar1                     00000019
LCD_Auxiliar2                     0000001A
LCD_Borra                         0000013C
LCD_BusDatos                      PORTB
LCD_Byte                          0000016E
LCD_ByteCompleto                  00000175
LCD_Caracter                      00000141
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   0000014B
LCD_CursorIncr                    0000012C
LCD_CursorOFF                     0000013A
LCD_CursorON                      00000138
LCD_Dato                          00000016
LCD_DosEspaciosBlancos            00000165
LCD_EnheMayuscula                 00000152
LCD_EnheMinuscula                 0000014C
LCD_Envia                         00000143
LCD_EnviaBlancos                  00000168
LCD_EnviaByteLetra                00000181
LCD_EnviaComando                  0000013F
LCD_EnviaOtroBlanco               00000169
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

LCD_EscribeLCD                    00000118
LCD_FinCGROM                      0000015F
LCD_FinVisualizaDigito            00000183
LCD_Grado                         00000159
LCD_GuardaDato                    00000017
LCD_GuardaTRISB                   00000018
LCD_Inicializa                    00000100
LCD_Linea1                        0000012E
LCD_Linea2                        00000130
LCD_LineaEnBlanco                 00000161
LCD_Nibble                        00000179
LCD_OFF                           00000136
LCD_PinEnable                     PORTA,2
LCD_PinRS                         PORTA,0
LCD_PinRW                         PORTA,1
LCD_PosicionLinea1                00000132
LCD_PosicionLinea2                00000134
LCD_TresEspaciosBlancos           00000167
LCD_UnEspacioBlanco               00000163
LCD_VisualizaAlto                 00000176
LCD_VisualizaBajo                 00000178
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCF8574_Dato                      00000012
PCF8574_DireccionEscritura        00000040
PCF8574_DireccionLectura          00000041
PCF8574_Escribe                   000000B0
PCF8574_INT                       PORTB,0
PCF8574_Lee                       000000A7
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PitidoCorto                       00000015
Principal                         0000000D
R1Decima_BucleExterno             000000F6
R1Decima_BucleExterno2            000000F4
R1Decima_BucleInterno             000000F8
R1ms_BucleExterno                 000000E0
R1ms_BucleInterno                 000000E2
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
R_ContA                           00000013
R_ContB                           00000014
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

R_ContC                           00000015
RetardoMicros                     000000CC
Retardo_100micros                 000000C6
Retardo_100ms                     000000D2
Retardo_10micros                  000000B9
Retardo_10ms                      000000D8
Retardo_10s                       000000EA
Retardo_1Decima                   000000F3
Retardo_1ms                       000000DE
Retardo_1s                        000000F0
Retardo_200micros                 000000C3
Retardo_200ms                     000000D0
Retardo_20micros                  000000CB
Retardo_20ms                      000000D6
Retardo_20s                       000000E8
Retardo_2ms                       000000DC
Retardo_2s                        000000EE
Retardo_4micros                   000000BF
Retardo_500micros                 000000C0
Retardo_500ms                     000000F2
Retardo_50micros                  000000C8
Retardo_50ms                      000000D4
Retardo_5micros                   000000BE
Retardo_5ms                       000000DA
Retardo_5s                        000000EC
Retardos_ms                       000000DF
Rmicros_Bucle                     000000CD
SCL                               PORTA,3
SCL_AltaImpedancia                0000006A
SCL_Bajo                          00000065
SCL_EsperaNivelAlto               0000006D
SDA                               PORTA,4
SDA_AltaImpedancia                00000061
SDA_Bajo                          0000005C
STATUS                            00000003
ServicioInterrupcion              0000000F
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
Tecl_ChequeaFila                  00000040
Tecl_Columna1                     00000043
Tecl_Columna2                     00000046
Tecl_Columna3                     00000049
Tecl_Columna4                     0000004C
Tecl_ConvierteOrdenEnHex          0000001F
Tecl_FinLeeHex                    0000001E
Tecl_FinTecladoLee                0000005B
Tecl_GuardaValor                  00000059
Tecl_I2C_DatoLeido                0000000D
MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

Tecl_I2C_FilaChequear             0000000E
Tecl_NoPulsada                    00000057
Tecl_NumeroTeclas                 00000010
Tecl_TeclaOrden                   0000000C
Tecl_TerminaColumnas              0000004F
Teclado_Comprobacion              000000F0
Teclado_EsperaDejePulsar          00000035
Teclado_FinTablaHex               00000030
Teclado_Inicializa                00000030
Teclado_LeeHex                    00000019
Teclado_LeeOrdenTecla             0000003D
Teclado_SigueEsperando            00000037
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
Zumbador                          PORTB,2
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXX------------ ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   385
Program Memory Words Free:   639


MPASM 03.50 Released                       I2C_TECLADO_01.ASM   10-26-2003  22:06:18         PAGE 24





Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     3 reported,     0 suppressed

